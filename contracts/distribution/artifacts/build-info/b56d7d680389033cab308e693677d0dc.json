{
	"id": "b56d7d680389033cab308e693677d0dc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TShareRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n// Note that this pool has no minter key of tSHARE (rewards).\r\n// Instead, the governance will call tSHARE distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyRocRewardPool {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // governance\r\n    address public operator;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. tSHAREs to distribute per block.\r\n        uint256 lastRewardTime; // Last time that tSHAREs distribution occurs.\r\n        uint256 accTSharePerShare; // Accumulated tSHAREs per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardTime has passed\r\n    }\r\n\r\n    IERC20 public tshare;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when tSHARE mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    // The time when tSHARE mining ends.\r\n    uint256 public poolEndTime;\r\n\r\n    uint256 public tSharePerSecond = 0.00187687 ether; // 60000 3share / (370 days * 24h * 60min * 60s)\r\n    uint256 public runningTime = 370 days; // 370 days\r\n    uint256 public constant TOTAL_REWARDS = 60000 ether;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    constructor(\r\n        address _tshare,\r\n        uint256 _poolStartTime\r\n    ) public {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_tshare != address(0)) tshare = IERC20(_tshare);\r\n        poolStartTime = _poolStartTime;\r\n        poolEndTime = poolStartTime + runningTime;\r\n        operator = msg.sender;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(operator == msg.sender, \"TShareRewardPool: caller is not the operator\");\r\n        _;\r\n    }\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"TShareRewardPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new lp to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted =\r\n        (_lastRewardTime <= poolStartTime) ||\r\n        (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({\r\n            token : _token,\r\n            allocPoint : _allocPoint,\r\n            lastRewardTime : _lastRewardTime,\r\n            accTSharePerShare : 0,\r\n            isStarted : _isStarted\r\n            }));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's tSHARE allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r\n                _allocPoint\r\n            );\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _from to _to block.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        if (_fromTime >= _toTime) return 0;\r\n        if (_toTime >= poolEndTime) {\r\n            if (_fromTime >= poolEndTime) return 0;\r\n            if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(tSharePerSecond);\r\n            return poolEndTime.sub(_fromTime).mul(tSharePerSecond);\r\n        } else {\r\n            if (_toTime <= poolStartTime) return 0;\r\n            if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(tSharePerSecond);\r\n            return _toTime.sub(_fromTime).mul(tSharePerSecond);\r\n        }\r\n    }\r\n\r\n    // View function to see pending tSHAREs on frontend.\r\n    function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accTSharePerShare = pool.accTSharePerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _tshareReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accTSharePerShare = accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accTSharePerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _tshareReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accTSharePerShare = pool.accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safeTShareTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accTSharePerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safeTShareTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accTSharePerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe tshare transfer function, just in case if rounding error causes pool to not have enough tSHAREs.\r\n    function safeTShareTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _tshareBal = tshare.balanceOf(address(this));\r\n        if (_tshareBal > 0) {\r\n            if (_amount > _tshareBal) {\r\n                tshare.safeTransfer(_to, _tshareBal);\r\n            } else {\r\n                tshare.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setOperator(address _operator) external onlyOperator {\r\n        operator = _operator;\r\n    }\r\n\r\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r\n        if (block.timestamp < poolEndTime + 90 days) {\r\n            // do not allow to drain core token (tSHARE or lps) if less than 90 days after pool ends\r\n            require(_token != tshare, \"tshare\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TShareRewardPool.sol": {
				"PolyRocRewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tshare",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "TOTAL_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accTSharePerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tSharePerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tshare",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TShareRewardPool.sol\":435:11060  contract PolyRocRewardPool {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TShareRewardPool.sol\":1579:1580  0 */\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n  0x04\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":1780:1796  0.00187687 ether */\n  0x06ab00d9a3bc00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1747:1796  uint256 public tSharePerSecond = 0.00187687 ether */\n  0x07\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":1881:1889  370 days */\n  0x01e7cb00\n    /* \"contracts/distribution/TShareRewardPool.sol\":1852:1889  uint256 public runningTime = 370 days */\n  0x08\n  sstore\n    /* \"contracts/distribution/TShareRewardPool.sol\":2279:2619  constructor(\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2401:2415  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TShareRewardPool.sol\":2383:2398  block.timestamp */\n  timestamp\n    /* \"contracts/distribution/TShareRewardPool.sol\":2383:2415  block.timestamp < _poolStartTime */\n  lt\n    /* \"contracts/distribution/TShareRewardPool.sol\":2375:2424  require(block.timestamp < _poolStartTime, \"late\") */\n  tag_5\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup1\n  0x20\n  add\n  dup3\n  dup2\n  sub\n  dup3\n  mstore\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  dup1\n  0x6c61746500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  0x20\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_5:\n    /* \"contracts/distribution/TShareRewardPool.sol\":2458:2459  0 */\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":2439:2460  _tshare != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/distribution/TShareRewardPool.sol\":2439:2446  _tshare */\n  dup3\n    /* \"contracts/distribution/TShareRewardPool.sol\":2439:2460  _tshare != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/distribution/TShareRewardPool.sol\":2435:2486  if (_tshare != address(0)) tshare = IERC20(_tshare) */\n  tag_6\n  jumpi\n    /* \"contracts/distribution/TShareRewardPool.sol\":2478:2485  _tshare */\n  dup2\n    /* \"contracts/distribution/TShareRewardPool.sol\":2462:2468  tshare */\n  0x01\n  0x00\n    /* \"contracts/distribution/TShareRewardPool.sol\":2462:2486  tshare = IERC20(_tshare) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2435:2486  if (_tshare != address(0)) tshare = IERC20(_tshare) */\ntag_6:\n    /* \"contracts/distribution/TShareRewardPool.sol\":2513:2527  _poolStartTime */\n  dup1\n    /* \"contracts/distribution/TShareRewardPool.sol\":2497:2510  poolStartTime */\n  0x05\n    /* \"contracts/distribution/TShareRewardPool.sol\":2497:2527  poolStartTime = _poolStartTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2568:2579  runningTime */\n  sload(0x08)\n    /* \"contracts/distribution/TShareRewardPool.sol\":2552:2565  poolStartTime */\n  sload(0x05)\n    /* \"contracts/distribution/TShareRewardPool.sol\":2552:2579  poolStartTime + runningTime */\n  add\n    /* \"contracts/distribution/TShareRewardPool.sol\":2538:2549  poolEndTime */\n  0x06\n    /* \"contracts/distribution/TShareRewardPool.sol\":2538:2579  poolEndTime = poolStartTime + runningTime */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2601:2611  msg.sender */\n  caller\n    /* \"contracts/distribution/TShareRewardPool.sol\":2590:2598  operator */\n  0x00\n  dup1\n    /* \"contracts/distribution/TShareRewardPool.sol\":2590:2611  operator = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":2279:2619  constructor(\r... */\n  pop\n  pop\n    /* \"contracts/distribution/TShareRewardPool.sol\":435:11060  contract PolyRocRewardPool {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TShareRewardPool.sol\":435:11060  contract PolyRocRewardPool {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f96dc11\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x96805e54\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x96805e54\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x9e63d261\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xcf4b55cb\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xee6822a7\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x5f96dc11\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x441a3e70\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x09cf6091\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TShareRewardPool.sol\":1908:1959  uint256 public constant TOTAL_REWARDS = 60000 ether */\n    tag_3:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1301:1327  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_31\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n    tag_5:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":4482:4835  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_36\n      jump\t// in\n    tag_34:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4912:5573  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_7:\n      tag_37\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_39\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":8583:9399  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_8:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6764:7680  function updatePool(uint256 _pid) public {\r... */\n    tag_9:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9470:9847  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_10:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10447:11057  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_11:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":556:579  address public operator */\n    tag_12:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1633:1661  uint256 public poolStartTime */\n    tag_13:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":6508:6688  function massUpdatePools() public {\r... */\n    tag_14:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":1712:1738  uint256 public poolEndTime */\n    tag_15:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1385:1449  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_16:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1852:1889  uint256 public runningTime = 370 days */\n    tag_17:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":3106:4384  function add(\r... */\n    tag_18:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":1747:1796  uint256 public tSharePerSecond = 0.00187687 ether */\n    tag_19:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":10338:10439  function setOperator(address _operator) external onlyOperator {\r... */\n    tag_20:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5639:6425  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_21:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":7715:8547  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_22:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/distribution/TShareRewardPool.sol\":1245:1265  IERC20 public tshare */\n    tag_23:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TShareRewardPool.sol\":1908:1959  uint256 public constant TOTAL_REWARDS = 60000 ether */\n    tag_28:\n        /* \"contracts/distribution/TShareRewardPool.sol\":1948:1959  60000 ether */\n      0x0cb49b44ba602d800000\n        /* \"contracts/distribution/TShareRewardPool.sol\":1908:1959  uint256 public constant TOTAL_REWARDS = 60000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1301:1327  PoolInfo[] public poolInfo */\n    tag_31:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1546:1580  uint256 public totalAllocPoint = 0 */\n    tag_33:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":4482:4835  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_36:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2682:2692  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2678  operator */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":2662:2741  require(operator == msg.sender, \"TShareRewardPool: caller is not the operator\") */\n      tag_84\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_84:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4561:4578  massUpdatePools() */\n      tag_86\n        /* \"contracts/distribution/TShareRewardPool.sol\":4561:4576  massUpdatePools */\n      tag_57\n        /* \"contracts/distribution/TShareRewardPool.sol\":4561:4578  massUpdatePools() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4589:4610  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4613:4621  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":4622:4626  _pid */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4613:4627  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_87\n      jumpi\n      invalid\n    tag_87:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4589:4627  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4642:4646  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4642:4656  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":4638:4788  if (pool.isStarted) {\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4776  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      tag_90\n        /* \"contracts/distribution/TShareRewardPool.sol\":4750:4761  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4727  totalAllocPoint.sub(pool.allocPoint) */\n      tag_91\n        /* \"contracts/distribution/TShareRewardPool.sol\":4711:4715  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4711:4726  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4706  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4710  totalAllocPoint.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4727  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_91:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4731  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4691:4776  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_90:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4673:4688  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":4673:4776  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4638:4788  if (pool.isStarted) {\r... */\n    tag_89:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4816:4827  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":4798:4802  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":4798:4813  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4798:4827  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2752:2753  _ */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4482:4835  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":4912:5573  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_39:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4997:5004  uint256 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5034:5041  _toTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":5021:5030  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5021:5041  _fromTime >= _toTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5017:5051  if (_fromTime >= _toTime) return 0 */\n      tag_95\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5050:5051  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5043:5051  return 0 */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5017:5051  if (_fromTime >= _toTime) return 0 */\n    tag_95:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5077:5088  poolEndTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5066:5073  _toTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":5066:5088  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5062:5566  if (_toTime >= poolEndTime) {\r... */\n      tag_96\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5122:5133  poolEndTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5109:5118  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5109:5133  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5105:5143  if (_fromTime >= poolEndTime) return 0 */\n      tag_97\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5142:5143  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5135:5143  return 0 */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5105:5143  if (_fromTime >= poolEndTime) return 0 */\n    tag_97:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5175:5188  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5162:5171  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5162:5188  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5158:5248  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(tSharePerSecond) */\n      tag_98\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5248  poolEndTime.sub(poolStartTime).mul(tSharePerSecond) */\n      tag_99\n        /* \"contracts/distribution/TShareRewardPool.sol\":5232:5247  tSharePerSecond */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5227  poolEndTime.sub(poolStartTime) */\n      tag_100\n        /* \"contracts/distribution/TShareRewardPool.sol\":5213:5226  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5208  poolEndTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5212  poolEndTime.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5227  poolEndTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_100:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5231  poolEndTime.sub(poolStartTime).mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5197:5248  poolEndTime.sub(poolStartTime).mul(tSharePerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_99:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5190:5248  return poolEndTime.sub(poolStartTime).mul(tSharePerSecond) */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5158:5248  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(tSharePerSecond) */\n    tag_98:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5317  poolEndTime.sub(_fromTime).mul(tSharePerSecond) */\n      tag_102\n        /* \"contracts/distribution/TShareRewardPool.sol\":5301:5316  tSharePerSecond */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5296  poolEndTime.sub(_fromTime) */\n      tag_103\n        /* \"contracts/distribution/TShareRewardPool.sol\":5286:5295  _fromTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5281  poolEndTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5285  poolEndTime.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5296  poolEndTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_103:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5300  poolEndTime.sub(_fromTime).mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5270:5317  poolEndTime.sub(_fromTime).mul(tSharePerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5263:5317  return poolEndTime.sub(_fromTime).mul(tSharePerSecond) */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5062:5566  if (_toTime >= poolEndTime) {\r... */\n    tag_96:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5365:5378  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5354:5361  _toTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":5354:5378  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5350:5388  if (_toTime <= poolStartTime) return 0 */\n      tag_105\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5387:5388  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5380:5388  return 0 */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5350:5388  if (_toTime <= poolStartTime) return 0 */\n    tag_105:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5420:5433  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5407:5416  _fromTime */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5407:5433  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5403:5489  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(tSharePerSecond) */\n      tag_106\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5489  _toTime.sub(poolStartTime).mul(tSharePerSecond) */\n      tag_107\n        /* \"contracts/distribution/TShareRewardPool.sol\":5473:5488  tSharePerSecond */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5468  _toTime.sub(poolStartTime) */\n      tag_108\n        /* \"contracts/distribution/TShareRewardPool.sol\":5454:5467  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5449  _toTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5453  _toTime.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5468  _toTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_108:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5472  _toTime.sub(poolStartTime).mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5442:5489  _toTime.sub(poolStartTime).mul(tSharePerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_107:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5435:5489  return _toTime.sub(poolStartTime).mul(tSharePerSecond) */\n      swap1\n      pop\n      jump(tag_94)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5403:5489  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(tSharePerSecond) */\n    tag_106:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5554  _toTime.sub(_fromTime).mul(tSharePerSecond) */\n      tag_109\n        /* \"contracts/distribution/TShareRewardPool.sol\":5538:5553  tSharePerSecond */\n      sload(0x07)\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5533  _toTime.sub(_fromTime) */\n      tag_110\n        /* \"contracts/distribution/TShareRewardPool.sol\":5523:5532  _fromTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5518  _toTime */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5522  _toTime.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5533  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_110:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5537  _toTime.sub(_fromTime).mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5511:5554  _toTime.sub(_fromTime).mul(tSharePerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_109:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5504:5554  return _toTime.sub(_fromTime).mul(tSharePerSecond) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4912:5573  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_94:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":8583:9399  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_42:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8650:8665  address _sender */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8668:8678  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":8650:8678  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8689:8710  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8713:8721  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":8722:8726  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8713:8727  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_112\n      jumpi\n      invalid\n    tag_112:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8689:8727  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8738:8759  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8762:8770  userInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":8762:8776  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8771:8775  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8762:8776  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":8762:8785  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8777:8784  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8762:8785  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":8738:8785  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8819:8826  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8804:8808  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8804:8815  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8804:8826  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":8796:8849  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8860:8876  updatePool(_pid) */\n      tag_115\n        /* \"contracts/distribution/TShareRewardPool.sol\":8871:8875  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8860:8870  updatePool */\n      tag_45\n        /* \"contracts/distribution/TShareRewardPool.sol\":8860:8876  updatePool(_pid) */\n      jump\t// in\n    tag_115:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8887:8903  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8976  user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_116\n        /* \"contracts/distribution/TShareRewardPool.sol\":8960:8964  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8960:8975  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8955  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      tag_117\n        /* \"contracts/distribution/TShareRewardPool.sol\":8950:8954  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8945  user.amount.mul(pool.accTSharePerShare) */\n      tag_118\n        /* \"contracts/distribution/TShareRewardPool.sol\":8922:8926  pool */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8922:8944  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8910  user */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8917  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8921  user.amount.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8945  user.amount.mul(pool.accTSharePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8949  user.amount.mul(pool.accTSharePerShare).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8955  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_117:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8959  user.amount.mul(pool.accTSharePerShare).div(1e18).sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8906:8976  user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_116:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8887:8976  uint256 _pending = user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9002:9003  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8991:8999  _pending */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8991:9003  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8987:9118  if (_pending > 0) {\r... */\n      iszero\n      tag_120\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":9020:9057  safeTShareTransfer(_sender, _pending) */\n      tag_121\n        /* \"contracts/distribution/TShareRewardPool.sol\":9039:9046  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9048:9056  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9020:9038  safeTShareTransfer */\n      tag_122\n        /* \"contracts/distribution/TShareRewardPool.sol\":9020:9057  safeTShareTransfer(_sender, _pending) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9088:9095  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9077:9106  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TShareRewardPool.sol\":9097:9105  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9077:9106  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8987:9118  if (_pending > 0) {\r... */\n    tag_120:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9142:9143  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9132:9139  _amount */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9132:9143  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":9128:9266  if (_amount > 0) {\r... */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":9174:9198  user.amount.sub(_amount) */\n      tag_124\n        /* \"contracts/distribution/TShareRewardPool.sol\":9190:9197  _amount */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9174:9178  user */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9174:9185  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9174:9189  user.amount.sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9174:9198  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_124:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9160:9164  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9160:9171  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9160:9198  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9213:9254  pool.token.safeTransfer(_sender, _amount) */\n      tag_125\n        /* \"contracts/distribution/TShareRewardPool.sol\":9237:9244  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9246:9253  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":9213:9217  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9213:9223  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":9213:9236  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9213:9254  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_125:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9128:9266  if (_amount > 0) {\r... */\n    tag_123:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9343  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      tag_127\n        /* \"contracts/distribution/TShareRewardPool.sol\":9338:9342  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9333  user.amount.mul(pool.accTSharePerShare) */\n      tag_128\n        /* \"contracts/distribution/TShareRewardPool.sol\":9310:9314  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9310:9332  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9298  user */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9305  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9309  user.amount.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9333  user.amount.mul(pool.accTSharePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9337  user.amount.mul(pool.accTSharePerShare).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9294:9343  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9276:9280  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9276:9291  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9276:9343  user.rewardDebt = user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9377:9381  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9368:9375  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9359:9391  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TShareRewardPool.sol\":9383:9390  _amount */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":9359:9391  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8583:9399  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":6764:7680  function updatePool(uint256 _pid) public {\r... */\n    tag_45:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6816:6837  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6840:6848  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":6849:6853  _pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":6840:6854  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_130\n      jumpi\n      invalid\n    tag_130:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":6816:6854  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6888:6892  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6888:6907  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6869:6884  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":6869:6907  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":6865:6942  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_132\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6924:6931  return; */\n      pop\n      jump(tag_129)\n        /* \"contracts/distribution/TShareRewardPool.sol\":6865:6942  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_132:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6952:6971  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6974:6978  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6974:6984  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":6974:6994  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":7003:7007  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":6974:7009  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_133:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6952:7009  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7039:7040  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7024:7035  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7024:7040  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":7020:7127  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_137\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7079:7094  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":7057:7061  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7057:7076  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7057:7094  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7109:7116  return; */\n      pop\n      pop\n      jump(tag_129)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7020:7127  if (tokenSupply == 0) {\r... */\n    tag_137:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7142:7146  pool */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7142:7156  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":7137:7275  if (!pool.isStarted) {\r... */\n      tag_138\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7190:7194  true */\n      0x01\n        /* \"contracts/distribution/TShareRewardPool.sol\":7173:7177  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7173:7187  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7173:7194  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7263  totalAllocPoint.add(pool.allocPoint) */\n      tag_139\n        /* \"contracts/distribution/TShareRewardPool.sol\":7247:7251  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7247:7262  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7242  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7246  totalAllocPoint.add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7227:7263  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7209:7224  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":7209:7263  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7137:7275  if (!pool.isStarted) {\r... */\n    tag_138:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7307:7308  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7289:7304  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7289:7308  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":7285:7625  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_140\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7325:7349  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7352:7408  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_141\n        /* \"contracts/distribution/TShareRewardPool.sol\":7371:7375  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":7371:7390  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7392:7407  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":7352:7370  getGeneratedReward */\n      tag_39\n        /* \"contracts/distribution/TShareRewardPool.sol\":7352:7408  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7325:7408  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7423:7444  uint256 _tshareReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7505  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_142\n        /* \"contracts/distribution/TShareRewardPool.sol\":7489:7504  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7484  _generatedReward.mul(pool.allocPoint) */\n      tag_143\n        /* \"contracts/distribution/TShareRewardPool.sol\":7468:7472  pool */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":7468:7483  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7463  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7467  _generatedReward.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7484  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_143:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7488  _generatedReward.mul(pool.allocPoint).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7447:7505  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_142:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7423:7505  uint256 _tshareReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7545:7613  pool.accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      tag_144\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7612  _tshareReward.mul(1e18).div(tokenSupply) */\n      tag_145\n        /* \"contracts/distribution/TShareRewardPool.sol\":7600:7611  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7595  _tshareReward.mul(1e18) */\n      tag_146\n        /* \"contracts/distribution/TShareRewardPool.sol\":7590:7594  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7585  _tshareReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7589  _tshareReward.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7595  _tshareReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7599  _tshareReward.mul(1e18).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7572:7612  _tshareReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7545:7549  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7545:7567  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7545:7571  pool.accTSharePerShare.add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":7545:7613  pool.accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7520:7524  pool */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7520:7542  pool.accTSharePerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7520:7613  pool.accTSharePerShare = pool.accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7285:7625  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_140:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7657:7672  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":7635:7639  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7635:7654  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7635:7672  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6764:7680  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_129:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":9470:9847  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_48:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9529:9550  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9553:9561  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":9562:9566  _pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9553:9567  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      invalid\n    tag_148:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9529:9567  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9578:9599  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9602:9610  userInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":9602:9616  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9611:9615  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":9602:9616  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":9602:9628  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9617:9627  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9602:9628  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":9578:9628  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9639:9654  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9657:9661  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":9657:9668  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":9639:9668  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9693:9694  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9679:9683  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9679:9690  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9679:9694  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9723:9724  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":9705:9709  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9705:9720  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":9705:9724  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":9735:9779  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_150\n        /* \"contracts/distribution/TShareRewardPool.sol\":9759:9769  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9771:9778  _amount */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9735:9739  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":9735:9745  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":9735:9758  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":9735:9779  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_150:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9825:9829  _pid */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9813:9823  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":9795:9839  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TShareRewardPool.sol\":9831:9838  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":9795:9839  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":9470:9847  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":10447:11057  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_51:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2682:2692  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2678  operator */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":2662:2741  require(operator == msg.sender, \"TShareRewardPool: caller is not the operator\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10597:10604  90 days */\n      0x76a700\n        /* \"contracts/distribution/TShareRewardPool.sol\":10583:10594  poolEndTime */\n      sload(0x06)\n        /* \"contracts/distribution/TShareRewardPool.sol\":10583:10604  poolEndTime + 90 days */\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":10565:10580  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":10565:10604  block.timestamp < poolEndTime + 90 days */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10561:11008  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      iszero\n      tag_154\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10741:10747  tshare */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10731:10747  _token != tshare */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10731:10737  _token */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10731:10747  _token != tshare */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":10723:10758  require(_token != tshare, \"tshare\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x06\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x7473686172650000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10773:10787  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10790:10798  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":10790:10805  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10773:10805  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10825:10836  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10820:10997  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_156:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10848:10854  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10842:10845  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10842:10854  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10820:10997  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10882:10903  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10906:10914  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":10915:10918  pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":10906:10919  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      invalid\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":10882:10919  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10956:10960  pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10956:10966  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10946:10966  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10946:10952  _token */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":10946:10966  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":10938:10981  require(_token != pool.token, \"pool.token\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f6f6c2e746f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10820:10997  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10856:10861  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10820:10997  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_156)\n    tag_157:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10561:11008  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      pop\n    tag_154:\n        /* \"contracts/distribution/TShareRewardPool.sol\":11018:11049  _token.safeTransfer(to, amount) */\n      tag_162\n        /* \"contracts/distribution/TShareRewardPool.sol\":11038:11040  to */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":11042:11048  amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":11018:11024  _token */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":11018:11037  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":11018:11049  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10447:11057  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":556:579  address public operator */\n    tag_53:\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1633:1661  uint256 public poolStartTime */\n    tag_55:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":6508:6688  function massUpdatePools() public {\r... */\n    tag_57:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6553:6567  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6570:6578  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":6570:6585  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6553:6585  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6601:6612  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6596:6681  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_164:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6624:6630  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6618:6621  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6618:6630  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":6596:6681  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6654:6669  updatePool(pid) */\n      tag_167\n        /* \"contracts/distribution/TShareRewardPool.sol\":6665:6668  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6654:6664  updatePool */\n      tag_45\n        /* \"contracts/distribution/TShareRewardPool.sol\":6654:6669  updatePool(pid) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6632:6637  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6596:6681  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_164)\n    tag_165:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6508:6688  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1712:1738  uint256 public poolEndTime */\n    tag_59:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1385:1449  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_62:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1852:1889  uint256 public runningTime = 370 days */\n    tag_64:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":3106:4384  function add(\r... */\n    tag_67:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2682:2692  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2678  operator */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":2662:2741  require(operator == msg.sender, \"TShareRewardPool: caller is not the operator\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3272:3298  checkPoolDuplicate(_token) */\n      tag_171\n        /* \"contracts/distribution/TShareRewardPool.sol\":3291:3297  _token */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":3272:3290  checkPoolDuplicate */\n      tag_172\n        /* \"contracts/distribution/TShareRewardPool.sol\":3272:3298  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3313:3324  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3309:3370  if (_withUpdate) {\r... */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3341:3358  massUpdatePools() */\n      tag_174\n        /* \"contracts/distribution/TShareRewardPool.sol\":3341:3356  massUpdatePools */\n      tag_57\n        /* \"contracts/distribution/TShareRewardPool.sol\":3341:3358  massUpdatePools() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3309:3370  if (_withUpdate) {\r... */\n    tag_173:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3402:3415  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3384:3399  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3384:3415  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3380:3914  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_175\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3488:3489  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3469:3484  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3469:3489  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":3465:3708  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3528:3541  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3510:3541  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3465:3708  if (_lastRewardTime == 0) {\r... */\n      jump(tag_177)\n    tag_176:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3604:3617  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3601  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3586:3617  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3582:3693  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_178\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3660:3673  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3642:3673  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3582:3693  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_178:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3465:3708  if (_lastRewardTime == 0) {\r... */\n    tag_177:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3380:3914  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_179)\n    tag_175:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3795:3796  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3776:3791  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3776:3796  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":3776:3833  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_180\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3818:3833  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3800:3815  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":3800:3833  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":3776:3833  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_180:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3772:3903  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":3872:3887  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3854:3887  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3772:3903  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_181:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3380:3914  if (block.timestamp < poolStartTime) {\r... */\n    tag_179:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3924:3939  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":3971:3984  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TShareRewardPool.sol\":3952:3967  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":3952:3984  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":3951:4034  (_lastRewardTime <= poolStartTime) ||\r... */\n      dup1\n      tag_182\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4018:4033  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":3999:4014  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":3999:4033  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":3951:4034  (_lastRewardTime <= poolStartTime) ||\r... */\n    tag_182:\n        /* \"contracts/distribution/TShareRewardPool.sol\":3924:4034  bool _isStarted =\r... */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4045:4053  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4091:4097  _token */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4125:4136  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4168:4183  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4218:4219  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":4246:4256  _isStarted */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":4059:4272  PoolInfo({\r... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4045:4273  poolInfo.push(PoolInfo({\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4288:4298  _isStarted */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4284:4377  if (_isStarted) {\r... */\n      iszero\n      tag_184\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":4333:4365  totalAllocPoint.add(_allocPoint) */\n      tag_185\n        /* \"contracts/distribution/TShareRewardPool.sol\":4353:4364  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":4333:4348  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":4333:4352  totalAllocPoint.add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":4333:4365  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/distribution/TShareRewardPool.sol\":4315:4330  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TShareRewardPool.sol\":4315:4365  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":4284:4377  if (_isStarted) {\r... */\n    tag_184:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2752:2753  _ */\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":3106:4384  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1747:1796  uint256 public tSharePerSecond = 0.00187687 ether */\n    tag_69:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":10338:10439  function setOperator(address _operator) external onlyOperator {\r... */\n    tag_72:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2682:2692  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2678  operator */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2670:2692  operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TShareRewardPool.sol\":2662:2741  require(operator == msg.sender, \"TShareRewardPool: caller is not the operator\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e\n      0x2c\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_187:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10422:10431  _operator */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10411:10419  operator */\n      0x00\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10411:10431  operator = _operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10338:10439  function setOperator(address _operator) external onlyOperator {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":5639:6425  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_75:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5713:5720  uint256 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5733:5754  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":5757:5765  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":5766:5770  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":5757:5771  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_190\n      jumpi\n      invalid\n    tag_190:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":5733:5771  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5782:5803  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5806:5814  userInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":5806:5820  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5815:5819  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":5806:5820  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":5806:5827  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5821:5826  _user */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":5806:5827  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":5782:5827  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5838:5863  uint256 accTSharePerShare */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5866:5870  pool */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":5866:5888  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5838:5888  uint256 accTSharePerShare = pool.accTSharePerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5899:5918  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":5921:5925  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5921:5931  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":5921:5941  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":5950:5954  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":5921:5956  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5899:5956  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5989:5993  pool */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":5989:6008  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":5971:5986  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":5971:6008  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":5971:6028  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6027:6028  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6012:6023  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":6012:6028  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":5971:6028  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_196:\n        /* \"contracts/distribution/TShareRewardPool.sol\":5967:6335  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":6045:6069  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6072:6128  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_198\n        /* \"contracts/distribution/TShareRewardPool.sol\":6091:6095  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6091:6110  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6112:6127  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TShareRewardPool.sol\":6072:6090  getGeneratedReward */\n      tag_39\n        /* \"contracts/distribution/TShareRewardPool.sol\":6072:6128  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_198:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6045:6128  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6143:6164  uint256 _tshareReward */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6225  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_199\n        /* \"contracts/distribution/TShareRewardPool.sol\":6209:6224  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6204  _generatedReward.mul(pool.allocPoint) */\n      tag_200\n        /* \"contracts/distribution/TShareRewardPool.sol\":6188:6192  pool */\n      dup9\n        /* \"contracts/distribution/TShareRewardPool.sol\":6188:6203  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6183  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6187  _generatedReward.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6204  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_200:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6208  _generatedReward.mul(pool.allocPoint).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6167:6225  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_199:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6143:6225  uint256 _tshareReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":6260:6323  accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      tag_201\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6322  _tshareReward.mul(1e18).div(tokenSupply) */\n      tag_202\n        /* \"contracts/distribution/TShareRewardPool.sol\":6310:6321  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6305  _tshareReward.mul(1e18) */\n      tag_203\n        /* \"contracts/distribution/TShareRewardPool.sol\":6300:6304  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6295  _tshareReward */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6299  _tshareReward.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6305  _tshareReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_203:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6309  _tshareReward.mul(1e18).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6282:6322  _tshareReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_202:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6260:6277  accTSharePerShare */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":6260:6281  accTSharePerShare.add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6260:6323  accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6240:6323  accTSharePerShare = accTSharePerShare.add(_tshareReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5967:6335  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_197:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6417  user.amount.mul(accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_204\n        /* \"contracts/distribution/TShareRewardPool.sol\":6401:6405  user */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":6401:6416  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6396  user.amount.mul(accTSharePerShare).div(1e18) */\n      tag_205\n        /* \"contracts/distribution/TShareRewardPool.sol\":6391:6395  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6386  user.amount.mul(accTSharePerShare) */\n      tag_206\n        /* \"contracts/distribution/TShareRewardPool.sol\":6368:6385  accTSharePerShare */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6356  user */\n      dup9\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6363  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6367  user.amount.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6386  user.amount.mul(accTSharePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6390  user.amount.mul(accTSharePerShare).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6396  user.amount.mul(accTSharePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_205:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6400  user.amount.mul(accTSharePerShare).div(1e18).sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":6352:6417  user.amount.mul(accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_204:\n        /* \"contracts/distribution/TShareRewardPool.sol\":6345:6417  return user.amount.mul(accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":5639:6425  function pendingShare(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":7715:8547  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_78:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7781:7796  address _sender */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7799:7809  msg.sender */\n      caller\n        /* \"contracts/distribution/TShareRewardPool.sol\":7781:7809  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7820:7841  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7844:7852  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":7853:7857  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7844:7858  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_208\n      jumpi\n      invalid\n    tag_208:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":7820:7858  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7869:7890  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7893:7901  userInfo */\n      0x03\n        /* \"contracts/distribution/TShareRewardPool.sol\":7893:7907  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7902:7906  _pid */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":7893:7907  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":7893:7916  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7908:7915  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":7893:7916  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TShareRewardPool.sol\":7869:7916  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":7927:7943  updatePool(_pid) */\n      tag_210\n        /* \"contracts/distribution/TShareRewardPool.sol\":7938:7942  _pid */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":7927:7937  updatePool */\n      tag_45\n        /* \"contracts/distribution/TShareRewardPool.sol\":7927:7943  updatePool(_pid) */\n      jump\t// in\n    tag_210:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7972:7973  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":7958:7962  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":7958:7969  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":7958:7973  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":7954:8248  if (user.amount > 0) {\r... */\n      iszero\n      tag_211\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":7990:8006  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8079  user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_212\n        /* \"contracts/distribution/TShareRewardPool.sol\":8063:8067  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8063:8078  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8058  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      tag_213\n        /* \"contracts/distribution/TShareRewardPool.sol\":8053:8057  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8048  user.amount.mul(pool.accTSharePerShare) */\n      tag_214\n        /* \"contracts/distribution/TShareRewardPool.sol\":8025:8029  pool */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8025:8047  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8013  user */\n      dup8\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8020  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8024  user.amount.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8048  user.amount.mul(pool.accTSharePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_214:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8052  user.amount.mul(pool.accTSharePerShare).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8058  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8062  user.amount.mul(pool.accTSharePerShare).div(1e18).sub */\n      tag_92\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8009:8079  user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_212:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7990:8079  uint256 _pending = user.amount.mul(pool.accTSharePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8109:8110  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8098:8106  _pending */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8098:8110  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8094:8237  if (_pending > 0) {\r... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":8131:8168  safeTShareTransfer(_sender, _pending) */\n      tag_216\n        /* \"contracts/distribution/TShareRewardPool.sol\":8150:8157  _sender */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8159:8167  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8131:8149  safeTShareTransfer */\n      tag_122\n        /* \"contracts/distribution/TShareRewardPool.sol\":8131:8168  safeTShareTransfer(_sender, _pending) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8203:8210  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8192:8221  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TShareRewardPool.sol\":8212:8220  _pending */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8192:8221  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8094:8237  if (_pending > 0) {\r... */\n    tag_215:\n        /* \"contracts/distribution/TShareRewardPool.sol\":7954:8248  if (user.amount > 0) {\r... */\n      pop\n    tag_211:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8272:8273  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":8262:8269  _amount */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8262:8273  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":8258:8415  if (_amount > 0) {\r... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":8290:8350  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_218\n        /* \"contracts/distribution/TShareRewardPool.sol\":8318:8325  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8335:8339  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":8342:8349  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8290:8294  pool */\n      dup6\n        /* \"contracts/distribution/TShareRewardPool.sol\":8290:8300  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":8290:8317  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_219\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8290:8350  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_218:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8379:8403  user.amount.add(_amount) */\n      tag_220\n        /* \"contracts/distribution/TShareRewardPool.sol\":8395:8402  _amount */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8379:8383  user */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":8379:8390  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8379:8394  user.amount.add */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8379:8403  user.amount.add(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8365:8369  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8365:8376  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8365:8403  user.amount = user.amount.add(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8258:8415  if (_amount > 0) {\r... */\n    tag_217:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8492  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      tag_221\n        /* \"contracts/distribution/TShareRewardPool.sol\":8487:8491  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8482  user.amount.mul(pool.accTSharePerShare) */\n      tag_222\n        /* \"contracts/distribution/TShareRewardPool.sol\":8459:8463  pool */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8459:8481  pool.accTSharePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8447  user */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8454  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8458  user.amount.mul */\n      tag_101\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8482  user.amount.mul(pool.accTSharePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_222:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8486  user.amount.mul(pool.accTSharePerShare).div */\n      tag_119\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":8443:8492  user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"contracts/distribution/TShareRewardPool.sol\":8425:8429  user */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":8425:8440  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":8425:8492  user.rewardDebt = user.amount.mul(pool.accTSharePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":8525:8529  _pid */\n      dup5\n        /* \"contracts/distribution/TShareRewardPool.sol\":8516:8523  _sender */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":8508:8539  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TShareRewardPool.sol\":8531:8538  _amount */\n      dup7\n        /* \"contracts/distribution/TShareRewardPool.sol\":8508:8539  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TShareRewardPool.sol\":7715:8547  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":1245:1265  IERC20 public tshare */\n    tag_80:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_226\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_226:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_101:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_228\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_227)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_229\n      jumpi\n      invalid\n    tag_229:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_232\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_233\n      jumpi\n      invalid\n    tag_233:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":9965:10330  function safeTShareTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_122:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10043:10061  uint256 _tshareBal */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10064:10070  tshare */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10064:10080  tshare.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TShareRewardPool.sol\":10089:10093  this */\n      address\n        /* \"contracts/distribution/TShareRewardPool.sol\":10064:10095  tshare.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_235:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_237\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_237:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_238\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_238:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10043:10095  uint256 _tshareBal = tshare.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":10123:10124  0 */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":10110:10120  _tshareBal */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":10110:10124  _tshareBal > 0 */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10106:10323  if (_tshareBal > 0) {\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10155:10165  _tshareBal */\n      dup1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10145:10152  _amount */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":10145:10165  _amount > _tshareBal */\n      gt\n        /* \"contracts/distribution/TShareRewardPool.sol\":10141:10312  if (_amount > _tshareBal) {\r... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":10186:10222  tshare.safeTransfer(_to, _tshareBal) */\n      tag_241\n        /* \"contracts/distribution/TShareRewardPool.sol\":10206:10209  _to */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10211:10221  _tshareBal */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":10186:10192  tshare */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10186:10205  tshare.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10186:10222  tshare.safeTransfer(_to, _tshareBal) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_241:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10141:10312  if (_amount > _tshareBal) {\r... */\n      jump(tag_242)\n    tag_240:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10263:10296  tshare.safeTransfer(_to, _amount) */\n      tag_243\n        /* \"contracts/distribution/TShareRewardPool.sol\":10283:10286  _to */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10288:10295  _amount */\n      dup4\n        /* \"contracts/distribution/TShareRewardPool.sol\":10263:10269  tshare */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":10263:10282  tshare.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_126\n      swap1\n        /* \"contracts/distribution/TShareRewardPool.sol\":10263:10296  tshare.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10141:10312  if (_amount > _tshareBal) {\r... */\n    tag_242:\n        /* \"contracts/distribution/TShareRewardPool.sol\":10106:10323  if (_tshareBal > 0) {\r... */\n    tag_239:\n        /* \"contracts/distribution/TShareRewardPool.sol\":9965:10330  function safeTShareTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_245\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_245:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TShareRewardPool.sol\":2769:3031  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_172:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2837:2851  uint256 length */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":2854:2862  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":2854:2869  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2837:2869  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2885:2896  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TShareRewardPool.sol\":2880:3024  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_248:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2908:2914  length */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":2902:2905  pid */\n      dup2\n        /* \"contracts/distribution/TShareRewardPool.sol\":2902:2914  pid < length */\n      lt\n        /* \"contracts/distribution/TShareRewardPool.sol\":2880:3024  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_249\n      jumpi\n        /* \"contracts/distribution/TShareRewardPool.sol\":2969:2975  _token */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":2946:2975  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2946:2954  poolInfo */\n      0x02\n        /* \"contracts/distribution/TShareRewardPool.sol\":2955:2958  pid */\n      dup3\n        /* \"contracts/distribution/TShareRewardPool.sol\":2946:2959  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_251\n      jumpi\n      invalid\n    tag_251:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TShareRewardPool.sol\":2946:2965  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TShareRewardPool.sol\":2946:2975  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TShareRewardPool.sol\":2938:3012  require(poolInfo[pid].token != _token, \"TShareRewardPool: existing pool?\") */\n      tag_253\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x545368617265526577617264506f6f6c3a206578697374696e6720706f6f6c3f\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_253:\n        /* \"contracts/distribution/TShareRewardPool.sol\":2916:2921  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2880:3024  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"contracts/distribution/TShareRewardPool.sol\":2769:3031  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_219:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_246\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_257\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_258\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_260\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_260:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_258:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_263\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_264\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_264:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_266\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_266:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_267\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_268\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_269\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_269:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_270:\n      0x20\n      dup4\n      lt\n      tag_272\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_270)\n    tag_272:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_275\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_274)\n    tag_275:\n      0x60\n      swap2\n      pop\n    tag_274:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_277\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_276:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_279)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_284:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_286\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_284)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_287\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_287:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_279:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e 545368617265526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220af75e0974f2541d2b95ef49d873e9176b7eadfcc6bf05fa69a6273e2e16d5ef564736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260006004556606ab00d9a3bc006007556301e7cb0060085534801561002857600080fd5b506040516125ea3803806125ea8339818101604052604081101561004b57600080fd5b8101908080519060200190929190805190602001909291905050508042106100db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146101515781600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8060058190555060085460055401600681905550336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050612434806101b66000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80635f96dc11116100b857806396805e541161007c57806396805e54146104755780639e63d261146104d9578063b3ab15fb146104f7578063cf4b55cb1461053b578063e2bbb1581461059d578063ee6822a7146105d557610137565b80635f96dc11146103a8578063630b5ba1146103c65780636e271dd5146103d057806393f1a40b146103ee578063943f013d1461045757610137565b8063441a3e70116100ff578063441a3e701461027257806351eb05a6146102aa5780635312ea8e146102d857806354575af414610306578063570ca7351461037457610137565b806309cf60911461013c5780631526fe271461015a57806317caf6f1146101d05780631ab06ee5146101ee578063231f0c6a14610226575b600080fd5b610144610609565b6040518082815260200191505060405180910390f35b6101866004803603602081101561017057600080fd5b8101908080359060200190929190505050610617565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6101d8610687565b6040518082815260200191505060405180910390f35b6102246004803603604081101561020457600080fd5b81019080803590602001909291908035906020019092919050505061068d565b005b61025c6004803603604081101561023c57600080fd5b8101908080359060200190929190803590602001909291905050506107af565b6040518082815260200191505060405180910390f35b6102a86004803603604081101561028857600080fd5b8101908080359060200190929190803590602001909291905050506108c2565b005b6102d6600480360360208110156102c057600080fd5b8101908080359060200190929190505050610b7a565b005b610304600480360360208110156102ee57600080fd5b8101908080359060200190929190505050610d89565b005b6103726004803603606081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ebd565b005b61037c61116d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b0611191565b6040518082815260200191505060405180910390f35b6103ce611197565b005b6103d86111c4565b6040518082815260200191505060405180910390f35b61043a6004803603604081101561040457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ca565b604051808381526020018281526020019250505060405180910390f35b61045f6111fb565b6040518082815260200191505060405180910390f35b6104d76004803603608081101561048b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080359060200190929190505050611201565b005b6104e1611438565b6040518082815260200191505060405180910390f35b6105396004803603602081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143e565b005b6105876004803603604081101561055157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611525565b6040518082815260200191505060405180910390f35b6105d3600480360360408110156105b357600080fd5b81019080803590602001909291908035906020019092919050505061175d565b005b6105dd6119ab565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b690cb49b44ba602d80000081565b6002818154811061062457fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b610739611197565b60006002838154811061074857fe5b906000526020600020906005020190508060040160009054906101000a900460ff16156107a15761079a8261078c83600101546004546119d190919063ffffffff16565b611a5490919063ffffffff16565b6004819055505b818160010181905550505050565b60008183106107c157600090506108bc565b60065482106108475760065483106107dc57600090506108bc565b6005548311610817576108106007546108026005546006546119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b610840600754610832856006546119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b600554821161085957600090506108bc565b60055483116108925761088b60075461087d600554856119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b6108b96007546108ab85856119d190919063ffffffff16565b611adc90919063ffffffff16565b90505b92915050565b60003390506000600284815481106108d657fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905083816000015410156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b6109bd85610b7a565b6000610a0a82600101546109fc670de0b6b3a76400006109ee87600301548760000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b90506000811115610a6e57610a1f8482611beb565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610ae657610a8e8583600001546119d190919063ffffffff16565b8260000181905550610ae584868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b5b610b1b670de0b6b3a7640000610b0d85600301548560000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b600060028281548110610b8957fe5b9060005260206000209060050201905080600201544211610baa5750610d86565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d6020811015610c6157600080fd5b810190808051906020019092919050505090506000811415610c8d574282600201819055505050610d86565b8160040160009054906101000a900460ff16610ce05760018260040160006101000a81548160ff021916908315150217905550610cd98260010154600454611a5490919063ffffffff16565b6004819055505b60006004541115610d7a576000610cfb8360020154426107af565b90506000610d2a600454610d1c866001015485611adc90919063ffffffff16565b611b6290919063ffffffff16565b9050610d6f610d5c84610d4e670de0b6b3a764000085611adc90919063ffffffff16565b611b6290919063ffffffff16565b8560030154611a5490919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b600060028281548110610d9857fe5b9060005260206000209060050201905060006003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015490506000826000018190555060008260010181905550610e6833828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b6276a7006006540142101561113d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611034576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f747368617265000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600280549050905060005b8181101561113a5760006002828154811061105857fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561112e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611041565b50505b61116881838573ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000600280549050905060005b818110156111c0576111b581610b7a565b8060010190506111a4565b5050565b60065481565b6003602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b6112ae83611e0c565b81156112bd576112bc611197565b5b6005544210156112f05760008114156112da5760055490506112eb565b6005548110156112ea5760055490505b5b611308565b60008114806112fe57504281105b15611307574290505b5b60006005548211158061131b5750428211155b905060026040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156114315761142a85600454611a5490919063ffffffff16565b6004819055505b5050505050565b60075481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806002848154811061153557fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561162f57600080fd5b505afa158015611643573d6000803e3d6000fd5b505050506040513d602081101561165957600080fd5b81019080805190602001909291905050509050836002015442118015611680575060008114155b1561170a5760006116958560020154426107af565b905060006116c46004546116b6886001015485611adc90919063ffffffff16565b611b6290919063ffffffff16565b90506117056116f6846116e8670de0b6b3a764000085611adc90919063ffffffff16565b611b6290919063ffffffff16565b85611a5490919063ffffffff16565b935050505b6117518360010154611743670de0b6b3a7640000611735868860000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b94505050505092915050565b600033905060006002848154811061177157fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506117de85610b7a565b60008160000154111561189e576000611838826001015461182a670de0b6b3a764000061181c87600301548760000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b9050600081111561189c5761184d8482611beb565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000841115611918576118f88330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f11909392919063ffffffff16565b61190f848260000154611a5490919063ffffffff16565b81600001819055505b61194d670de0b6b3a764000061193f84600301548460000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b8160010181905550848373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040518082815260200191505060405180910390a35050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082821115611a49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015611ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611aef5760009050611b5c565b6000828402905082848281611b0057fe5b0414611b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123b46021913960400191505060405180910390fd5b809150505b92915050565b6000808211611bd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381611be257fe5b04905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611c7657600080fd5b505afa158015611c8a573d6000803e3d6000fd5b505050506040513d6020811015611ca057600080fd5b810190808051906020019092919050505090506000811115611d655780821115611d1657611d118382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b611d64565b611d638383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b5b5b505050565b611e078363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b505050565b6000600280549050905060005b81811015611f0c578273ffffffffffffffffffffffffffffffffffffffff1660028281548110611e4557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f545368617265526577617264506f6f6c3a206578697374696e6720706f6f6c3f81525060200191505060405180910390fd5b806001019050611e19565b505050565b611fcc846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b50505050565b6060612034826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120c19092919063ffffffff16565b90506000815111156120bc5780806020019051602081101561205557600080fd5b81019080805190602001909291905050506120bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123d5602a913960400191505060405180910390fd5b5b505050565b60606120d084846000856120d9565b90509392505050565b606082471015612134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061238e6026913960400191505060405180910390fd5b61213d85612282565b6121af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106121ff57805182526020820191506020810190506020830392506121dc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612261576040519150601f19603f3d011682016040523d82523d6000602084013e612266565b606091505b5091509150612276828286612295565b92505050949350505050565b600080823b905060008111915050919050565b606083156122a55782905061235a565b6000835111156122b85782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561231f578082015181840152602081019050612304565b50505050905090810190601f16801561234c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe545368617265526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220af75e0974f2541d2b95ef49d873e9176b7eadfcc6bf05fa69a6273e2e16d5ef564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 SSTORE PUSH7 0x6AB00D9A3BC00 PUSH1 0x7 SSTORE PUSH4 0x1E7CB00 PUSH1 0x8 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x25EA CODESIZE SUB DUP1 PUSH2 0x25EA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 TIMESTAMP LT PUSH2 0xDB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x151 JUMPI DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x8 SLOAD PUSH1 0x5 SLOAD ADD PUSH1 0x6 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2434 DUP1 PUSH2 0x1B6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x9E63D261 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xCF4B55CB EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xEE6822A7 EQ PUSH2 0x5D5 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x457 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x374 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x1197 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D8 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1201 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E1 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x143E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x175D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DD PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0xCB49B44BA602D800000 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x748 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x79A DUP3 PUSH2 0x78C DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x7C1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT PUSH2 0x847 JUMPI PUSH1 0x6 SLOAD DUP4 LT PUSH2 0x7DC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 GT PUSH2 0x817 JUMPI PUSH2 0x810 PUSH1 0x7 SLOAD PUSH2 0x802 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x840 PUSH1 0x7 SLOAD PUSH2 0x832 DUP6 PUSH1 0x6 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x859 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 GT PUSH2 0x892 JUMPI PUSH2 0x88B PUSH1 0x7 SLOAD PUSH2 0x87D PUSH1 0x5 SLOAD DUP6 PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x8B9 PUSH1 0x7 SLOAD PUSH2 0x8AB DUP6 DUP6 PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BD DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x9FC PUSH8 0xDE0B6B3A7640000 PUSH2 0x9EE DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA1F DUP5 DUP3 PUSH2 0x1BEB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xA8E DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAE5 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xB1B PUSH8 0xDE0B6B3A7640000 PUSH2 0xB0D DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xBAA JUMPI POP PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xC8D JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xD86 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE0 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCD9 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 PUSH2 0xCFB DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD2A PUSH1 0x4 SLOAD PUSH2 0xD1C DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD6F PUSH2 0xD5C DUP5 PUSH2 0xD4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD98 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE68 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x6 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x113D JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7473686172650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1058 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1041 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1168 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11B5 DUP2 PUSH2 0xB7A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AE DUP4 PUSH2 0x1E0C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x1197 JUMP JUMPDEST JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12DA JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x5 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x12FE JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x1307 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x131B JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1431 JUMPI PUSH2 0x142A DUP6 PUSH1 0x4 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1535 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1680 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x170A JUMPI PUSH1 0x0 PUSH2 0x1695 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16C4 PUSH1 0x4 SLOAD PUSH2 0x16B6 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1705 PUSH2 0x16F6 DUP5 PUSH2 0x16E8 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x1751 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1743 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1735 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1771 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x17DE DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x189E JUMPI PUSH1 0x0 PUSH2 0x1838 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x182A PUSH8 0xDE0B6B3A7640000 PUSH2 0x181C DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x189C JUMPI PUSH2 0x184D DUP5 DUP3 PUSH2 0x1BEB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x18F8 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F11 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x190F DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x194D PUSH8 0xDE0B6B3A7640000 PUSH2 0x193F DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1AEF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B00 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23B4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1BD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1BE2 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1D65 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D11 DUP4 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x1D63 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E07 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FD2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F0C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x545368617265526577617264506F6F6C3A206578697374696E6720706F6F6C3F DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1E19 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FCC DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2034 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20BC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23D5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x20D0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x238E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x213D DUP6 PUSH2 0x2282 JUMP JUMPDEST PUSH2 0x21AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x21FF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2276 DUP3 DUP3 DUP7 PUSH2 0x2295 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x22A5 JUMPI DUP3 SWAP1 POP PUSH2 0x235A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x22B8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2304 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x234C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD MSTORE8 PUSH9 0x617265526577617264 POP PUSH16 0x6F6C3A2063616C6C6572206973206E6F PUSH21 0x20746865206F70657261746F72416464726573733A KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220AF75E097 0x4F 0x25 COINBASE 0xD2 0xB9 0x5E DELEGATECALL SWAP14 DUP8 RETURNDATACOPY SWAP2 PUSH23 0xB7EADFCC6BF05FA69A6273E2E16D5EF564736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "435:10625:4:-:0;;;1579:1;1546:34;;1780:16;1747:49;;1881:8;1852:37;;2279:340;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2401:14;2383:15;:32;2375:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2458:1;2439:21;;:7;:21;;;2435:51;;2478:7;2462:6;;:24;;;;;;;;;;;;;;;;;;2435:51;2513:14;2497:13;:30;;;;2568:11;;2552:13;;:27;2538:11;:41;;;;2601:10;2590:8;;:21;;;;;;;;;;;;;;;;;;2279:340;;435:10625;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101375760003560e01c80635f96dc11116100b857806396805e541161007c57806396805e54146104755780639e63d261146104d9578063b3ab15fb146104f7578063cf4b55cb1461053b578063e2bbb1581461059d578063ee6822a7146105d557610137565b80635f96dc11146103a8578063630b5ba1146103c65780636e271dd5146103d057806393f1a40b146103ee578063943f013d1461045757610137565b8063441a3e70116100ff578063441a3e701461027257806351eb05a6146102aa5780635312ea8e146102d857806354575af414610306578063570ca7351461037457610137565b806309cf60911461013c5780631526fe271461015a57806317caf6f1146101d05780631ab06ee5146101ee578063231f0c6a14610226575b600080fd5b610144610609565b6040518082815260200191505060405180910390f35b6101866004803603602081101561017057600080fd5b8101908080359060200190929190505050610617565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6101d8610687565b6040518082815260200191505060405180910390f35b6102246004803603604081101561020457600080fd5b81019080803590602001909291908035906020019092919050505061068d565b005b61025c6004803603604081101561023c57600080fd5b8101908080359060200190929190803590602001909291905050506107af565b6040518082815260200191505060405180910390f35b6102a86004803603604081101561028857600080fd5b8101908080359060200190929190803590602001909291905050506108c2565b005b6102d6600480360360208110156102c057600080fd5b8101908080359060200190929190505050610b7a565b005b610304600480360360208110156102ee57600080fd5b8101908080359060200190929190505050610d89565b005b6103726004803603606081101561031c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610ebd565b005b61037c61116d565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103b0611191565b6040518082815260200191505060405180910390f35b6103ce611197565b005b6103d86111c4565b6040518082815260200191505060405180910390f35b61043a6004803603604081101561040457600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111ca565b604051808381526020018281526020019250505060405180910390f35b61045f6111fb565b6040518082815260200191505060405180910390f35b6104d76004803603608081101561048b57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080359060200190929190505050611201565b005b6104e1611438565b6040518082815260200191505060405180910390f35b6105396004803603602081101561050d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061143e565b005b6105876004803603604081101561055157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611525565b6040518082815260200191505060405180910390f35b6105d3600480360360408110156105b357600080fd5b81019080803590602001909291908035906020019092919050505061175d565b005b6105dd6119ab565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b690cb49b44ba602d80000081565b6002818154811061062457fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60045481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610731576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b610739611197565b60006002838154811061074857fe5b906000526020600020906005020190508060040160009054906101000a900460ff16156107a15761079a8261078c83600101546004546119d190919063ffffffff16565b611a5490919063ffffffff16565b6004819055505b818160010181905550505050565b60008183106107c157600090506108bc565b60065482106108475760065483106107dc57600090506108bc565b6005548311610817576108106007546108026005546006546119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b610840600754610832856006546119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b600554821161085957600090506108bc565b60055483116108925761088b60075461087d600554856119d190919063ffffffff16565b611adc90919063ffffffff16565b90506108bc565b6108b96007546108ab85856119d190919063ffffffff16565b611adc90919063ffffffff16565b90505b92915050565b60003390506000600284815481106108d657fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905083816000015410156109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b6109bd85610b7a565b6000610a0a82600101546109fc670de0b6b3a76400006109ee87600301548760000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b90506000811115610a6e57610a1f8482611beb565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610ae657610a8e8583600001546119d190919063ffffffff16565b8260000181905550610ae584868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b5b610b1b670de0b6b3a7640000610b0d85600301548560000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b600060028281548110610b8957fe5b9060005260206000209060050201905080600201544211610baa5750610d86565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610c3757600080fd5b505afa158015610c4b573d6000803e3d6000fd5b505050506040513d6020811015610c6157600080fd5b810190808051906020019092919050505090506000811415610c8d574282600201819055505050610d86565b8160040160009054906101000a900460ff16610ce05760018260040160006101000a81548160ff021916908315150217905550610cd98260010154600454611a5490919063ffffffff16565b6004819055505b60006004541115610d7a576000610cfb8360020154426107af565b90506000610d2a600454610d1c866001015485611adc90919063ffffffff16565b611b6290919063ffffffff16565b9050610d6f610d5c84610d4e670de0b6b3a764000085611adc90919063ffffffff16565b611b6290919063ffffffff16565b8560030154611a5490919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b600060028281548110610d9857fe5b9060005260206000209060050201905060006003600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015490506000826000018190555060008260010181905550610e6833828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610f61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b6276a7006006540142101561113d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611034576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260068152602001807f747368617265000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600280549050905060005b8181101561113a5760006002828154811061105857fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561112e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611041565b50505b61116881838573ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000600280549050905060005b818110156111c0576111b581610b7a565b8060010190506111a4565b5050565b60065481565b6003602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146112a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b6112ae83611e0c565b81156112bd576112bc611197565b5b6005544210156112f05760008114156112da5760055490506112eb565b6005548110156112ea5760055490505b5b611308565b60008114806112fe57504281105b15611307574290505b5b60006005548211158061131b5750428211155b905060026040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156114315761142a85600454611a5490919063ffffffff16565b6004819055505b5050505050565b60075481565b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146114e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612362602c913960400191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000806002848154811061153557fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561162f57600080fd5b505afa158015611643573d6000803e3d6000fd5b505050506040513d602081101561165957600080fd5b81019080805190602001909291905050509050836002015442118015611680575060008114155b1561170a5760006116958560020154426107af565b905060006116c46004546116b6886001015485611adc90919063ffffffff16565b611b6290919063ffffffff16565b90506117056116f6846116e8670de0b6b3a764000085611adc90919063ffffffff16565b611b6290919063ffffffff16565b85611a5490919063ffffffff16565b935050505b6117518360010154611743670de0b6b3a7640000611735868860000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b94505050505092915050565b600033905060006002848154811061177157fe5b9060005260206000209060050201905060006003600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506117de85610b7a565b60008160000154111561189e576000611838826001015461182a670de0b6b3a764000061181c87600301548760000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b6119d190919063ffffffff16565b9050600081111561189c5761184d8482611beb565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000841115611918576118f88330868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611f11909392919063ffffffff16565b61190f848260000154611a5490919063ffffffff16565b81600001819055505b61194d670de0b6b3a764000061193f84600301548460000154611adc90919063ffffffff16565b611b6290919063ffffffff16565b8160010181905550848373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15866040518082815260200191505060405180910390a35050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600082821115611a49576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015611ad2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b600080831415611aef5760009050611b5c565b6000828402905082848281611b0057fe5b0414611b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806123b46021913960400191505060405180910390fd5b809150505b92915050565b6000808211611bd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381611be257fe5b04905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611c7657600080fd5b505afa158015611c8a573d6000803e3d6000fd5b505050506040513d6020811015611ca057600080fd5b810190808051906020019092919050505090506000811115611d655780821115611d1657611d118382600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b611d64565b611d638383600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611d6a9092919063ffffffff16565b5b5b505050565b611e078363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b505050565b6000600280549050905060005b81811015611f0c578273ffffffffffffffffffffffffffffffffffffffff1660028281548110611e4557fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415611f01576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f545368617265526577617264506f6f6c3a206578697374696e6720706f6f6c3f81525060200191505060405180910390fd5b806001019050611e19565b505050565b611fcc846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611fd2565b50505050565b6060612034826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120c19092919063ffffffff16565b90506000815111156120bc5780806020019051602081101561205557600080fd5b81019080805190602001909291905050506120bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806123d5602a913960400191505060405180910390fd5b5b505050565b60606120d084846000856120d9565b90509392505050565b606082471015612134576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061238e6026913960400191505060405180910390fd5b61213d85612282565b6121af576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106121ff57805182526020820191506020810190506020830392506121dc565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612261576040519150601f19603f3d011682016040523d82523d6000602084013e612266565b606091505b5091509150612276828286612295565b92505050949350505050565b600080823b905060008111915050919050565b606083156122a55782905061235a565b6000835111156122b85782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561231f578082015181840152602081019050612304565b50505050905090810190601f16801561234c5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe545368617265526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220af75e0974f2541d2b95ef49d873e9176b7eadfcc6bf05fa69a6273e2e16d5ef564736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0x9E63D261 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xCF4B55CB EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x59D JUMPI DUP1 PUSH4 0xEE6822A7 EQ PUSH2 0x5D5 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x3EE JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x457 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x441A3E70 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x374 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x1D0 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x226 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x186 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D8 PUSH2 0x687 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x68D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x23C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x288 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB7A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x304 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x372 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x31C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xEBD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37C PUSH2 0x116D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x1191 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x1197 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D8 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x43A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x404 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x45F PUSH2 0x11FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1201 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4E1 PUSH2 0x1438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x539 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x50D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x143E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x587 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1525 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x175D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5DD PUSH2 0x19AB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH10 0xCB49B44BA602D800000 DUP2 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x624 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x731 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x739 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x748 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x7A1 JUMPI PUSH2 0x79A DUP3 PUSH2 0x78C DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x7C1 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT PUSH2 0x847 JUMPI PUSH1 0x6 SLOAD DUP4 LT PUSH2 0x7DC JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 GT PUSH2 0x817 JUMPI PUSH2 0x810 PUSH1 0x7 SLOAD PUSH2 0x802 PUSH1 0x5 SLOAD PUSH1 0x6 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x840 PUSH1 0x7 SLOAD PUSH2 0x832 DUP6 PUSH1 0x6 SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP3 GT PUSH2 0x859 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x5 SLOAD DUP4 GT PUSH2 0x892 JUMPI PUSH2 0x88B PUSH1 0x7 SLOAD PUSH2 0x87D PUSH1 0x5 SLOAD DUP6 PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8BC JUMP JUMPDEST PUSH2 0x8B9 PUSH1 0x7 SLOAD PUSH2 0x8AB DUP6 DUP6 PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x8D6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0x9B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BD DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA0A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x9FC PUSH8 0xDE0B6B3A7640000 PUSH2 0x9EE DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xA6E JUMPI PUSH2 0xA1F DUP5 DUP3 PUSH2 0x1BEB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xAE6 JUMPI PUSH2 0xA8E DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xAE5 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xB1B PUSH8 0xDE0B6B3A7640000 PUSH2 0xB0D DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB89 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xBAA JUMPI POP PUSH2 0xD86 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC4B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xC61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xC8D JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0xD86 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCE0 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xCD9 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD GT ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 PUSH2 0xCFB DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD2A PUSH1 0x4 SLOAD PUSH2 0xD1C DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD6F PUSH2 0xD5C DUP5 PUSH2 0xD4E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xD98 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE68 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF61 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x6 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x113D JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1034 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x7473686172650000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x113A JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1058 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x112E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1041 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1168 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x11C0 JUMPI PUSH2 0x11B5 DUP2 PUSH2 0xB7A JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x11A4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x12A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x12AE DUP4 PUSH2 0x1E0C JUMP JUMPDEST DUP2 ISZERO PUSH2 0x12BD JUMPI PUSH2 0x12BC PUSH2 0x1197 JUMP JUMPDEST JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x12F0 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x12DA JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0x12EA JUMPI PUSH1 0x5 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x12FE JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x1307 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x131B JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x2 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x1431 JUMPI PUSH2 0x142A DUP6 PUSH1 0x4 SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x14E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2362 PUSH1 0x2C SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1535 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1643 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1659 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x1680 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x170A JUMPI PUSH1 0x0 PUSH2 0x1695 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x7AF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x16C4 PUSH1 0x4 SLOAD PUSH2 0x16B6 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1705 PUSH2 0x16F6 DUP5 PUSH2 0x16E8 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x1751 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x1743 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1735 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1771 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x17DE DUP6 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x189E JUMPI PUSH1 0x0 PUSH2 0x1838 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x182A PUSH8 0xDE0B6B3A7640000 PUSH2 0x181C DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x19D1 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x189C JUMPI PUSH2 0x184D DUP5 DUP3 PUSH2 0x1BEB JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP5 GT ISZERO PUSH2 0x1918 JUMPI PUSH2 0x18F8 DUP4 ADDRESS DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F11 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x190F DUP5 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x1A54 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x194D PUSH8 0xDE0B6B3A7640000 PUSH2 0x193F DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x1ADC SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B62 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP5 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x1AD2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x1AEF JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1B5C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x1B00 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x1B57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23B4 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x1BD9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x1BE2 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C76 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1CA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1D65 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x1D16 JUMPI PUSH2 0x1D11 DUP4 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1D64 JUMP JUMPDEST PUSH2 0x1D63 DUP4 DUP4 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D6A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1E07 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FD2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F0C JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1E45 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1F01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x545368617265526577617264506F6F6C3A206578697374696E6720706F6F6C3F DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1E19 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1FCC DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1FD2 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2034 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x20C1 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x20BC JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x20BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x23D5 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x20D0 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x20D9 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2134 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x238E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x213D DUP6 PUSH2 0x2282 JUMP JUMPDEST PUSH2 0x21AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x21FF JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2261 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2276 DUP3 DUP3 DUP7 PUSH2 0x2295 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x22A5 JUMPI DUP3 SWAP1 POP PUSH2 0x235A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x22B8 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x231F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2304 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x234C JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID SLOAD MSTORE8 PUSH9 0x617265526577617264 POP PUSH16 0x6F6C3A2063616C6C6572206973206E6F PUSH21 0x20746865206F70657261746F72416464726573733A KECCAK256 PUSH10 0x6E73756666696369656E PUSH21 0x2062616C616E636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220AF75E097 0x4F 0x25 COINBASE 0xD2 0xB9 0x5E DELEGATECALL SWAP14 DUP8 RETURNDATACOPY SWAP2 PUSH23 0xB7EADFCC6BF05FA69A6273E2E16D5EF564736F6C634300 MOD 0xC STOP CALLER ",
							"sourceMap": "435:10625:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1301:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1546:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4482:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4912:661;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8583:816;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6764:916;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9470:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10447:610;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;556:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1633:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6508:180;;;:::i;:::-;;1712:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1385:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1852:37;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3106:1278;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1747:49;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10338:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5639:786;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7715:832;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1245:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1908:51;1948:11;1908:51;:::o;1301:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1546:34::-;;;;:::o;4482:353::-;2682:10;2670:22;;:8;;;;;;;;;;:22;;;2662:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4561:17:::1;:15;:17::i;:::-;4589:21;4613:8;4622:4;4613:14;;;;;;;;;;;;;;;;;;4589:38;;4642:4;:14;;;;;;;;;;;;4638:150;;;4691:85;4750:11;4691:36;4711:4;:15;;;4691;;:19;;:36;;;;:::i;:::-;:40;;:85;;;;:::i;:::-;4673:15;:103;;;;4638:150;4816:11;4798:4;:15;;:29;;;;2752:1;4482:353:::0;;:::o;4912:661::-;4997:7;5034;5021:9;:20;5017:34;;5050:1;5043:8;;;;5017:34;5077:11;;5066:7;:22;5062:504;;5122:11;;5109:9;:24;5105:38;;5142:1;5135:8;;;;5105:38;5175:13;;5162:9;:26;5158:90;;5197:51;5232:15;;5197:30;5213:13;;5197:11;;:15;;:30;;;;:::i;:::-;:34;;:51;;;;:::i;:::-;5190:58;;;;5158:90;5270:47;5301:15;;5270:26;5286:9;5270:11;;:15;;:26;;;;:::i;:::-;:30;;:47;;;;:::i;:::-;5263:54;;;;5062:504;5365:13;;5354:7;:24;5350:38;;5387:1;5380:8;;;;5350:38;5420:13;;5407:9;:26;5403:86;;5442:47;5473:15;;5442:26;5454:13;;5442:7;:11;;:26;;;;:::i;:::-;:30;;:47;;;;:::i;:::-;5435:54;;;;5403:86;5511:43;5538:15;;5511:22;5523:9;5511:7;:11;;:22;;;;:::i;:::-;:26;;:43;;;;:::i;:::-;5504:50;;4912:661;;;;;:::o;8583:816::-;8650:15;8668:10;8650:28;;8689:21;8713:8;8722:4;8713:14;;;;;;;;;;;;;;;;;;8689:38;;8738:21;8762:8;:14;8771:4;8762:14;;;;;;;;;;;:23;8777:7;8762:23;;;;;;;;;;;;;;;8738:47;;8819:7;8804:4;:11;;;:22;;8796:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8860:16;8871:4;8860:10;:16::i;:::-;8887;8906:70;8960:4;:15;;;8906:49;8950:4;8906:39;8922:4;:22;;;8906:4;:11;;;:15;;:39;;;;:::i;:::-;:43;;:49;;;;:::i;:::-;:53;;:70;;;;:::i;:::-;8887:89;;9002:1;8991:8;:12;8987:131;;;9020:37;9039:7;9048:8;9020:18;:37::i;:::-;9088:7;9077:29;;;9097:8;9077:29;;;;;;;;;;;;;;;;;;8987:131;9142:1;9132:7;:11;9128:138;;;9174:24;9190:7;9174:4;:11;;;:15;;:24;;;;:::i;:::-;9160:4;:11;;:38;;;;9213:41;9237:7;9246;9213:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;9128:138;9294:49;9338:4;9294:39;9310:4;:22;;;9294:4;:11;;;:15;;:39;;;;:::i;:::-;:43;;:49;;;;:::i;:::-;9276:4;:15;;:67;;;;9377:4;9368:7;9359:32;;;9383:7;9359:32;;;;;;;;;;;;;;;;;;8583:816;;;;;;:::o;6764:916::-;6816:21;6840:8;6849:4;6840:14;;;;;;;;;;;;;;;;;;6816:38;;6888:4;:19;;;6869:15;:38;6865:77;;6924:7;;;6865:77;6952:19;6974:4;:10;;;;;;;;;;;;:20;;;7003:4;6974:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6952:57;;7039:1;7024:11;:16;7020:107;;;7079:15;7057:4;:19;;:37;;;;7109:7;;;;7020:107;7142:4;:14;;;;;;;;;;;;7137:138;;7190:4;7173;:14;;;:21;;;;;;;;;;;;;;;;;;7227:36;7247:4;:15;;;7227;;:19;;:36;;;;:::i;:::-;7209:15;:54;;;;7137:138;7307:1;7289:15;;:19;7285:340;;;7325:24;7352:56;7371:4;:19;;;7392:15;7352:18;:56::i;:::-;7325:83;;7423:21;7447:58;7489:15;;7447:37;7468:4;:15;;;7447:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7423:82;;7545:68;7572:40;7600:11;7572:23;7590:4;7572:13;:17;;:23;;;;:::i;:::-;:27;;:40;;;;:::i;:::-;7545:4;:22;;;:26;;:68;;;;:::i;:::-;7520:4;:22;;:93;;;;7285:340;;;7657:15;7635:4;:19;;:37;;;;6764:916;;;;:::o;9470:377::-;9529:21;9553:8;9562:4;9553:14;;;;;;;;;;;;;;;;;;9529:38;;9578:21;9602:8;:14;9611:4;9602:14;;;;;;;;;;;:26;9617:10;9602:26;;;;;;;;;;;;;;;9578:50;;9639:15;9657:4;:11;;;9639:29;;9693:1;9679:4;:11;;:15;;;;9723:1;9705:4;:15;;:19;;;;9735:44;9759:10;9771:7;9735:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;9825:4;9813:10;9795:44;;;9831:7;9795:44;;;;;;;;;;;;;;;;;;9470:377;;;;:::o;10447:610::-;2682:10;2670:22;;:8;;;;;;;;;;:22;;;2662:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10597:7:::1;10583:11;;:21;10565:15;:39;10561:447;;;10741:6;;;;;;;;;;;10731:16;;:6;:16;;;;10723:35;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10773:14;10790:8;:15;;;;10773:32;;10825:11;10820:177;10848:6;10842:3;:12;10820:177;;;10882:21;10906:8;10915:3;10906:13;;;;;;;;;;;;;;;;;;10882:37;;10956:4;:10;;;;;;;;;;;;10946:20;;:6;:20;;;;10938:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;10820:177;10856:5;;;;;10820:177;;;;10561:447;;11018:31;11038:2;11042:6;11018;:19;;;;:31;;;;;:::i;:::-;10447:610:::0;;;:::o;556:23::-;;;;;;;;;;;;:::o;1633:28::-;;;;:::o;6508:180::-;6553:14;6570:8;:15;;;;6553:32;;6601:11;6596:85;6624:6;6618:3;:12;6596:85;;;6654:15;6665:3;6654:10;:15::i;:::-;6632:5;;;;;6596:85;;;;6508:180;:::o;1712:26::-;;;;:::o;1385:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1852:37::-;;;;:::o;3106:1278::-;2682:10;2670:22;;:8;;;;;;;;;;:22;;;2662:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3272:26:::1;3291:6;3272:18;:26::i;:::-;3313:11;3309:61;;;3341:17;:15;:17::i;:::-;3309:61;3402:13;;3384:15;:31;3380:534;;;3488:1;3469:15;:20;3465:243;;;3528:13;;3510:31;;3465:243;;;3604:13;;3586:15;:31;3582:111;;;3660:13;;3642:31;;3582:111;3465:243;3380:534;;;3795:1;3776:15;:20;:57;;;;3818:15;3800;:33;3776:57;3772:131;;;3872:15;3854:33;;3772:131;3380:534;3924:15;3971:13;;3952:15;:32;;3951:83;;;;4018:15;3999;:34;;3951:83;3924:110;;4045:8;4059:213;;;;;;;;4091:6;4059:213;;;;;;4125:11;4059:213;;;;4168:15;4059:213;;;;4218:1;4059:213;;;;4246:10;4059:213;;;;::::0;4045:228:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4288:10;4284:93;;;4333:32;4353:11;4333:15;;:19;;:32;;;;:::i;:::-;4315:15;:50;;;;4284:93;2752:1;3106:1278:::0;;;;:::o;1747:49::-;;;;:::o;10338:101::-;2682:10;2670:22;;:8;;;;;;;;;;:22;;;2662:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10422:9:::1;10411:8;::::0;:20:::1;;;;;;;;;;;;;;;;;;10338:101:::0;:::o;5639:786::-;5713:7;5733:21;5757:8;5766:4;5757:14;;;;;;;;;;;;;;;;;;5733:38;;5782:21;5806:8;:14;5815:4;5806:14;;;;;;;;;;;:21;5821:5;5806:21;;;;;;;;;;;;;;;5782:45;;5838:25;5866:4;:22;;;5838:50;;5899:19;5921:4;:10;;;;;;;;;;;;:20;;;5950:4;5921:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5899:57;;5989:4;:19;;;5971:15;:37;:57;;;;;6027:1;6012:11;:16;;5971:57;5967:368;;;6045:24;6072:56;6091:4;:19;;;6112:15;6072:18;:56::i;:::-;6045:83;;6143:21;6167:58;6209:15;;6167:37;6188:4;:15;;;6167:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;6143:82;;6260:63;6282:40;6310:11;6282:23;6300:4;6282:13;:17;;:23;;;;:::i;:::-;:27;;:40;;;;:::i;:::-;6260:17;:21;;:63;;;;:::i;:::-;6240:83;;5967:368;;;6352:65;6401:4;:15;;;6352:44;6391:4;6352:34;6368:17;6352:4;:11;;;:15;;:34;;;;:::i;:::-;:38;;:44;;;;:::i;:::-;:48;;:65;;;;:::i;:::-;6345:72;;;;;;5639:786;;;;:::o;7715:832::-;7781:15;7799:10;7781:28;;7820:21;7844:8;7853:4;7844:14;;;;;;;;;;;;;;;;;;7820:38;;7869:21;7893:8;:14;7902:4;7893:14;;;;;;;;;;;:23;7908:7;7893:23;;;;;;;;;;;;;;;7869:47;;7927:16;7938:4;7927:10;:16::i;:::-;7972:1;7958:4;:11;;;:15;7954:294;;;7990:16;8009:70;8063:4;:15;;;8009:49;8053:4;8009:39;8025:4;:22;;;8009:4;:11;;;:15;;:39;;;;:::i;:::-;:43;;:49;;;;:::i;:::-;:53;;:70;;;;:::i;:::-;7990:89;;8109:1;8098:8;:12;8094:143;;;8131:37;8150:7;8159:8;8131:18;:37::i;:::-;8203:7;8192:29;;;8212:8;8192:29;;;;;;;;;;;;;;;;;;8094:143;7954:294;;8272:1;8262:7;:11;8258:157;;;8290:60;8318:7;8335:4;8342:7;8290:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8379:24;8395:7;8379:4;:11;;;:15;;:24;;;;:::i;:::-;8365:4;:11;;:38;;;;8258:157;8443:49;8487:4;8443:39;8459:4;:22;;;8443:4;:11;;;:15;;:39;;;;:::i;:::-;:43;;:49;;;;:::i;:::-;8425:4;:15;;:67;;;;8525:4;8516:7;8508:31;;;8531:7;8508:31;;;;;;;;;;;;;;;;;;7715:832;;;;;:::o;1245:20::-;;;;;;;;;;;;;:::o;3136:155:3:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;9965:365:4:-;10043:18;10064:6;;;;;;;;;;;:16;;;10089:4;10064:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10043:52;;10123:1;10110:10;:14;10106:217;;;10155:10;10145:7;:20;10141:171;;;10186:36;10206:3;10211:10;10186:6;;;;;;;;;;;:19;;;;:36;;;;;:::i;:::-;10141:171;;;10263:33;10283:3;10288:7;10263:6;;;;;;;;;;;:19;;;;:33;;;;;:::i;:::-;10141:171;10106:217;9965:365;;;:::o;717:175:1:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;2769:262:4:-;2837:14;2854:8;:15;;;;2837:32;;2885:11;2880:144;2908:6;2902:3;:12;2880:144;;;2969:6;2946:29;;:8;2955:3;2946:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;2938:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2916:5;;;;;2880:144;;;;2769:262;;:::o;898:203:1:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:2:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1853600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"TOTAL_REWARDS()": "229",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"operator()": "1155",
								"pendingShare(uint256,address)": "infinite",
								"poolEndTime()": "1072",
								"poolInfo(uint256)": "5463",
								"poolStartTime()": "1028",
								"runningTime()": "1116",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "infinite",
								"tSharePerSecond()": "1049",
								"totalAllocPoint()": "1073",
								"tshare()": "1179",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2196",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safeTShareTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1579,
									"end": 1580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1546,
									"end": 1580,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1546,
									"end": 1580,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1780,
									"end": 1796,
									"name": "PUSH",
									"source": 4,
									"value": "6AB00D9A3BC00"
								},
								{
									"begin": 1747,
									"end": 1796,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1747,
									"end": 1796,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1881,
									"end": 1889,
									"name": "PUSH",
									"source": 4,
									"value": "1E7CB00"
								},
								{
									"begin": 1852,
									"end": 1889,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1852,
									"end": 1889,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2401,
									"end": 2415,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2398,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 2383,
									"end": 2415,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "6C61746500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2375,
									"end": 2424,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2458,
									"end": 2459,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2439,
									"end": 2460,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2439,
									"end": 2460,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2439,
									"end": 2446,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2439,
									"end": 2460,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2439,
									"end": 2460,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2439,
									"end": 2460,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 2435,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2435,
									"end": 2486,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2468,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2462,
									"end": 2468,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2462,
									"end": 2486,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2435,
									"end": 2486,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2435,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2513,
									"end": 2527,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2510,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2497,
									"end": 2527,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2527,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2527,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2527,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2568,
									"end": 2579,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2568,
									"end": 2579,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2552,
									"end": 2565,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2552,
									"end": 2565,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2552,
									"end": 2579,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2549,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2538,
									"end": 2579,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2579,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2579,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2579,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2601,
									"end": 2611,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2590,
									"end": 2598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2590,
									"end": 2611,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2279,
									"end": 2619,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 435,
									"end": 11060,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220af75e0974f2541d2b95ef49d873e9176b7eadfcc6bf05fa69a6273e2e16d5ef564736f6c634300060c0033",
									".code": [
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "5F96DC11"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "96805E54"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "96805E54"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "9E63D261"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "B3AB15FB"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "CF4B55CB"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "EE6822A7"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "5F96DC11"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "630B5BA1"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "6E271DD5"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "93F1A40B"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "943F013D"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "51EB05A6"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "5312EA8E"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "54575AF4"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "570CA735"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "9CF6091"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "1526FE27"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "17CAF6F1"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "1AB06EE5"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "231F0C6A"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 435,
											"end": 11060,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1948,
											"end": 1959,
											"name": "PUSH",
											"source": 4,
											"value": "CB49B44BA602D800000"
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1908,
											"end": 1959,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1301,
											"end": 1327,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1546,
											"end": 1580,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2692,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH data",
											"source": 4,
											"value": "3C72DF8AB4EB3ADB53B2D5E3C0DCD6E55E8972BC8360589EB9459E56A713B10E"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4561,
											"end": 4576,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 4561,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4610,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4621,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4622,
											"end": 4626,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4613,
											"end": 4627,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4627,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4646,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4642,
											"end": 4656,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4788,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4638,
											"end": 4788,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4750,
											"end": 4761,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4711,
											"end": 4715,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4711,
											"end": 4726,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4711,
											"end": 4726,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4711,
											"end": 4726,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4691,
											"end": 4706,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4691,
											"end": 4710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4691,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4731,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4691,
											"end": 4731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4691,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4688,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4673,
											"end": 4776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4776,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4673,
											"end": 4776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4638,
											"end": 4788,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 4638,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4816,
											"end": 4827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4802,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4813,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4798,
											"end": 4813,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4827,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4798,
											"end": 4827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4482,
											"end": 4835,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4997,
											"end": 5004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5034,
											"end": 5041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5030,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5021,
											"end": 5041,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5050,
											"end": 5051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5051,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5051,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5043,
											"end": 5051,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5043,
											"end": 5051,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5017,
											"end": 5051,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5077,
											"end": 5088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5073,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5066,
											"end": 5088,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5062,
											"end": 5566,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5122,
											"end": 5133,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5122,
											"end": 5133,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5109,
											"end": 5133,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5105,
											"end": 5143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5142,
											"end": 5143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5135,
											"end": 5143,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5105,
											"end": 5143,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5105,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5175,
											"end": 5188,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5171,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5162,
											"end": 5188,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5158,
											"end": 5248,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5232,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5232,
											"end": 5247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5213,
											"end": 5226,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5213,
											"end": 5226,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5208,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5197,
											"end": 5208,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5212,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5197,
											"end": 5212,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5197,
											"end": 5227,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5197,
											"end": 5231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5197,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5190,
											"end": 5248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5190,
											"end": 5248,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5158,
											"end": 5248,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 5158,
											"end": 5248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5286,
											"end": 5295,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5281,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 5270,
											"end": 5281,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5270,
											"end": 5285,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 5270,
											"end": 5296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5270,
											"end": 5300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5270,
											"end": 5317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5263,
											"end": 5317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5263,
											"end": 5317,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5062,
											"end": 5566,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5062,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5361,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5354,
											"end": 5378,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5350,
											"end": 5388,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5387,
											"end": 5388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5388,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5350,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5420,
											"end": 5433,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5416,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5407,
											"end": 5433,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5403,
											"end": 5489,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5473,
											"end": 5488,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5454,
											"end": 5467,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5454,
											"end": 5467,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5449,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5453,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5442,
											"end": 5453,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5442,
											"end": 5468,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5472,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5442,
											"end": 5472,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5435,
											"end": 5489,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5403,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5538,
											"end": 5553,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5523,
											"end": 5532,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5518,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 5511,
											"end": 5522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5511,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5511,
											"end": 5537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5511,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5504,
											"end": 5554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 5573,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8668,
											"end": 8678,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8650,
											"end": 8678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8721,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8722,
											"end": 8726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8713,
											"end": 8727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8727,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8689,
											"end": 8727,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8738,
											"end": 8759,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8770,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8775,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8776,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8777,
											"end": 8784,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8762,
											"end": 8785,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8738,
											"end": 8785,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8738,
											"end": 8785,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8819,
											"end": 8826,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8804,
											"end": 8815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8804,
											"end": 8826,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 8796,
											"end": 8849,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8871,
											"end": 8875,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8860,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8887,
											"end": 8903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 8960,
											"end": 8964,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8975,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8960,
											"end": 8975,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8960,
											"end": 8975,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8922,
											"end": 8926,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8922,
											"end": 8944,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8922,
											"end": 8944,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8922,
											"end": 8944,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8917,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8906,
											"end": 8917,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8917,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8921,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8906,
											"end": 8921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 8906,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8949,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 8906,
											"end": 8949,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 8906,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8906,
											"end": 8959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 8906,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8887,
											"end": 8976,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8887,
											"end": 8976,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9002,
											"end": 9003,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 8999,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8991,
											"end": 9003,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8987,
											"end": 9118,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8987,
											"end": 9118,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8987,
											"end": 9118,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9057,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 9039,
											"end": 9046,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9048,
											"end": 9056,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9020,
											"end": 9038,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 9020,
											"end": 9057,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9020,
											"end": 9057,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 9020,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9088,
											"end": 9095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "PUSH",
											"source": 4,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9097,
											"end": 9105,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9077,
											"end": 9106,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8987,
											"end": 9118,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8987,
											"end": 9118,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9132,
											"end": 9139,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9132,
											"end": 9143,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9266,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9128,
											"end": 9266,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9190,
											"end": 9197,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9185,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9174,
											"end": 9185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9185,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 9174,
											"end": 9189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 9174,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9164,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9160,
											"end": 9171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9198,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9198,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9198,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9160,
											"end": 9198,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9237,
											"end": 9244,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9246,
											"end": 9253,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9213,
											"end": 9223,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9236,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9213,
											"end": 9236,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9213,
											"end": 9236,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 9213,
											"end": 9254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9128,
											"end": 9266,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 9128,
											"end": 9266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 9338,
											"end": 9342,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 9310,
											"end": 9314,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9332,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9310,
											"end": 9332,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9310,
											"end": 9332,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9298,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9294,
											"end": 9305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9305,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 9294,
											"end": 9309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 9294,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9337,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 9294,
											"end": 9337,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 9294,
											"end": 9343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9280,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9291,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9276,
											"end": 9291,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9276,
											"end": 9343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9377,
											"end": 9381,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9375,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9383,
											"end": 9390,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9391,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8583,
											"end": 9399,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6848,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6849,
											"end": 6853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6840,
											"end": 6854,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6816,
											"end": 6854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6892,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6907,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6888,
											"end": 6907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6888,
											"end": 6907,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6884,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6869,
											"end": 6907,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6865,
											"end": 6942,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6924,
											"end": 6931,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6924,
											"end": 6931,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6865,
											"end": 6942,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 6865,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6952,
											"end": 6971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 6984,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6994,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 6994,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 6994,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 7003,
											"end": 7007,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6974,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6952,
											"end": 7009,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6952,
											"end": 7009,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7039,
											"end": 7040,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7024,
											"end": 7035,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7040,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7020,
											"end": 7127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7079,
											"end": 7094,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7076,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7057,
											"end": 7076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7094,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7094,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7094,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7057,
											"end": 7094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7109,
											"end": 7116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7109,
											"end": 7116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7109,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 7109,
											"end": 7116,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7127,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 7020,
											"end": 7127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7142,
											"end": 7156,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7275,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7275,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7190,
											"end": 7194,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7173,
											"end": 7177,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7187,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7173,
											"end": 7187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7187,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7173,
											"end": 7194,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7247,
											"end": 7251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7247,
											"end": 7262,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7242,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7227,
											"end": 7242,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7227,
											"end": 7246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 7227,
											"end": 7263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7209,
											"end": 7263,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7263,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7263,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7209,
											"end": 7263,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7137,
											"end": 7275,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 7137,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7289,
											"end": 7304,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7289,
											"end": 7304,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7289,
											"end": 7308,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7349,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 7408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7371,
											"end": 7390,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7352,
											"end": 7370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 7352,
											"end": 7408,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7352,
											"end": 7408,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 7352,
											"end": 7408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7325,
											"end": 7408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7423,
											"end": 7444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7489,
											"end": 7504,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7489,
											"end": 7504,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7468,
											"end": 7472,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7468,
											"end": 7483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7463,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7447,
											"end": 7467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 7447,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7488,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7447,
											"end": 7488,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 7447,
											"end": 7505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7423,
											"end": 7505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7423,
											"end": 7505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7600,
											"end": 7611,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7590,
											"end": 7594,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7572,
											"end": 7585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 7572,
											"end": 7589,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7572,
											"end": 7595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7599,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 7572,
											"end": 7599,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 7572,
											"end": 7612,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7549,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7567,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7545,
											"end": 7567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 7545,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7524,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7542,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7520,
											"end": 7542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7613,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7520,
											"end": 7613,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 7285,
											"end": 7625,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7672,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7639,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7654,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7635,
											"end": 7654,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7672,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7635,
											"end": 7672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6764,
											"end": 7680,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9529,
											"end": 9550,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9553,
											"end": 9567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9529,
											"end": 9567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9529,
											"end": 9567,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9610,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9616,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9617,
											"end": 9627,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9602,
											"end": 9628,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9628,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9628,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9639,
											"end": 9654,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9639,
											"end": 9668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9639,
											"end": 9668,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9693,
											"end": 9694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9690,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9679,
											"end": 9690,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9694,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9679,
											"end": 9694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9723,
											"end": 9724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9705,
											"end": 9709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9705,
											"end": 9720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9724,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9724,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9724,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9705,
											"end": 9724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 9759,
											"end": 9769,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9771,
											"end": 9778,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9739,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9735,
											"end": 9745,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9758,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9735,
											"end": 9758,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 9735,
											"end": 9758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 9735,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9825,
											"end": 9829,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9823,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "PUSH",
											"source": 4,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 9831,
											"end": 9838,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9795,
											"end": 9839,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9470,
											"end": 9847,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2692,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH data",
											"source": 4,
											"value": "3C72DF8AB4EB3ADB53B2D5E3C0DCD6E55E8972BC8360589EB9459E56A713B10E"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10597,
											"end": 10604,
											"name": "PUSH",
											"source": 4,
											"value": "76A700"
										},
										{
											"begin": 10583,
											"end": 10594,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10583,
											"end": 10594,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10583,
											"end": 10604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10565,
											"end": 10580,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 10565,
											"end": 10604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10741,
											"end": 10747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10731,
											"end": 10737,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10731,
											"end": 10747,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "7473686172650000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 10723,
											"end": 10758,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10773,
											"end": 10787,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10790,
											"end": 10798,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10790,
											"end": 10805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10790,
											"end": 10805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10790,
											"end": 10805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10790,
											"end": 10805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10773,
											"end": 10805,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10773,
											"end": 10805,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10825,
											"end": 10836,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10854,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10842,
											"end": 10845,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10842,
											"end": 10854,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 10903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10914,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10915,
											"end": 10918,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10906,
											"end": 10919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 10919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10882,
											"end": 10919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10956,
											"end": 10966,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10946,
											"end": 10952,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10946,
											"end": 10966,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "706F6F6C2E746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 10938,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10856,
											"end": 10861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 10561,
											"end": 11008,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11038,
											"end": 11040,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11024,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11037,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11018,
											"end": 11037,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11037,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 11018,
											"end": 11037,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 11018,
											"end": 11049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10447,
											"end": 11057,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 556,
											"end": 579,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 556,
											"end": 579,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1633,
											"end": 1661,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6567,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6578,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6553,
											"end": 6585,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6601,
											"end": 6612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6624,
											"end": 6630,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6618,
											"end": 6630,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6665,
											"end": 6668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 6654,
											"end": 6669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6632,
											"end": 6637,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6632,
											"end": 6637,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6632,
											"end": 6637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6632,
											"end": 6637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6632,
											"end": 6637,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6681,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6508,
											"end": 6688,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1712,
											"end": 1738,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1449,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1852,
											"end": 1889,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2692,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH data",
											"source": 4,
											"value": "3C72DF8AB4EB3ADB53B2D5E3C0DCD6E55E8972BC8360589EB9459E56A713B10E"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3291,
											"end": 3297,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3272,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3272,
											"end": 3298,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3272,
											"end": 3298,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 3272,
											"end": 3298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3313,
											"end": 3324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3370,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3309,
											"end": 3370,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3341,
											"end": 3356,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 3341,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3370,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 3309,
											"end": 3370,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3402,
											"end": 3415,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3399,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3415,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3488,
											"end": 3489,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3484,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3469,
											"end": 3489,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3528,
											"end": 3541,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3528,
											"end": 3541,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3541,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3541,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3604,
											"end": 3617,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3601,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3586,
											"end": 3617,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3693,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3693,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3582,
											"end": 3693,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3660,
											"end": 3673,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3673,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3582,
											"end": 3693,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 3582,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 3465,
											"end": 3708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3791,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3796,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3818,
											"end": 3833,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3800,
											"end": 3833,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 3776,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3903,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3903,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3772,
											"end": 3903,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3872,
											"end": 3887,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3887,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3772,
											"end": 3903,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3772,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 3380,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 3939,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3984,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3971,
											"end": 3984,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3984,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3952,
											"end": 3984,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4018,
											"end": 4033,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4033,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 3951,
											"end": 4034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 4034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3924,
											"end": 4034,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4053,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4091,
											"end": 4097,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4136,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4168,
											"end": 4183,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4218,
											"end": 4219,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4246,
											"end": 4256,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4045,
											"end": 4273,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4284,
											"end": 4377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4353,
											"end": 4364,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4333,
											"end": 4348,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4333,
											"end": 4352,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 4333,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4330,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4315,
											"end": 4365,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4365,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4365,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4315,
											"end": 4365,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4284,
											"end": 4377,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 4284,
											"end": 4377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3106,
											"end": 4384,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1747,
											"end": 1796,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2682,
											"end": 2692,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2678,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2670,
											"end": 2692,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH data",
											"source": 4,
											"value": "3C72DF8AB4EB3ADB53B2D5E3C0DCD6E55E8972BC8360589EB9459E56A713B10E"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "2C"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2662,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10422,
											"end": 10431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10419,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10411,
											"end": 10419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10411,
											"end": 10431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10338,
											"end": 10439,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5754,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5765,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5766,
											"end": 5770,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 5757,
											"end": 5771,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5733,
											"end": 5771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5803,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5814,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5815,
											"end": 5819,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5820,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5821,
											"end": 5826,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5827,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5827,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5782,
											"end": 5827,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5863,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5866,
											"end": 5870,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5888,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5866,
											"end": 5888,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5888,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5888,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5838,
											"end": 5888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5918,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5931,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5941,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 5950,
											"end": 5954,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5921,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5956,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5899,
											"end": 5956,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 6008,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5989,
											"end": 6008,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5989,
											"end": 6008,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 5986,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6008,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6028,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6012,
											"end": 6023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6028,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6012,
											"end": 6028,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 5971,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6069,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6091,
											"end": 6095,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6110,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6091,
											"end": 6110,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6091,
											"end": 6110,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6127,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6090,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 6072,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6045,
											"end": 6128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6209,
											"end": 6224,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6209,
											"end": 6224,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6188,
											"end": 6192,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6203,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6188,
											"end": 6203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6188,
											"end": 6203,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6183,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6167,
											"end": 6187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "tag",
											"source": 4,
											"value": "200"
										},
										{
											"begin": 6167,
											"end": 6204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6167,
											"end": 6208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6167,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6225,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6143,
											"end": 6225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 6310,
											"end": 6321,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 6300,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6282,
											"end": 6295,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6299,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6282,
											"end": 6299,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 6282,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6282,
											"end": 6309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 6282,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6277,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6260,
											"end": 6281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6323,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6240,
											"end": 6323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5967,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6401,
											"end": 6405,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6416,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6401,
											"end": 6416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6401,
											"end": 6416,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6391,
											"end": 6395,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6368,
											"end": 6385,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6356,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6363,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 6352,
											"end": 6367,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 6352,
											"end": 6386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6352,
											"end": 6390,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 6352,
											"end": 6396,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 6352,
											"end": 6400,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 6352,
											"end": 6417,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6345,
											"end": 6417,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 6425,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7796,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7799,
											"end": 7809,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7809,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7781,
											"end": 7809,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7852,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7853,
											"end": 7857,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7844,
											"end": 7858,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7858,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7820,
											"end": 7858,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7890,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7901,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7902,
											"end": 7906,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7907,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7908,
											"end": 7915,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7893,
											"end": 7916,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7916,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7869,
											"end": 7916,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7938,
											"end": 7942,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 7927,
											"end": 7937,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 7927,
											"end": 7943,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7927,
											"end": 7943,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 7927,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7969,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 7969,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7969,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7958,
											"end": 7973,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8006,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8063,
											"end": 8067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8053,
											"end": 8057,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8025,
											"end": 8029,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8047,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8025,
											"end": 8047,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8025,
											"end": 8047,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8013,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8020,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8009,
											"end": 8024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 8009,
											"end": 8048,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 8009,
											"end": 8052,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "tag",
											"source": 4,
											"value": "213"
										},
										{
											"begin": 8009,
											"end": 8058,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8062,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 8009,
											"end": 8062,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 8009,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8079,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8079,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8109,
											"end": 8110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8106,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8110,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8237,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8094,
											"end": 8237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8150,
											"end": 8157,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8159,
											"end": 8167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8131,
											"end": 8149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 8131,
											"end": 8168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8203,
											"end": 8210,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 4,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8212,
											"end": 8220,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8192,
											"end": 8221,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8094,
											"end": 8237,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 8094,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7954,
											"end": 8248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8269,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8262,
											"end": 8273,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8415,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8258,
											"end": 8415,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8318,
											"end": 8325,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 8342,
											"end": 8349,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8290,
											"end": 8300,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8317,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8290,
											"end": 8317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "219"
										},
										{
											"begin": 8290,
											"end": 8317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 8290,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 8395,
											"end": 8402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8379,
											"end": 8390,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8390,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 8379,
											"end": 8394,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 8379,
											"end": 8403,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8369,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8376,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8365,
											"end": 8376,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8403,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8403,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8403,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8365,
											"end": 8403,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8258,
											"end": 8415,
											"name": "tag",
											"source": 4,
											"value": "217"
										},
										{
											"begin": 8258,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8487,
											"end": 8491,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8459,
											"end": 8463,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8459,
											"end": 8481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8447,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8454,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8454,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 8443,
											"end": 8458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 8443,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 8443,
											"end": 8486,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "tag",
											"source": 4,
											"value": "221"
										},
										{
											"begin": 8443,
											"end": 8492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8425,
											"end": 8440,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8492,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8492,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8425,
											"end": 8492,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8525,
											"end": 8529,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8516,
											"end": 8523,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8531,
											"end": 8538,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8508,
											"end": 8539,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7715,
											"end": 8547,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1245,
											"end": 1265,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "92"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "224"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 3,
											"value": "101"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 3,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 3,
											"value": "232"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10043,
											"end": 10061,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10070,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10080,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10080,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 10089,
											"end": 10093,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "tag",
											"source": 4,
											"value": "235"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "tag",
											"source": 4,
											"value": "237"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10064,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10043,
											"end": 10095,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10043,
											"end": 10095,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10123,
											"end": 10124,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10110,
											"end": 10124,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10323,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 10106,
											"end": 10323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10165,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10145,
											"end": 10152,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10145,
											"end": 10165,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10206,
											"end": 10209,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10192,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 10186,
											"end": 10222,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "tag",
											"source": 4,
											"value": "240"
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10283,
											"end": 10286,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10288,
											"end": 10295,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10269,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 10263,
											"end": 10282,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 10263,
											"end": 10296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 10141,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10106,
											"end": 10323,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 10106,
											"end": 10323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9965,
											"end": 10330,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2769,
											"end": 3031,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2769,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2851,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2862,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2854,
											"end": 2869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2869,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2854,
											"end": 2869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2837,
											"end": 2869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2896,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2908,
											"end": 2914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2905,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2914,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2969,
											"end": 2975,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2954,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2955,
											"end": 2958,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2959,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2946,
											"end": 2965,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2946,
											"end": 2975,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "545368617265526577617264506F6F6C3A206578697374696E6720706F6F6C3F"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2938,
											"end": 3012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2921,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2921,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2916,
											"end": 2921,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2916,
											"end": 2921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2880,
											"end": 3024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 3031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 3031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2769,
											"end": 3031,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 1,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 2,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "286"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									],
									".data": {
										"3C72DF8AB4EB3ADB53B2D5E3C0DCD6E55E8972BC8360589EB9459E56A713B10E": "545368617265526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"TOTAL_REWARDS()": "09cf6091",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"pendingShare(uint256,address)": "cf4b55cb",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"tSharePerSecond()": "9e63d261",
							"totalAllocPoint()": "17caf6f1",
							"tshare()": "ee6822a7",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tshare\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"TOTAL_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accTSharePerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tSharePerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tshare\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TShareRewardPool.sol\":\"PolyRocRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TShareRewardPool.sol\":{\"keccak256\":\"0x40e0e0821b39197b34a433b45d571a84972d2372723a57aa6bb1568e88ad3bbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d16746a5583d60cd1a04110fd03b2205e292291939b347dd112c40abe08e4d\",\"dweb:/ipfs/QmbbrjgMZxpmgEBC7q9NsrTFUGN4KQhFo9gRsS6vEAqqYj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 987,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "operator",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1005,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "tshare",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 1008,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(PoolInfo)1003_storage)dyn_storage"
							},
							{
								"astId": 1014,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)992_storage))"
							},
							{
								"astId": 1017,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1021,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1024,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "tSharePerSecond",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1027,
								"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1003_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1003_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyRocRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)992_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyRocRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)992_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)992_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)992_storage)"
							},
							"t_struct(PoolInfo)1003_storage": {
								"encoding": "inplace",
								"label": "struct PolyRocRewardPool.PoolInfo",
								"members": [
									{
										"astId": 994,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 996,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 998,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1000,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "accTSharePerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1002,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)992_storage": {
								"encoding": "inplace",
								"label": "struct PolyRocRewardPool.UserInfo",
								"members": [
									{
										"astId": 989,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 991,
										"contract": "contracts/distribution/TShareRewardPool.sol:PolyRocRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "278:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:9:0"
									},
									"scope": 77,
									"src": "232:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:9:0"
									},
									"scope": 77,
									"src": "370:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "676:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "729:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:6:0"
									},
									"scope": 77,
									"src": "658:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1044:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:9:0"
									},
									"scope": 77,
									"src": "1010:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1814:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1813:6:0"
									},
									"scope": 77,
									"src": "1746:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2182:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2209:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2148:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2248:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2247:6:0"
									},
									"scope": 77,
									"src": "2127:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2438:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2460:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2480:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2437:57:0"
									},
									"src": "2423:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2669:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2692:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2668:63:0"
									},
									"src": "2654:78:0"
								}
							],
							"scope": 78,
							"src": "138:2596:0"
						}
					],
					"src": "33:2702:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 78,
							"src": "66:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 81,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 588,
							"src": "90:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 82,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 975,
							"src": "127:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 86,
									"libraryName": {
										"contractScope": null,
										"id": 84,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 974,
										"src": "659:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$974",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:1",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 89,
									"libraryName": {
										"contractScope": null,
										"id": 87,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 587,
										"src": "691:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$587",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:1",
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "789:103:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "849:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "849:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "849:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "874:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "878:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "826:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "826:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 98,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "799:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "799:86:1"
											}
										]
									},
									"documentation": null,
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "739:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 90,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "739:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "753:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:41:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:1"
									},
									"scope": 290,
									"src": "717:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "988:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1018:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 126,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "1048:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1048:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1048:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 129,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1077:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1083:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "1087:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1025:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1025:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 122,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "998:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "998:96:1"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "924:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 112,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "924:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "938:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "952:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "964:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "923:55:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:1"
									},
									"scope": 290,
									"src": "898:203:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1437:537:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 155,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1766:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$290",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$290",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 153,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 141,
																					"src": "1773:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 151,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 139,
																					"src": "1742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1742:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1717:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 170,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "1927:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1927:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1927:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 173,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1951:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1960:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1904:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1904:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 166,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1877:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:1"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1382:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 138,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1382:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1396:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1413:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1381:46:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 290,
									"src": "1361:613:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2066:197:1",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 214,
														"src": "2076:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2143:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 194,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2123:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 192,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 196,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2130:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 190,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2099:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2099:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "2099:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2179:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2209:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2209:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2209:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2233:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 210,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2242:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2186:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2186:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2159:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:1"
											}
										]
									},
									"documentation": null,
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 180,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2042:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2010:46:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:1"
									},
									"scope": 290,
									"src": "1980:283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2355:242:1",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 251,
														"src": "2365:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2432:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 230,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2412:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 232,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2419:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2388:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2388:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "2388:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2513:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 243,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "2543:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2543:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2543:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 246,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 247,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2576:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2520:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2520:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 239,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2493:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:1"
											}
										]
									},
									"documentation": null,
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2300:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 216,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2314:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2331:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:46:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:1"
									},
									"scope": 290,
									"src": "2269:328:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3050:681:1",
										"statements": [
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "3399:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 260,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 267,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3453:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 264,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "3433:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 381,
														"src": "3425:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 271,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3508:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3508:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 287,
												"nodeType": "IfStatement",
												"src": "3504:221:1",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "3531:194:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 278,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "3648:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 279,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 281,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 276,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3637:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3637:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 275,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3629:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "3009:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 254,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "3023:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:33:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:1"
									},
									"scope": 290,
									"src": "2980:751:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 291,
							"src": "629:3104:1"
						}
					],
					"src": "33:3700:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							587
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "793:311:2",
										"statements": [
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 309,
														"src": "990:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 296,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:2",
														"valueSize": 1
													},
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:2",
														"valueSize": 1
													}
												],
												"id": 304,
												"nodeType": "InlineAssembly",
												"src": "1012:61:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 305,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1089:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 300,
												"id": 308,
												"nodeType": "Return",
												"src": "1082:15:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "747:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "787:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:6:2"
									},
									"scope": 587,
									"src": "727:377:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2092:241:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 321,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2118:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		],
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 319,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2110:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2135:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2102:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:2"
											},
											{
												"assignments": [
													330,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 343,
														"src": "2187:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 329,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 337,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 331,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2205:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2205:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 333,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2227:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 339,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2256:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "2040:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "2067:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2039:43:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:2"
									},
									"scope": 587,
									"src": "2021:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3164:84:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3194:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3202:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 354,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															381
														],
														"referencedDeclaration": 381,
														"src": "3181:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "3174:67:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3097:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3113:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3150:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3149:14:2"
									},
									"scope": 587,
									"src": "3075:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "3617:76:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3656:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3664:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 377,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3673:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 373,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															451
														],
														"referencedDeclaration": 451,
														"src": "3634:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 379,
												"nodeType": "Return",
												"src": "3627:59:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3525:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3552:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:93:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:14:2"
									},
									"scope": 587,
									"src": "3470:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "4198:111:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "4237:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "4245:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4251:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 393,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															451
														],
														"referencedDeclaration": 451,
														"src": "4215:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 392,
												"id": 399,
												"nodeType": "Return",
												"src": "4208:94:2"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4095:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4119:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4146:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4085:80:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4184:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4183:14:2"
									},
									"scope": 587,
									"src": "4055:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "4736:320:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 418,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4762:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		],
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 416,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4754:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "4779:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 428,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "4856:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "4845:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4837:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:2"
											},
											{
												"assignments": [
													434,
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "4909:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "4923:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 437,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "4950:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4950:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "4969:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 445,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 446,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5024:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "5036:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 444,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "4998:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 414,
												"id": 449,
												"nodeType": "Return",
												"src": "4991:58:2"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4597:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4621:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4671:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4587:116:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4722:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4721:14:2"
									},
									"scope": 587,
									"src": "4557:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "5333:97:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5369:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5377:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 461,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															468,
															503
														],
														"referencedDeclaration": 503,
														"src": "5350:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 460,
												"id": 466,
												"nodeType": "Return",
												"src": "5343:80:2"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5277:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5260:35:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5319:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:14:2"
									},
									"scope": 587,
									"src": "5233:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "5772:228:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 482,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "5801:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 481,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "5790:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5782:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:2"
											},
											{
												"assignments": [
													488,
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 502,
														"src": "5861:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 502,
														"src": "5875:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5920:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5902:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5902:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 497,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5959:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "5968:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5980:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 496,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "5942:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 479,
												"id": 501,
												"nodeType": "Return",
												"src": "5935:58:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5651:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5675:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5702:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:93:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5758:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5757:14:2"
									},
									"scope": 587,
									"src": "5614:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "6276:101:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 514,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "6314:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 513,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															520,
															555
														],
														"referencedDeclaration": 555,
														"src": "6293:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 512,
												"id": 518,
												"nodeType": "Return",
												"src": "6286:84:2"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6209:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6225:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6208:35:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6262:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6261:14:2"
									},
									"scope": 587,
									"src": "6179:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6718:232:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 534,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "6747:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 533,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6736:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:2"
											},
											{
												"assignments": [
													540,
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 554,
														"src": "6809:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 539,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 554,
														"src": "6823:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 541,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6870:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6850:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6850:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "6909:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 550,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "6918:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6930:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 548,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "6892:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 531,
												"id": 553,
												"nodeType": "Return",
												"src": "6885:58:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6626:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6653:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6592:93:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6704:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6703:14:2"
									},
									"scope": 587,
									"src": "6563:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "7330:532:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 567,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "7344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "7401:455:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 571,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "7485:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7485:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 581,
																"nodeType": "Block",
																"src": "7793:53:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 578,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "7818:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 577,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7811:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 580,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:2"
																	}
																]
															},
															"id": 582,
															"nodeType": "IfStatement",
															"src": "7481:365:2",
															"trueBody": {
																"id": 576,
																"nodeType": "Block",
																"src": "7508:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:2"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 575,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "7340:516:2",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "7353:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 568,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "7374:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 566,
															"id": 569,
															"nodeType": "Return",
															"src": "7367:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7205:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7227:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7260:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7195:97:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7316:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7315:14:2"
									},
									"scope": 587,
									"src": "7170:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 588,
							"src": "135:7729:2"
						}
					],
					"src": "33:7832:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							974
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "865:98:3",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 620,
														"src": "875:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "887:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "891:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 608,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "906:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 609,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 615,
												"nodeType": "IfStatement",
												"src": "902:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 613,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 601,
													"id": 614,
													"nodeType": "Return",
													"src": "913:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 617,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "954:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 618,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 601,
												"id": 619,
												"nodeType": "Return",
												"src": "940:16:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "805:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "816:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "850:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "856:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:3"
									},
									"scope": 974,
									"src": "789:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1185:75:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 633,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1199:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1203:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 640,
												"nodeType": "IfStatement",
												"src": "1195:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 638,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 632,
													"id": 639,
													"nodeType": "Return",
													"src": "1206:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 642,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "1247:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 645,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 632,
												"id": 646,
												"nodeType": "Return",
												"src": "1233:20:3"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1176:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:3"
									},
									"scope": 974,
									"src": "1109:151:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1484:359:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1716:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 667,
												"nodeType": "IfStatement",
												"src": "1712:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 665,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 659,
													"id": 666,
													"nodeType": "Return",
													"src": "1724:16:3"
												}
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 688,
														"src": "1750:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1762:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1766:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 674,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1781:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 675,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1785:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1790:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 683,
												"nodeType": "IfStatement",
												"src": "1777:33:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 659,
													"id": 682,
													"nodeType": "Return",
													"src": "1793:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1834:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 686,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 659,
												"id": 687,
												"nodeType": "Return",
												"src": "1820:16:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1424:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1435:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1469:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1475:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:3"
									},
									"scope": 974,
									"src": "1408:435:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2068:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2082:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 708,
												"nodeType": "IfStatement",
												"src": "2078:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 700,
													"id": 707,
													"nodeType": "Return",
													"src": "2090:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 710,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "2131:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 711,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "2135:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 713,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 700,
												"id": 714,
												"nodeType": "Return",
												"src": "2117:20:3"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2019:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2059:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:3"
									},
									"scope": 974,
									"src": "1992:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "2379:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 728,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2393:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 735,
												"nodeType": "IfStatement",
												"src": "2389:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 733,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 727,
													"id": 734,
													"nodeType": "Return",
													"src": "2401:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 737,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2442:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 738,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "2446:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 740,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 727,
												"id": 741,
												"nodeType": "Return",
												"src": "2428:20:3"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2319:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2330:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2364:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2370:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:3"
									},
									"scope": 974,
									"src": "2303:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "2757:108:3",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 768,
														"src": "2767:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 755,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2779:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 756,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "2783:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 760,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "2802:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 761,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "2807:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 766,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 754,
													"src": "2857:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 752,
												"id": 767,
												"nodeType": "Return",
												"src": "2850:8:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2703:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2714:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2748:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:3"
									},
									"scope": 974,
									"src": "2690:175:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "3203:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3221:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 781,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3226:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 786,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3279:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 787,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3283:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 778,
												"id": 789,
												"nodeType": "Return",
												"src": "3272:12:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3160:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3194:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:3"
									},
									"scope": 974,
									"src": "3136:155:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "3605:148:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 801,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3619:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 806,
												"nodeType": "IfStatement",
												"src": "3615:20:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 800,
													"id": 805,
													"nodeType": "Return",
													"src": "3627:8:3"
												}
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 824,
														"src": "3645:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3657:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 810,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3661:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "3680:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "3684:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 817,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "3689:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 822,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "3745:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 800,
												"id": 823,
												"nodeType": "Return",
												"src": "3738:8:3"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3551:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3562:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:3"
									},
									"scope": 974,
									"src": "3538:215:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "4284:83:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 836,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4302:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 842,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "4355:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 843,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4359:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 834,
												"id": 845,
												"nodeType": "Return",
												"src": "4348:12:3"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4230:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4241:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4275:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:3"
									},
									"scope": 974,
									"src": "4217:150:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "4887:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "4905:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 864,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 856,
												"id": 867,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4833:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4844:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:3"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:3"
									},
									"scope": 974,
									"src": "4820:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "5527:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 882,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "5545:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "5550:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5553:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 888,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "5583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5587:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 891,
												"nodeType": "Return",
												"src": "5576:12:3"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5445:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5456:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5467:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5518:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:3"
									},
									"scope": 974,
									"src": "5432:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "5669:103:3",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 924,
														"src": "5679:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 905,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "5695:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 906,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "5698:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5691:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:3"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 924,
														"src": "5710:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 912,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5726:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 911,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															791,
															893
														],
														"referencedDeclaration": 791,
														"src": "5722:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 918,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "5756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 919,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5759:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 917,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	847,
																	949
																],
																"referencedDeclaration": 847,
																"src": "5752:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 921,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "5763:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5748:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 923,
												"nodeType": "Return",
												"src": "5741:24:3"
											}
										]
									},
									"documentation": null,
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5615:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5626:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5614:22:3"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5660:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5659:9:3"
									},
									"scope": 974,
									"src": "5601:171:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "6524:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 938,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "6542:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 941,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "6549:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6534:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 944,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "6579:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 945,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "6583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 936,
												"id": 947,
												"nodeType": "Return",
												"src": "6572:12:3"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6442:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6453:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6464:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:50:3"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6515:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6514:9:3"
									},
									"scope": 974,
									"src": "6429:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "7332:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "7350:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 965,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7357:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7342:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 968,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "7387:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 969,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "7391:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 971,
												"nodeType": "Return",
												"src": "7380:12:3"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7250:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7261:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7272:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7249:50:3"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7323:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:9:3"
									},
									"scope": 974,
									"src": "7237:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 975,
							"src": "630:6771:3"
						}
					],
					"src": "33:7368:3"
				},
				"id": 3
			},
			"contracts/distribution/TShareRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TShareRewardPool.sol",
					"exportedSymbols": {
						"PolyRocRewardPool": [
							2002
						]
					},
					"id": 2003,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 976,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 977,
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 78,
							"src": "70:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 978,
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 291,
							"src": "128:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 979,
							"nodeType": "ImportDirective",
							"scope": 2003,
							"sourceUnit": 975,
							"src": "195:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2002,
							"linearizedBaseContracts": [
								2002
							],
							"name": "PolyRocRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 982,
									"libraryName": {
										"contractScope": null,
										"id": 980,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 974,
										"src": "475:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$974",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "469:27:4",
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 985,
									"libraryName": {
										"contractScope": null,
										"id": 983,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 290,
										"src": "508:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$290",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "502:27:4",
									"typeName": {
										"contractScope": null,
										"id": 984,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "522:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 987,
									"mutability": "mutable",
									"name": "operator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "556:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 986,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "556:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "PolyRocRewardPool.UserInfo",
									"id": 992,
									"members": [
										{
											"constant": false,
											"id": 989,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 992,
											"src": "642:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 988,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "642:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 991,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 992,
											"src": "712:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 990,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "712:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2002,
									"src": "615:162:4",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyRocRewardPool.PoolInfo",
									"id": 1003,
									"members": [
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "839:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"contractScope": null,
												"id": 993,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 77,
												"src": "839:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "895:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "895:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 998,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1010:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 997,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1010:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1000,
											"mutability": "mutable",
											"name": "accTSharePerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1090:25:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 999,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1090:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1002,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1183:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1001,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1183:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2002,
									"src": "812:425:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ee6822a7",
									"id": 1005,
									"mutability": "mutable",
									"name": "tshare",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1245:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1004,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "1245:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1008,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1301:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
										"typeString": "struct PolyRocRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 1006,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1003,
											"src": "1301:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
												"typeString": "struct PolyRocRewardPool.PoolInfo"
											}
										},
										"id": 1007,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1301:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage_ptr",
											"typeString": "struct PolyRocRewardPool.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1014,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1385:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1013,
										"keyType": {
											"id": 1009,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1393:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1385:48:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1012,
											"keyType": {
												"id": 1010,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1412:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1404:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
												"typeString": "mapping(address => struct PolyRocRewardPool.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1011,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 992,
												"src": "1423:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
													"typeString": "struct PolyRocRewardPool.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1017,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1546:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1546:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1579:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1019,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1633:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1018,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1633:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1021,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1712:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1020,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1712:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9e63d261",
									"id": 1024,
									"mutability": "mutable",
									"name": "tSharePerSecond",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1747:49:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1022,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1747:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e3030313837363837",
										"id": 1023,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1780:16:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1876870000000000_by_1",
											"typeString": "int_const 1876870000000000"
										},
										"value": "0.00187687"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1027,
									"mutability": "mutable",
									"name": "runningTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1852:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1025,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1852:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "333730",
										"id": 1026,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1881:8:4",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31968000_by_1",
											"typeString": "int_const 31968000"
										},
										"value": "370"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "09cf6091",
									"id": 1030,
									"mutability": "constant",
									"name": "TOTAL_REWARDS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2002,
									"src": "1908:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1028,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1908:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3630303030",
										"id": 1029,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1948:11:4",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_60000000000000000000000_by_1",
											"typeString": "int_const 60000000000000000000000"
										},
										"value": "60000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1038,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1038,
												"src": "1982:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1038,
												"src": "2004:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1033,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1038,
												"src": "2025:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1981:59:4"
									},
									"src": "1968:73:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1046,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "2062:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "2084:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1046,
												"src": "2105:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2061:59:4"
									},
									"src": "2047:74:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1054,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "2151:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1047,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2151:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1050,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "2173:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1052,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1054,
												"src": "2194:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2194:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2150:59:4"
									},
									"src": "2127:83:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1060,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "2233:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1060,
												"src": "2255:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2255:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2232:38:4"
									},
									"src": "2216:55:4"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "2364:255:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1068,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2383:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2383:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "2401:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2383:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c617465",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2417:6:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2375:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2375:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "2375:49:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1075,
														"name": "_tshare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "2439:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2458:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2450:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1076,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2450:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2450:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2439:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1087,
												"nodeType": "IfStatement",
												"src": "2435:51:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1081,
															"name": "tshare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2462:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1083,
																	"name": "_tshare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1062,
																	"src": "2478:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1082,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2471:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2471:15:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"src": "2462:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"id": 1086,
													"nodeType": "ExpressionStatement",
													"src": "2462:24:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1090,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1088,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2497:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1089,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2513:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2497:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1091,
												"nodeType": "ExpressionStatement",
												"src": "2497:30:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1092,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "2538:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1093,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "2552:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1094,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "2568:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2552:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2538:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1097,
												"nodeType": "ExpressionStatement",
												"src": "2538:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1098,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2590:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1099,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2601:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2601:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2590:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "2590:21:4"
											}
										]
									},
									"documentation": null,
									"id": 1104,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "_tshare",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "2301:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1104,
												"src": "2327:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2290:66:4"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:0:4"
									},
									"scope": 2002,
									"src": "2279:340:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "2651:110:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1107,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "2670:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1108,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2682:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2682:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2670:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "545368617265526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 1111,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2694:46:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e",
																"typeString": "literal_string \"TShareRewardPool: caller is not the operator\""
															},
															"value": "TShareRewardPool: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c72df8ab4eb3adb53b2d5e3c0dcd6e55e8972bc8360589eb9459e56a713b10e",
																"typeString": "literal_string \"TShareRewardPool: caller is not the operator\""
															}
														],
														"id": 1106,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2662:79:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "2662:79:4"
											},
											{
												"id": 1114,
												"nodeType": "PlaceholderStatement",
												"src": "2752:1:4"
											}
										]
									},
									"documentation": null,
									"id": 1116,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2648:2:4"
									},
									"src": "2627:134:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "2826:205:4",
										"statements": [
											{
												"assignments": [
													1122
												],
												"declarations": [
													{
														"constant": false,
														"id": 1122,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1148,
														"src": "2837:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1121,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2837:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1123,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "2854:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "2854:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2837:32:4"
											},
											{
												"body": {
													"id": 1146,
													"nodeType": "Block",
													"src": "2923:101:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1137,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "2946:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																						"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1139,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1138,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1127,
																					"src": "2955:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2946:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
																					"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1140,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 994,
																			"src": "2946:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1141,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1118,
																			"src": "2969:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "2946:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "545368617265526577617264506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2977:34:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_962fec34f5f95e81fb2487d9be07bfb03f08b7cdc14ee8edac74bfb817d8ef06",
																			"typeString": "literal_string \"TShareRewardPool: existing pool?\""
																		},
																		"value": "TShareRewardPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_962fec34f5f95e81fb2487d9be07bfb03f08b7cdc14ee8edac74bfb817d8ef06",
																			"typeString": "literal_string \"TShareRewardPool: existing pool?\""
																		}
																	],
																	"id": 1136,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "2938:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2938:74:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1145,
															"nodeType": "ExpressionStatement",
															"src": "2938:74:4"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1130,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1127,
														"src": "2902:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1131,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1122,
														"src": "2908:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2902:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1147,
												"initializationExpression": {
													"assignments": [
														1127
													],
													"declarations": [
														{
															"constant": false,
															"id": 1127,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1147,
															"src": "2885:11:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1126,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2885:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1129,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1128,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2899:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2885:15:4"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2916:5:4",
														"subExpression": {
															"argumentTypes": null,
															"id": 1133,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1127,
															"src": "2918:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1135,
													"nodeType": "ExpressionStatement",
													"src": "2916:5:4"
												},
												"nodeType": "ForStatement",
												"src": "2880:144:4"
											}
										]
									},
									"documentation": null,
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1149,
												"src": "2797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1117,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2797:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2796:15:4"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2826:0:4"
									},
									"scope": 2002,
									"src": "2769:262:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "3261:1123:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1163,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "3291:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														],
														"id": 1162,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "3272:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$77_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1165,
												"nodeType": "ExpressionStatement",
												"src": "3272:26:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1166,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1155,
													"src": "3313:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "3309:61:4",
												"trueBody": {
													"id": 1170,
													"nodeType": "Block",
													"src": "3326:44:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1167,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "3341:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3341:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1169,
															"nodeType": "ExpressionStatement",
															"src": "3341:17:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1172,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3384:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3384:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1174,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3402:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3384:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1211,
													"nodeType": "Block",
													"src": "3725:189:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1196,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "3776:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1197,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3795:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3776:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1199,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "3800:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1200,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "3818:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3818:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3800:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3776:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1210,
															"nodeType": "IfStatement",
															"src": "3772:131:4",
															"trueBody": {
																"id": 1209,
																"nodeType": "Block",
																"src": "3835:68:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1204,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "3854:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1205,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "3872:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3872:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3854:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1208,
																		"nodeType": "ExpressionStatement",
																		"src": "3854:33:4"
																	}
																]
															}
														}
													]
												},
												"id": 1212,
												"nodeType": "IfStatement",
												"src": "3380:534:4",
												"trueBody": {
													"id": 1195,
													"nodeType": "Block",
													"src": "3417:302:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1176,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "3469:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3488:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3469:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1193,
																"nodeType": "Block",
																"src": "3563:145:4",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1186,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1184,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "3586:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1185,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "3604:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3586:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1192,
																		"nodeType": "IfStatement",
																		"src": "3582:111:4",
																		"trueBody": {
																			"id": 1191,
																			"nodeType": "Block",
																			"src": "3619:74:4",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1189,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1187,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1157,
																							"src": "3642:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 1188,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1019,
																							"src": "3660:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3642:31:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1190,
																					"nodeType": "ExpressionStatement",
																					"src": "3642:31:4"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1194,
															"nodeType": "IfStatement",
															"src": "3465:243:4",
															"trueBody": {
																"id": 1183,
																"nodeType": "Block",
																"src": "3491:66:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1179,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "3510:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1180,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "3528:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3510:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1182,
																		"nodeType": "ExpressionStatement",
																		"src": "3510:31:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1214
												],
												"declarations": [
													{
														"constant": false,
														"id": 1214,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1248,
														"src": "3924:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1213,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3924:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1225,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1215,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "3952:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1216,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "3971:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3952:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1218,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3951:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1219,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "3999:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1220,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "4018:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1221,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4018:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3999:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1223,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3998:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3951:83:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3924:110:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1230,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4091:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1231,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "4125:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1232,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "4168:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4218:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 1234,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1214,
																	"src": "4246:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1229,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "4059:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1003_storage_ptr_$",
																	"typeString": "type(struct PolyRocRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accTSharePerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4059:213:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_memory_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1003_memory_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1226,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4045:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1228,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4045:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1003_storage_$returns$__$",
															"typeString": "function (struct PolyRocRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4045:228:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1237,
												"nodeType": "ExpressionStatement",
												"src": "4045:228:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1238,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1214,
													"src": "4288:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "4284:93:4",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "4300:77:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1239,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "4315:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1242,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1151,
																			"src": "4353:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1240,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "4333:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "4333:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4333:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4315:50:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1245,
															"nodeType": "ExpressionStatement",
															"src": "4315:50:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "96805e54",
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1160,
											"modifierName": {
												"argumentTypes": null,
												"id": 1159,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1116,
												"src": "3248:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3248:12:4"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "3129:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "3159:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1152,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3159:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "3183:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1154,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3183:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1249,
												"src": "3210:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3118:122:4"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3261:0:4"
									},
									"scope": 2002,
									"src": "3106:1278:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "4550:285:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1258,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1485,
														"src": "4561:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "4561:17:4"
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1288,
														"src": "4589:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1261,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "4589:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1266,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1263,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "4613:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1265,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1264,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1251,
														"src": "4622:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4613:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4589:38:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1267,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1262,
														"src": "4642:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1002,
													"src": "4642:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "4638:150:4",
												"trueBody": {
													"id": 1280,
													"nodeType": "Block",
													"src": "4658:130:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1269,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "4673:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1276,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "4750:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1272,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1262,
																						"src": "4711:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																							"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1273,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 996,
																					"src": "4711:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1270,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "4691:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1271,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "4691:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4691:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "4691:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4691:85:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4673:103:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1279,
															"nodeType": "ExpressionStatement",
															"src": "4673:103:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1282,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "4798:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 996,
														"src": "4798:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1285,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "4816:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4798:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "4798:29:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1ab06ee5",
									"id": 1289,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1256,
											"modifierName": {
												"argumentTypes": null,
												"id": 1255,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1116,
												"src": "4537:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4537:12:4"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "4495:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1250,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4495:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1289,
												"src": "4509:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4509:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4494:35:4"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4550:0:4"
									},
									"scope": 2002,
									"src": "4482:353:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "5006:567:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1298,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1291,
														"src": "5021:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1299,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "5034:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5021:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1303,
												"nodeType": "IfStatement",
												"src": "5017:34:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5050:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1297,
													"id": 1302,
													"nodeType": "Return",
													"src": "5043:8:4"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1304,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "5066:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1305,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "5077:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5066:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "5335:231:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1334,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1293,
																	"src": "5354:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1335,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "5365:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5354:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1339,
															"nodeType": "IfStatement",
															"src": "5350:38:4",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5387:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1297,
																"id": 1338,
																"nodeType": "Return",
																"src": "5380:8:4"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1340,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "5407:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1341,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "5420:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5407:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1351,
															"nodeType": "IfStatement",
															"src": "5403:86:4",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1348,
																			"name": "tSharePerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "5473:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1345,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "5454:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1343,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1293,
																					"src": "5442:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "5442:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1346,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5442:26:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "5442:30:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5442:47:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1297,
																"id": 1350,
																"nodeType": "Return",
																"src": "5435:54:4"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1357,
																		"name": "tSharePerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "5538:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1354,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "5523:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1352,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1293,
																				"src": "5511:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1353,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 791,
																			"src": "5511:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5511:22:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "5511:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5511:43:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1297,
															"id": 1359,
															"nodeType": "Return",
															"src": "5504:50:4"
														}
													]
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "5062:504:4",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "5090:239:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1307,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "5109:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1308,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "5122:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5109:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1312,
															"nodeType": "IfStatement",
															"src": "5105:38:4",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1297,
																"id": 1311,
																"nodeType": "Return",
																"src": "5135:8:4"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1313,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1291,
																	"src": "5162:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1314,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "5175:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5162:26:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1324,
															"nodeType": "IfStatement",
															"src": "5158:90:4",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1321,
																			"name": "tSharePerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1024,
																			"src": "5232:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1318,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1019,
																					"src": "5213:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1316,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "5197:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1317,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "5197:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5197:30:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "5197:34:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5197:51:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1297,
																"id": 1323,
																"nodeType": "Return",
																"src": "5190:58:4"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1330,
																		"name": "tSharePerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "5301:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1327,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1291,
																				"src": "5286:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1325,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1021,
																				"src": "5270:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 791,
																			"src": "5270:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1328,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5270:26:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "5270:30:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5270:47:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1297,
															"id": 1332,
															"nodeType": "Return",
															"src": "5263:54:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "231f0c6a",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1363,
												"src": "4940:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4940:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1363,
												"src": "4959:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4959:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4939:36:4"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1363,
												"src": "4997:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4996:9:4"
									},
									"scope": 2002,
									"src": "4912:661:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "5722:703:4",
										"statements": [
											{
												"assignments": [
													1373
												],
												"declarations": [
													{
														"constant": false,
														"id": 1373,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1459,
														"src": "5733:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1372,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "5733:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1377,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1374,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "5757:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1376,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1375,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "5766:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5757:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5733:38:4"
											},
											{
												"assignments": [
													1379
												],
												"declarations": [
													{
														"constant": false,
														"id": 1379,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1459,
														"src": "5782:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct PolyRocRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1378,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "5782:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1385,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1380,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "5806:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1382,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1381,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "5815:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5806:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct PolyRocRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1384,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1383,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "5821:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5806:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct PolyRocRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5782:45:4"
											},
											{
												"assignments": [
													1387
												],
												"declarations": [
													{
														"constant": false,
														"id": 1387,
														"mutability": "mutable",
														"name": "accTSharePerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1459,
														"src": "5838:25:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1386,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5838:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1388,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "5866:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accTSharePerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1000,
													"src": "5866:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5838:50:4"
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1459,
														"src": "5899:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5899:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1401,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1398,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "5950:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5942:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5942:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5942:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1393,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "5921:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "5921:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1395,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "5921:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5921:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5899:57:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1402,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "5971:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1403,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "5971:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1404,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1373,
																"src": "5989:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1405,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 998,
															"src": "5989:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5971:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1407,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1392,
															"src": "6012:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6027:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6012:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5971:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1445,
												"nodeType": "IfStatement",
												"src": "5967:368:4",
												"trueBody": {
													"id": 1444,
													"nodeType": "Block",
													"src": "6030:305:4",
													"statements": [
														{
															"assignments": [
																1412
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1412,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1444,
																	"src": "6045:24:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1411,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6045:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1419,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1414,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1373,
																			"src": "6091:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1415,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 998,
																		"src": "6091:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1416,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "6112:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6112:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1413,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "6072:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6072:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6045:83:4"
														},
														{
															"assignments": [
																1421
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1421,
																	"mutability": "mutable",
																	"name": "_tshareReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1444,
																	"src": "6143:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1420,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6143:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1430,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1428,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "6209:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1424,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1373,
																					"src": "6188:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1425,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 996,
																				"src": "6188:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1422,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1412,
																				"src": "6167:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1423,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 825,
																			"src": "6167:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6167:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "6167:41:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6167:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6143:82:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1442,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1431,
																	"name": "accTSharePerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1387,
																	"src": "6240:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1439,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1392,
																					"src": "6310:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1436,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6300:4:4",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1434,
																							"name": "_tshareReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1421,
																							"src": "6282:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1435,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 825,
																						"src": "6282:17:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6282:23:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 847,
																				"src": "6282:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6282:40:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1432,
																			"name": "accTSharePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1387,
																			"src": "6260:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "6260:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6260:63:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6240:83:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1443,
															"nodeType": "ExpressionStatement",
															"src": "6240:83:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1455,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "6401:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1456,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "6401:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6391:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1449,
																			"name": "accTSharePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1387,
																			"src": "6368:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1446,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1379,
																				"src": "6352:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "6352:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "6352:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6352:34:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 847,
																"src": "6352:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6352:44:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "6352:48:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:65:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1371,
												"id": 1458,
												"nodeType": "Return",
												"src": "6345:72:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cf4b55cb",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingShare",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1460,
												"src": "5661:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5661:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1460,
												"src": "5675:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5660:29:4"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1460,
												"src": "5713:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5712:9:4"
									},
									"scope": 2002,
									"src": "5639:786:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "6542:146:4",
										"statements": [
											{
												"assignments": [
													1464
												],
												"declarations": [
													{
														"constant": false,
														"id": 1464,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1484,
														"src": "6553:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1463,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6553:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1467,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1465,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "6570:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6570:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6553:32:4"
											},
											{
												"body": {
													"id": 1482,
													"nodeType": "Block",
													"src": "6639:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1479,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "6665:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1478,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1596,
																	"src": "6654:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6654:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1481,
															"nodeType": "ExpressionStatement",
															"src": "6654:15:4"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1472,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1469,
														"src": "6618:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1473,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1464,
														"src": "6624:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6618:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1483,
												"initializationExpression": {
													"assignments": [
														1469
													],
													"declarations": [
														{
															"constant": false,
															"id": 1469,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1483,
															"src": "6601:11:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1468,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6601:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1471,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6615:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6601:15:4"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6632:5:4",
														"subExpression": {
															"argumentTypes": null,
															"id": 1475,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6634:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1477,
													"nodeType": "ExpressionStatement",
													"src": "6632:5:4"
												},
												"nodeType": "ForStatement",
												"src": "6596:85:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "630b5ba1",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6532:2:4"
									},
									"returnParameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6542:0:4"
									},
									"scope": 2002,
									"src": "6508:180:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1595,
										"nodeType": "Block",
										"src": "6805:875:4",
										"statements": [
											{
												"assignments": [
													1491
												],
												"declarations": [
													{
														"constant": false,
														"id": 1491,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1595,
														"src": "6816:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1490,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "6816:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1495,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1492,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "6840:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1494,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1493,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "6849:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6840:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6816:38:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1496,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "6869:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6869:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1498,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "6888:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 998,
														"src": "6888:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6869:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1503,
												"nodeType": "IfStatement",
												"src": "6865:77:4",
												"trueBody": {
													"id": 1502,
													"nodeType": "Block",
													"src": "6909:33:4",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1489,
															"id": 1501,
															"nodeType": "Return",
															"src": "6924:7:4"
														}
													]
												}
											},
											{
												"assignments": [
													1505
												],
												"declarations": [
													{
														"constant": false,
														"id": 1505,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1595,
														"src": "6952:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1504,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6952:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1511,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7003:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6995:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1509,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6995:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6995:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1506,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "6974:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "6974:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6974:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6974:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6952:57:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1515,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1505,
														"src": "7024:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7039:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7024:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1527,
												"nodeType": "IfStatement",
												"src": "7020:107:4",
												"trueBody": {
													"id": 1526,
													"nodeType": "Block",
													"src": "7042:85:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1518,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "7057:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 998,
																	"src": "7057:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1521,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "7079:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1522,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7079:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7057:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1524,
															"nodeType": "ExpressionStatement",
															"src": "7057:37:4"
														},
														{
															"expression": null,
															"functionReturnParameters": 1489,
															"id": 1525,
															"nodeType": "Return",
															"src": "7109:7:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7141:15:4",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1528,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "7142:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1002,
														"src": "7142:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1546,
												"nodeType": "IfStatement",
												"src": "7137:138:4",
												"trueBody": {
													"id": 1545,
													"nodeType": "Block",
													"src": "7158:117:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1531,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "7173:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1533,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1002,
																	"src": "7173:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1534,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7190:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7173:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1536,
															"nodeType": "ExpressionStatement",
															"src": "7173:21:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1537,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "7209:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1540,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1491,
																				"src": "7247:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 996,
																			"src": "7247:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1538,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "7227:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "7227:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7227:36:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7209:54:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1544,
															"nodeType": "ExpressionStatement",
															"src": "7209:54:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1547,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "7289:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7307:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7289:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1587,
												"nodeType": "IfStatement",
												"src": "7285:340:4",
												"trueBody": {
													"id": 1586,
													"nodeType": "Block",
													"src": "7310:315:4",
													"statements": [
														{
															"assignments": [
																1551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1551,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1586,
																	"src": "7325:24:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7325:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1558,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1553,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1491,
																			"src": "7371:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 998,
																		"src": "7371:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1555,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "7392:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7392:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1552,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1363,
																	"src": "7352:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7352:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7325:83:4"
														},
														{
															"assignments": [
																1560
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1560,
																	"mutability": "mutable",
																	"name": "_tshareReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1586,
																	"src": "7423:21:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7423:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1569,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1567,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "7489:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1563,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1491,
																					"src": "7468:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 996,
																				"src": "7468:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1561,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "7447:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 825,
																			"src": "7447:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7447:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "7447:41:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7447:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7423:82:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1570,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1491,
																		"src": "7520:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accTSharePerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1000,
																	"src": "7520:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1581,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1505,
																					"src": "7600:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1578,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7590:4:4",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1576,
																							"name": "_tshareReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1560,
																							"src": "7572:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1577,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 825,
																						"src": "7572:17:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1579,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7572:23:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1580,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 847,
																				"src": "7572:27:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7572:40:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1573,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1491,
																				"src": "7545:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accTSharePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1000,
																			"src": "7545:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "7545:26:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7545:68:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7520:93:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1585,
															"nodeType": "ExpressionStatement",
															"src": "7520:93:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1588,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "7635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1590,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 998,
														"src": "7635:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1591,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7657:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1592,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7657:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7635:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1594,
												"nodeType": "ExpressionStatement",
												"src": "7635:37:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "51eb05a6",
									"id": 1596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1596,
												"src": "6784:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6783:14:4"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6805:0:4"
									},
									"scope": 2002,
									"src": "6764:916:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "7770:777:4",
										"statements": [
											{
												"assignments": [
													1604
												],
												"declarations": [
													{
														"constant": false,
														"id": 1604,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1711,
														"src": "7781:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1603,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7781:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1607,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1605,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "7799:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "7799:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7781:28:4"
											},
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1711,
														"src": "7820:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1608,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "7820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1610,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "7844:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1612,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1611,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "7853:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7844:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7820:38:4"
											},
											{
												"assignments": [
													1615
												],
												"declarations": [
													{
														"constant": false,
														"id": 1615,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1711,
														"src": "7869:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct PolyRocRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1614,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "7869:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1621,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1616,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "7893:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1618,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1617,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "7902:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7893:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct PolyRocRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1620,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1619,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1604,
														"src": "7908:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7893:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct PolyRocRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7869:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1623,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "7938:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "7927:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7927:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1625,
												"nodeType": "ExpressionStatement",
												"src": "7927:16:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1626,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "7958:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "7958:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7972:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7958:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1662,
												"nodeType": "IfStatement",
												"src": "7954:294:4",
												"trueBody": {
													"id": 1661,
													"nodeType": "Block",
													"src": "7975:273:4",
													"statements": [
														{
															"assignments": [
																1631
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1631,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1661,
																	"src": "7990:16:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1630,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7990:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1645,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1642,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "8063:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "8063:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 1639,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8053:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1635,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1609,
																							"src": "8025:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																								"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1636,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accTSharePerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1000,
																						"src": "8025:22:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1632,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1615,
																							"src": "8009:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																								"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1633,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 989,
																						"src": "8009:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1634,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 825,
																					"src": "8009:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1637,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8009:39:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 847,
																			"src": "8009:43:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8009:49:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 791,
																	"src": "8009:53:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8009:70:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7990:89:4"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1648,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1646,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1631,
																	"src": "8098:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8109:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8098:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1660,
															"nodeType": "IfStatement",
															"src": "8094:143:4",
															"trueBody": {
																"id": 1659,
																"nodeType": "Block",
																"src": "8112:125:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1650,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "8150:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1651,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1631,
																					"src": "8159:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1649,
																				"name": "safeTShareTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1924,
																				"src": "8131:18:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8131:37:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1653,
																		"nodeType": "ExpressionStatement",
																		"src": "8131:37:4"
																	},
																	{
																		"eventCall": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1655,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1604,
																					"src": "8203:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1656,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1631,
																					"src": "8212:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1654,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1060,
																				"src": "8192:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8192:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1658,
																		"nodeType": "EmitStatement",
																		"src": "8187:34:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1663,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1600,
														"src": "8262:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8272:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8262:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "8258:157:4",
												"trueBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "8275:140:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1671,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1604,
																		"src": "8318:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1674,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "8335:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																					"typeString": "contract PolyRocRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																					"typeString": "contract PolyRocRewardPool"
																				}
																			],
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8327:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8327:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8327:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1676,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1600,
																		"src": "8342:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1666,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1609,
																			"src": "8290:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1669,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 994,
																		"src": "8290:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "8290:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8290:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1678,
															"nodeType": "ExpressionStatement",
															"src": "8290:60:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1679,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "8365:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																			"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "8365:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1685,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1600,
																			"src": "8395:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1682,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1615,
																				"src": "8379:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1683,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "8379:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "8379:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8379:24:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8365:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1688,
															"nodeType": "ExpressionStatement",
															"src": "8365:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1691,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "8425:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1693,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "8425:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8487:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1697,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1609,
																			"src": "8459:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1698,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accTSharePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1000,
																		"src": "8459:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1694,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1615,
																			"src": "8443:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "8443:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "8443:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8443:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "8443:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8443:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8425:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1704,
												"nodeType": "ExpressionStatement",
												"src": "8425:67:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1706,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1604,
															"src": "8516:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1707,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1598,
															"src": "8525:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1708,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "8531:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1705,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1038,
														"src": "8508:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8508:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "EmitStatement",
												"src": "8503:36:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1712,
												"src": "7732:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7732:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1712,
												"src": "7746:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7746:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7731:31:4"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7770:0:4"
									},
									"scope": 2002,
									"src": "7715:832:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "8639:760:4",
										"statements": [
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "8650:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8650:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1723,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1721,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8668:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "8668:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8650:28:4"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "8689:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1724,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "8689:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1729,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1726,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "8713:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1728,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1727,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "8722:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8713:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8689:38:4"
											},
											{
												"assignments": [
													1731
												],
												"declarations": [
													{
														"constant": false,
														"id": 1731,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "8738:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct PolyRocRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1730,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "8738:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1737,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1732,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "8762:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1734,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1733,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "8771:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8762:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct PolyRocRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1736,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1735,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "8777:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8762:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct PolyRocRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8738:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1739,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1731,
																	"src": "8804:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																		"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1740,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 989,
																"src": "8804:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1741,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1716,
																"src": "8819:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8804:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8828:20:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "8796:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8796:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "8796:53:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1747,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "8871:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1746,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "8860:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8860:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "8860:16:4"
											},
											{
												"assignments": [
													1751
												],
												"declarations": [
													{
														"constant": false,
														"id": 1751,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1825,
														"src": "8887:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1750,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8887:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1762,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "8960:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1763,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "8960:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8950:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1755,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1725,
																				"src": "8922:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1756,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accTSharePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1000,
																			"src": "8922:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1752,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "8906:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "8906:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "8906:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8906:39:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 847,
																"src": "8906:43:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8906:49:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "8906:53:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8906:70:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8887:89:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1766,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1751,
														"src": "8991:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9002:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8991:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1780,
												"nodeType": "IfStatement",
												"src": "8987:131:4",
												"trueBody": {
													"id": 1779,
													"nodeType": "Block",
													"src": "9005:113:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1770,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "9039:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1771,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "9048:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1769,
																	"name": "safeTShareTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "9020:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1772,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9020:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1773,
															"nodeType": "ExpressionStatement",
															"src": "9020:37:4"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1775,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "9088:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1776,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1751,
																		"src": "9097:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1774,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1060,
																	"src": "9077:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9077:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1778,
															"nodeType": "EmitStatement",
															"src": "9072:34:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1781,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1716,
														"src": "9132:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1782,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9142:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9132:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1804,
												"nodeType": "IfStatement",
												"src": "9128:138:4",
												"trueBody": {
													"id": 1803,
													"nodeType": "Block",
													"src": "9145:121:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1784,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1731,
																		"src": "9160:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																			"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "9160:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1790,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "9190:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1787,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1731,
																				"src": "9174:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1788,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "9174:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "9174:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9174:24:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9160:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1793,
															"nodeType": "ExpressionStatement",
															"src": "9160:38:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1799,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "9237:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1800,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "9246:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1794,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "9213:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1797,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 994,
																		"src": "9213:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 111,
																	"src": "9213:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1801,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9213:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1802,
															"nodeType": "ExpressionStatement",
															"src": "9213:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1805,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1731,
															"src": "9276:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "9276:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1815,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9338:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1811,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1725,
																			"src": "9310:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accTSharePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1000,
																		"src": "9310:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1808,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1731,
																			"src": "9294:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "9294:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "9294:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9294:39:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "9294:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1816,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9294:49:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9276:67:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "9276:67:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1820,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1720,
															"src": "9368:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1821,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "9377:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1822,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "9383:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1819,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "9359:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9359:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "EmitStatement",
												"src": "9354:37:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "8601:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1826,
												"src": "8615:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8615:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8600:31:4"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8639:0:4"
									},
									"scope": 2002,
									"src": "8583:816:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1880,
										"nodeType": "Block",
										"src": "9518:329:4",
										"statements": [
											{
												"assignments": [
													1832
												],
												"declarations": [
													{
														"constant": false,
														"id": 1832,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1880,
														"src": "9529:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct PolyRocRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1831,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "9529:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct PolyRocRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1836,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1833,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "9553:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1835,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1834,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1828,
														"src": "9562:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9553:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9529:38:4"
											},
											{
												"assignments": [
													1838
												],
												"declarations": [
													{
														"constant": false,
														"id": 1838,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1880,
														"src": "9578:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct PolyRocRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1837,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "9578:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1839,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "9602:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyRocRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1841,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1840,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "9611:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9602:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct PolyRocRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1844,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1842,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "9617:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "9617:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9602:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct PolyRocRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9578:50:4"
											},
											{
												"assignments": [
													1847
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1880,
														"src": "9639:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1846,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9639:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1850,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1848,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1838,
														"src": "9657:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
														}
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 989,
													"src": "9657:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9639:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1851,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "9679:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "9679:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1854,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9693:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9679:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "9679:15:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1857,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1838,
															"src": "9705:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct PolyRocRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1859,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "9705:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9723:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9705:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1862,
												"nodeType": "ExpressionStatement",
												"src": "9705:19:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1868,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9759:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9759:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1870,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "9771:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1863,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1832,
																"src": "9735:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "9735:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1867,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "9735:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9735:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "9735:44:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1874,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "9813:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "9813:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1876,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "9825:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1877,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1847,
															"src": "9831:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1873,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "9795:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9795:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1879,
												"nodeType": "EmitStatement",
												"src": "9790:49:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 1881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1881,
												"src": "9497:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9497:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9496:14:4"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9518:0:4"
									},
									"scope": 2002,
									"src": "9470:377:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "10032:298:4",
										"statements": [
											{
												"assignments": [
													1889
												],
												"declarations": [
													{
														"constant": false,
														"id": 1889,
														"mutability": "mutable",
														"name": "_tshareBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1923,
														"src": "10043:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1888,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1897,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1894,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10089:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyRocRewardPool_$2002",
																		"typeString": "contract PolyRocRewardPool"
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10081:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1892,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10081:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10081:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1890,
															"name": "tshare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "10064:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1891,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "10064:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10064:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10043:52:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1898,
														"name": "_tshareBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "10110:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1899,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10123:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10110:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1922,
												"nodeType": "IfStatement",
												"src": "10106:217:4",
												"trueBody": {
													"id": 1921,
													"nodeType": "Block",
													"src": "10126:197:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1901,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1885,
																	"src": "10145:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1902,
																	"name": "_tshareBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1889,
																	"src": "10155:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10145:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1919,
																"nodeType": "Block",
																"src": "10244:68:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1915,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1883,
																					"src": "10283:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1916,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1885,
																					"src": "10288:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1912,
																					"name": "tshare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "10263:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1914,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 111,
																				"src": "10263:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10263:33:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1918,
																		"nodeType": "ExpressionStatement",
																		"src": "10263:33:4"
																	}
																]
															},
															"id": 1920,
															"nodeType": "IfStatement",
															"src": "10141:171:4",
															"trueBody": {
																"id": 1911,
																"nodeType": "Block",
																"src": "10167:71:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1907,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1883,
																					"src": "10206:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1908,
																					"name": "_tshareBal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1889,
																					"src": "10211:10:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1904,
																					"name": "tshare",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "10186:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1906,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 111,
																				"src": "10186:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 1909,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10186:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1910,
																		"nodeType": "ExpressionStatement",
																		"src": "10186:36:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTShareTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1883,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1924,
												"src": "9993:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1882,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9993:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1885,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1924,
												"src": "10006:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1884,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10006:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9992:30:4"
									},
									"returnParameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10032:0:4"
									},
									"scope": 2002,
									"src": "9965:365:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1935,
										"nodeType": "Block",
										"src": "10400:39:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1931,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "10411:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1932,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1926,
														"src": "10422:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10411:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1934,
												"nodeType": "ExpressionStatement",
												"src": "10411:20:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b3ab15fb",
									"id": 1936,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1929,
											"modifierName": {
												"argumentTypes": null,
												"id": 1928,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1116,
												"src": "10387:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10387:12:4"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1936,
												"src": "10359:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10359:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10358:19:4"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10400:0:4"
									},
									"scope": 2002,
									"src": "10338:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "10550:507:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1947,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "10565:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1948,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10565:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1949,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "10583:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3930",
															"id": 1950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10597:7:4",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"src": "10583:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10565:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1992,
												"nodeType": "IfStatement",
												"src": "10561:447:4",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "10606:402:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		"id": 1956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1954,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1938,
																			"src": "10731:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1955,
																			"name": "tshare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "10741:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "10731:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "747368617265",
																		"id": 1957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10749:8:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3efc61527548fd51bfece50234acf41083de9a3afcf673cce48e7150540dd2ac",
																			"typeString": "literal_string \"tshare\""
																		},
																		"value": "tshare"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3efc61527548fd51bfece50234acf41083de9a3afcf673cce48e7150540dd2ac",
																			"typeString": "literal_string \"tshare\""
																		}
																	],
																	"id": 1953,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "10723:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10723:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1959,
															"nodeType": "ExpressionStatement",
															"src": "10723:35:4"
														},
														{
															"assignments": [
																1961
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1961,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1991,
																	"src": "10773:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1960,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10773:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1964,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1962,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "10790:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																		"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "10790:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "10773:32:4"
														},
														{
															"body": {
																"id": 1989,
																"nodeType": "Block",
																"src": "10863:134:4",
																"statements": [
																	{
																		"assignments": [
																			1976
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1976,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1989,
																				"src": "10882:21:4",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct PolyRocRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"contractScope": null,
																					"id": 1975,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1003,
																					"src": "10882:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct PolyRocRewardPool.PoolInfo"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1980,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 1977,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "10906:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																					"typeString": "struct PolyRocRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 1979,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 1978,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1966,
																				"src": "10915:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10906:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
																				"typeString": "struct PolyRocRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10882:37:4"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					},
																					"id": 1985,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1982,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1938,
																						"src": "10946:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1983,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1976,
																							"src": "10956:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																								"typeString": "struct PolyRocRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1984,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 994,
																						"src": "10956:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "10946:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 1986,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "10968:12:4",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 1981,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "10938:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10938:43:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1988,
																		"nodeType": "ExpressionStatement",
																		"src": "10938:43:4"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1969,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1966,
																	"src": "10842:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1970,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1961,
																	"src": "10848:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10842:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1990,
															"initializationExpression": {
																"assignments": [
																	1966
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1966,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 1990,
																		"src": "10825:11:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1965,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "10825:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 1968,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10839:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "10825:15:4"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 1973,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "10856:5:4",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 1972,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1966,
																		"src": "10858:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1974,
																"nodeType": "ExpressionStatement",
																"src": "10856:5:4"
															},
															"nodeType": "ForStatement",
															"src": "10820:177:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1996,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1942,
															"src": "11038:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1997,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "11042:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1993,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1938,
															"src": "11018:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1995,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "11018:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11018:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1999,
												"nodeType": "ExpressionStatement",
												"src": "11018:31:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "54575af4",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1945,
											"modifierName": {
												"argumentTypes": null,
												"id": 1944,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1116,
												"src": "10537:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10537:12:4"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2001,
												"src": "10485:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1937,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "10485:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1940,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2001,
												"src": "10500:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1939,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10500:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2001,
												"src": "10516:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10516:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10484:43:4"
									},
									"returnParameters": {
										"id": 1946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10550:0:4"
									},
									"scope": 2002,
									"src": "10447:610:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2003,
							"src": "435:10625:4"
						}
					],
					"src": "35:11027:4"
				},
				"id": 4
			}
		}
	}
}