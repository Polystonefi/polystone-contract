{
	"id": "5db5194ff17c1303e9b8621adb21a904",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../owner/Operator.sol\";\r\n\r\n// Note that this pool has no minter key of Poly (rewards).\r\n// Instead, the governance will call Poly distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyGenesisRewardPool is Operator {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Poly to distribute.\r\n        uint256 lastRewardTime; // Last time that Poly distribution occurs.\r\n        uint256 accStonePerShare; // Accumulated Poly per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardBlock has passed\r\n    }\r\n\r\n    IERC20 public Poly;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // flags\r\n    bool private initialized = false;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when Poly mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    // The time when Poly mining ends.\r\n    uint256 public poolEndTime;\r\n\r\n    // MAINNET\r\n    uint256 public PolyPerSecond = 0.09645 ether; // 25000 Poly / (72h * 60min * 60s)\r\n    uint256 public runningTime = 3 days; // 1 days\r\n    uint256 public constant TOTAL_REWARDS = 25000 ether;\r\n    // END MAINNET\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    modifier notInitialized {\r\n        require(!initialized, \"Genesis: already initialized\");\r\n\r\n        _;\r\n    }\r\n\r\n    /* ========== VIEW FUNCTIONS ========== */\r\n\r\n    function isInitialized() public view returns (bool) {\r\n        return initialized;\r\n    }\r\n\r\n    function initialize (\r\n        address _Poly,\r\n        uint256 _poolStartTime\r\n    ) public notInitialized onlyOperator {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_Poly != address(0)) Poly = IERC20(_Poly);\r\n        poolStartTime = _poolStartTime;\r\n        poolEndTime = poolStartTime + runningTime;\r\n        initialized = true;\r\n    }\r\n\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new token to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted =\r\n        (_lastRewardTime <= poolStartTime) ||\r\n        (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({\r\n            token : _token,\r\n            allocPoint : _allocPoint,\r\n            lastRewardTime : _lastRewardTime,\r\n            accStonePerShare : 0,\r\n            isStarted : _isStarted\r\n            }));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's Poly allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r\n                _allocPoint\r\n            );\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _from to _to block.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        if (_fromTime >= _toTime) return 0;\r\n        if (_toTime >= poolEndTime) {\r\n            if (_fromTime >= poolEndTime) return 0;\r\n            if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return poolEndTime.sub(_fromTime).mul(PolyPerSecond);\r\n        } else {\r\n            if (_toTime <= poolStartTime) return 0;\r\n            if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return _toTime.sub(_fromTime).mul(PolyPerSecond);\r\n        }\r\n    }\r\n\r\n    // View function to see pending Poly on frontend.\r\n    function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accStonePerShare = pool.accStonePerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accStonePerShare = accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accStonePerShare = pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        uint256 _before = _amount.ceil(200);\r\n        uint256 _after = _before.mul(200).div(10000);\r\n        uint256 _fixedAmount = _amount.sub(_after);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safePolyTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_fixedAmount);\r\n            pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safePolyTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe Poly transfer function, just in case if rounding error causes pool to not have enough Polys.\r\n    function safePolyTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _PolyBalance = Poly.balanceOf(address(this));\r\n        if (_PolyBalance > 0) {\r\n            if (_amount > _PolyBalance) {\r\n                Poly.safeTransfer(_to, _PolyBalance);\r\n            } else {\r\n                Poly.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setOperator(address _Newoperator) external onlyOperator {\r\n        transferOperator(_Newoperator);\r\n    }\r\n\r\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r\n        if (block.timestamp < poolEndTime + 90 days) {\r\n            // do not allow to drain core token (Poly or lps) if less than 90 days after pool ends\r\n            require(_token != Poly, \"Poly\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/owner/Operator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\nabstract contract Operator is Context, Ownable {\r\n    address private _operator;\r\n\r\n    event OperatorTransferred(\r\n        address indexed previousOperator,\r\n        address indexed newOperator\r\n    );\r\n\r\n    constructor() internal {\r\n        _operator = _msgSender();\r\n        emit OperatorTransferred(address(0), _operator);\r\n    }\r\n\r\n    function operator() public view returns (address) {\r\n        return _operator;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(\r\n            _operator == msg.sender,\r\n            \"operator: caller is not the operator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isOperator() public view returns (bool) {\r\n        return _msgSender() == _operator;\r\n    }\r\n\r\n    function transferOperator(address newOperator_) public onlyOwner {\r\n        _transferOperator(newOperator_);\r\n    }\r\n\r\n    function _transferOperator(address newOperator_) internal {\r\n        require(\r\n            newOperator_ != address(0),\r\n            \"operator: zero address given for new operator\"\r\n        );\r\n        emit OperatorTransferred(address(0), newOperator_);\r\n        Ownable.transferOwnership(newOperator_);\r\n        _operator = newOperator_;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMPI SUB 0x27 0xB7 0xBE POP DUP12 0x1E CHAINID MULMOD 0xD1 CALLDATALOAD 0xBE 0xE1 PUSH15 0x1AB6D9E7E95E3B5500821007DE644D DUP1 0xE3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220570327b7be508b1e4609d135bee16e1ab6d9e7e95e3b5500821007de644d80e364736f6c63430007060033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2E 0x4D RETURNDATASIZE KECCAK256 0xCD 0xEF DIFFICULTY 0xA9 0xE9 DELEGATECALL 0xDE ADDRESS PUSH30 0xA6D1953ED6D0005A91E7B49D0F03D0C6E21C5964736F6C63430007060033 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202e4d3d20cdef44a9e9f4de307da6d1953ed6d0005a91e7b49d0f03d0c6e21c5964736f6c63430007060033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0x29 0xBC 0xBE SWAP4 SELFDESTRUCT 0xE6 0x4C 0x4F LOG2 0xC4 DIFFICULTY PUSH23 0xB72CD26C0DECDA284CBAE117DF7589FC7F18764736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e429bcbe93ffe64c4fa2c444760b72cd26c0decda284cbae117df7589fc7f18764736f6c63430007060033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"PolyGenesisRewardPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Poly",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PolyPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Poly",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingStone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accStonePerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Newoperator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11469  contract PolyGenesisRewardPool is Operator {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1347:1352  false */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1320:1352  bool private initialized = false */\n  0x04\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1604:1605  0 */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n  0x06\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1815:1828  0.09645 ether */\n  0x0156a8c394962000\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1828  uint256 public PolyPerSecond = 0.09645 ether */\n  0x09\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1900:1906  3 days */\n  0x03f480\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1871:1906  uint256 public runningTime = 3 days */\n  0x0a\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11469  contract PolyGenesisRewardPool is Operator {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:955  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:968  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:970  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":989:998  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:986  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:998  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1046:1055  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1042:1043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:1063  constructor () internal {... */\n  pop\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  tag_8\n    /* \"contracts/owner/Operator.sol\":435:445  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/owner/Operator.sol\":423:432  _operator */\n  0x01\n  0x00\n    /* \"contracts/owner/Operator.sol\":423:447  _operator = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owner/Operator.sol\":495:504  _operator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":491:492  0 */\n  0x00\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11469  contract PolyGenesisRewardPool is Operator {\r... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11469  contract PolyGenesisRewardPool is Operator {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":464:11469  contract PolyGenesisRewardPool is Operator {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5f96dc11\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x96805e54\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe177bb38\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe177bb38\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xecf4deb9\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x96805e54\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x715018a6\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x5f96dc11\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x3f7caf52\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x51eb05a6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x3f7caf52\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4456eda2\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x1ab06ee5\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x29605e77\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x09cf6091\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1923:1974  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_3:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1271:1297  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n    tag_5:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4667:5020  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_6:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5097:5750  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_7:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2482:2571  function isInitialized() public view returns (bool) {\r... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1828  uint256 public PolyPerSecond = 0.09645 ether */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8993:9805  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_60\n      jump\t// in\n    tag_58:\n      stop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6929:7839  function updatePool(uint256 _pid) public {\r... */\n    tag_13:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9876:10253  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10862:11466  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_16:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1656:1684  uint256 public poolStartTime */\n    tag_17:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6673:6853  function massUpdatePools() public {\r... */\n    tag_18:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1733:1759  uint256 public poolEndTime */\n    tag_19:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_20:\n      tag_80\n      tag_81\n      jump\t// in\n    tag_80:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_21:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1410:1474  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_22:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1871:1906  uint256 public runningTime = 3 days */\n    tag_23:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3294:4571  function add(\r... */\n    tag_24:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_91\n      jump\t// in\n    tag_89:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10740:10854  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_25:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_94\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2579:2945  function initialize (\r... */\n    tag_26:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_97\n      jump\t// in\n    tag_95:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1217:1235  IERC20 public Poly */\n    tag_27:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7876:8957  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_28:\n      tag_100\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_102\n      jump\t// in\n    tag_100:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5813:6590  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_29:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_104\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_104:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_105\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_30:\n      tag_106\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_108\n      jump\t// in\n    tag_106:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1923:1974  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_39:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1963:1974  25000 ether */\n      0x054b40b1f852bda00000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1923:1974  uint256 public constant TOTAL_REWARDS = 25000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1271:1297  PoolInfo[] public poolInfo */\n    tag_42:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1571:1605  uint256 public totalAllocPoint = 0 */\n    tag_44:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4667:5020  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_47:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_112\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_112:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4746:4763  massUpdatePools() */\n      tag_114\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4746:4761  massUpdatePools */\n      tag_77\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4746:4763  massUpdatePools() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4774:4795  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4798:4806  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4807:4811  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4798:4812  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_115\n      jumpi\n      invalid\n    tag_115:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4774:4812  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4827:4831  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4827:4841  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4823:4973  if (pool.isStarted) {\r... */\n      iszero\n      tag_117\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4961  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      tag_118\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4935:4946  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4912  totalAllocPoint.sub(pool.allocPoint) */\n      tag_119\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4896:4900  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4896:4911  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4891  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4895  totalAllocPoint.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4912  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_119:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4916  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4876:4961  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_118:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4858:4873  totalAllocPoint */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4858:4961  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4823:4973  if (pool.isStarted) {\r... */\n    tag_117:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5001:5012  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4983:4987  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4983:4998  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4983:5012  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4667:5020  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5097:5750  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_50:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5182:5189  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5219:5226  _toTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5206:5215  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5206:5226  _fromTime >= _toTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5202:5236  if (_fromTime >= _toTime) return 0 */\n      tag_123\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5235:5236  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5228:5236  return 0 */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5202:5236  if (_fromTime >= _toTime) return 0 */\n    tag_123:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5262:5273  poolEndTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5251:5258  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5251:5273  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5247:5743  if (_toTime >= poolEndTime) {\r... */\n      tag_124\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5307:5318  poolEndTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5294:5303  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5294:5318  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5290:5328  if (_fromTime >= poolEndTime) return 0 */\n      tag_125\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5327:5328  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5320:5328  return 0 */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5290:5328  if (_fromTime >= poolEndTime) return 0 */\n    tag_125:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5360:5373  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5347:5356  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5347:5373  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5343:5431  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_126\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5431  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_127\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5417:5430  PolyPerSecond */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5412  poolEndTime.sub(poolStartTime) */\n      tag_128\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5398:5411  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5393  poolEndTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5397  poolEndTime.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5412  poolEndTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5416  poolEndTime.sub(poolStartTime).mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5382:5431  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5375:5431  return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5343:5431  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_126:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5498  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_130\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5484:5497  PolyPerSecond */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5479  poolEndTime.sub(_fromTime) */\n      tag_131\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5469:5478  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5464  poolEndTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5468  poolEndTime.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5479  poolEndTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_131:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5483  poolEndTime.sub(_fromTime).mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5453:5498  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_130:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5446:5498  return poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5247:5743  if (_toTime >= poolEndTime) {\r... */\n    tag_124:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5546:5559  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5535:5542  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5535:5559  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5531:5569  if (_toTime <= poolStartTime) return 0 */\n      tag_133\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5568:5569  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5561:5569  return 0 */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5531:5569  if (_toTime <= poolStartTime) return 0 */\n    tag_133:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5601:5614  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5588:5597  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5588:5614  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5584:5668  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_134\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5668  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_135\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5654:5667  PolyPerSecond */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5649  _toTime.sub(poolStartTime) */\n      tag_136\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5635:5648  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5630  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5634  _toTime.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5649  _toTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5653  _toTime.sub(poolStartTime).mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5623:5668  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5616:5668  return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_122)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5584:5668  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_134:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5731  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_137\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5717:5730  PolyPerSecond */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5712  _toTime.sub(_fromTime) */\n      tag_138\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5702:5711  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5697  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5701  _toTime.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5712  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_138:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5716  _toTime.sub(_fromTime).mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5690:5731  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5683:5731  return _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5097:5750  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_122:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_142\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_143\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_143:\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      tag_145\n        /* \"contracts/owner/Operator.sol\":988:1000  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":970:987  _transferOperator */\n      tag_146\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2482:2571  function isInitialized() public view returns (bool) {\r... */\n    tag_55:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2528:2532  bool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2552:2563  initialized */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2545:2563  return initialized */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2482:2571  function isInitialized() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1784:1828  uint256 public PolyPerSecond = 0.09645 ether */\n    tag_57:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8993:9805  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_60:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9060:9075  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9078:9088  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9060:9088  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9099:9120  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9123:9131  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9132:9136  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9123:9137  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_149\n      jumpi\n      invalid\n    tag_149:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9099:9137  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9148:9169  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9172:9180  userInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9172:9186  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9181:9185  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9172:9186  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9172:9195  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9187:9194  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9172:9195  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9148:9195  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9229:9236  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9214:9218  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9214:9225  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9214:9236  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9206:9259  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_151\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_151:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9270:9286  updatePool(_pid) */\n      tag_152\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9281:9285  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9270:9280  updatePool */\n      tag_65\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9270:9286  updatePool(_pid) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9297:9313  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9385  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_153\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9369:9373  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9369:9384  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9364  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_154\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9359:9363  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9354  user.amount.mul(pool.accStonePerShare) */\n      tag_155\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9332:9336  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9332:9353  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9320  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9327  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9331  user.amount.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9354  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_155:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9358  user.amount.mul(pool.accStonePerShare).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9364  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_154:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9368  user.amount.mul(pool.accStonePerShare).div(1e18).sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9316:9385  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_153:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9297:9385  uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9411:9412  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9400:9408  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9400:9412  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9396:9525  if (_pending > 0) {\r... */\n      iszero\n      tag_157\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9429:9464  safePolyTransfer(_sender, _pending) */\n      tag_158\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9446:9453  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9455:9463  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9429:9445  safePolyTransfer */\n      tag_159\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9429:9464  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9495:9502  _sender */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9484:9513  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9504:9512  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9484:9513  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9396:9525  if (_pending > 0) {\r... */\n    tag_157:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9549:9550  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9539:9546  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9539:9550  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9535:9673  if (_amount > 0) {\r... */\n      iszero\n      tag_160\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9581:9605  user.amount.sub(_amount) */\n      tag_161\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9597:9604  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9581:9585  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9581:9592  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9581:9596  user.amount.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9581:9605  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9567:9571  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9567:9578  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9567:9605  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9620:9661  pool.token.safeTransfer(_sender, _amount) */\n      tag_162\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9644:9651  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9653:9660  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9620:9624  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9620:9630  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9620:9643  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9620:9661  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9535:9673  if (_amount > 0) {\r... */\n    tag_160:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9749  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_164\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9744:9748  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9739  user.amount.mul(pool.accStonePerShare) */\n      tag_165\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9717:9721  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9717:9738  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9705  user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9712  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9716  user.amount.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9739  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9743  user.amount.mul(pool.accStonePerShare).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9701:9749  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9683:9687  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9683:9698  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9683:9749  user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9783:9787  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9774:9781  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9765:9797  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9789:9796  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9765:9797  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8993:9805  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_62:\n        /* \"contracts/owner/Operator.sol\":829:833  bool */\n      0x00\n        /* \"contracts/owner/Operator.sol\":869:878  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      tag_167\n        /* \"contracts/owner/Operator.sol\":853:863  _msgSender */\n      tag_141\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":846:878  return _msgSender() == _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6929:7839  function updatePool(uint256 _pid) public {\r... */\n    tag_65:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6981:7002  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7005:7013  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7014:7018  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7005:7019  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_169\n      jumpi\n      invalid\n    tag_169:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6981:7019  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7053:7057  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7053:7072  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7034:7049  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7034:7072  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7030:7107  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_171\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7089:7096  return; */\n      pop\n      jump(tag_168)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7030:7107  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_171:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7117:7136  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7139:7143  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7139:7149  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7139:7159  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7168:7172  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7139:7174  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_174\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_174:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7117:7174  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7204:7205  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7189:7200  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7189:7205  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7185:7292  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7244:7259  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7222:7226  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7222:7241  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7222:7259  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7274:7281  return; */\n      pop\n      pop\n      jump(tag_168)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7185:7292  if (tokenSupply == 0) {\r... */\n    tag_176:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7307:7311  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7307:7321  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7302:7440  if (!pool.isStarted) {\r... */\n      tag_177\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7355:7359  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7338:7342  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7338:7352  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7338:7359  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7392:7428  totalAllocPoint.add(pool.allocPoint) */\n      tag_178\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7412:7416  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7412:7427  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7392:7407  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7392:7411  totalAllocPoint.add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7392:7428  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_178:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7374:7389  totalAllocPoint */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7374:7428  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7302:7440  if (!pool.isStarted) {\r... */\n    tag_177:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7472:7473  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7454:7469  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7454:7473  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7450:7784  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7490:7514  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7517:7573  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_180\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7536:7540  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7536:7555  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7557:7572  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7517:7535  getGeneratedReward */\n      tag_50\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7517:7573  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7490:7573  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7588:7607  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7668  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_181\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7652:7667  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7647  _generatedReward.mul(pool.allocPoint) */\n      tag_182\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7631:7635  pool */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7631:7646  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7626  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7630  _generatedReward.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7647  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_182:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7651  _generatedReward.mul(pool.allocPoint).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7610:7668  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_181:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7588:7668  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7707:7772  pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_183\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7771  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_184\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7759:7770  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7754  _PolyReward.mul(1e18) */\n      tag_185\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7749:7753  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7744  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7748  _PolyReward.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7754  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_185:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7758  _PolyReward.mul(1e18).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7771  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_184:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7707:7711  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7707:7728  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7707:7732  pool.accStonePerShare.add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7707:7772  pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_183:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7683:7687  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7683:7704  pool.accStonePerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7683:7772  pool.accStonePerShare = pool.accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7450:7784  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_179:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7816:7831  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7794:7798  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7794:7813  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7794:7831  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6929:7839  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_168:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9876:10253  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_68:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9935:9956  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9959:9967  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9968:9972  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9959:9973  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_187\n      jumpi\n      invalid\n    tag_187:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9935:9973  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9984:10005  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10008:10016  userInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10008:10022  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10017:10021  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10008:10022  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10008:10034  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10023:10033  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10008:10034  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9984:10034  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10045:10060  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10063:10067  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10063:10074  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10045:10074  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10099:10100  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10085:10089  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10085:10096  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10085:10100  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10129:10130  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10111:10115  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10111:10126  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10111:10130  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10141:10185  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_189\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10165:10175  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10177:10184  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10141:10145  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10141:10151  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10141:10164  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10141:10185  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_189:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10231:10235  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10219:10229  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10201:10245  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10237:10244  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10201:10245  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9876:10253  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10862:11466  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_71:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11012:11019  90 days */\n      0x76a700\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10998:11009  poolEndTime */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10998:11019  poolEndTime + 90 days */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10980:10995  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10980:11019  block.timestamp < poolEndTime + 90 days */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10976:11417  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      iszero\n      tag_193\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11154:11158  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11144:11158  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11144:11150  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11144:11158  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11136:11167  require(_token != Poly, \"Poly\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_194:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11182:11196  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11199:11207  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11199:11214  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11182:11214  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11234:11245  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11229:11406  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_195:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11257:11263  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11251:11254  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11251:11263  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11229:11406  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11291:11312  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11315:11323  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11324:11327  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11315:11328  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_198\n      jumpi\n      invalid\n    tag_198:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11291:11328  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11365:11369  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11365:11375  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11355:11375  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11355:11361  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11355:11375  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11347:11390  require(_token != pool.token, \"pool.token\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f6f6c2e746f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11229:11406  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11265:11270  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11229:11406  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_195)\n    tag_196:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10976:11417  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      pop\n    tag_193:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11427:11458  _token.safeTransfer(to, amount) */\n      tag_201\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11447:11449  to */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11451:11457  amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11427:11433  _token */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11427:11446  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11427:11458  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_201:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10862:11466  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_73:\n        /* \"contracts/owner/Operator.sol\":562:569  address */\n      0x00\n        /* \"contracts/owner/Operator.sol\":589:598  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":582:598  return _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1656:1684  uint256 public poolStartTime */\n    tag_75:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6673:6853  function massUpdatePools() public {\r... */\n    tag_77:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6718:6732  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6735:6743  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6735:6750  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6718:6750  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6766:6777  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6761:6846  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_204:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6789:6795  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6783:6786  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6783:6795  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6761:6846  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6819:6834  updatePool(pid) */\n      tag_207\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6830:6833  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6819:6829  updatePool */\n      tag_65\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6819:6834  updatePool(pid) */\n      jump\t// in\n    tag_207:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6797:6802  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6761:6846  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_204)\n    tag_205:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6673:6853  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1733:1759  uint256 public poolEndTime */\n    tag_79:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_209\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_210\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1896  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1909  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1211:1217  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1204:1217  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1410:1474  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_86:\n      mstore(0x20, 0x05)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1871:1906  uint256 public runningTime = 3 days */\n    tag_88:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3294:4571  function add(\r... */\n    tag_91:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3460:3486  checkPoolDuplicate(_token) */\n      tag_217\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3479:3485  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3460:3478  checkPoolDuplicate */\n      tag_218\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3460:3486  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_217:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3501:3512  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3497:3558  if (_withUpdate) {\r... */\n      iszero\n      tag_219\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3529:3546  massUpdatePools() */\n      tag_220\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3529:3544  massUpdatePools */\n      tag_77\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3529:3546  massUpdatePools() */\n      jump\t// in\n    tag_220:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3497:3558  if (_withUpdate) {\r... */\n    tag_219:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3590:3603  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3572:3587  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3572:3603  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3568:4102  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3676:3677  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3657:3672  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3657:3677  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3653:3896  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3716:3729  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3698:3729  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3653:3896  if (_lastRewardTime == 0) {\r... */\n      jump(tag_223)\n    tag_222:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3792:3805  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3774:3789  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3774:3805  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3770:3881  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_224\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3848:3861  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3830:3861  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3770:3881  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_224:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3653:3896  if (_lastRewardTime == 0) {\r... */\n    tag_223:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3568:4102  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_225)\n    tag_221:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3983:3984  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3964:3979  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3964:3984  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3964:4021  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_226\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4006:4021  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3988:4003  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3988:4021  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3964:4021  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_226:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3960:4091  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_227\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4060:4075  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4042:4075  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3960:4091  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_227:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3568:4102  if (block.timestamp < poolStartTime) {\r... */\n    tag_225:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4112:4127  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4159:4172  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4140:4155  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4140:4172  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4139:4222  (_lastRewardTime <= poolStartTime) ||\r... */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4206:4221  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4187:4202  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4187:4221  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4139:4222  (_lastRewardTime <= poolStartTime) ||\r... */\n    tag_228:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4112:4222  bool _isStarted =\r... */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4233:4241  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4279:4285  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4313:4324  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4356:4371  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4405:4406  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4433:4443  _isStarted */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4247:4459  PoolInfo({\r... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4233:4460  poolInfo.push(PoolInfo({\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4475:4485  _isStarted */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4471:4564  if (_isStarted) {\r... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4520:4552  totalAllocPoint.add(_allocPoint) */\n      tag_231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4540:4551  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4520:4535  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4520:4539  totalAllocPoint.add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4520:4552  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_231:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4502:4517  totalAllocPoint */\n      0x06\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4502:4552  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4471:4564  if (_isStarted) {\r... */\n    tag_230:\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3294:4571  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10740:10854  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_94:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_233\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_233:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10816:10846  transferOperator(_Newoperator) */\n      tag_235\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10833:10845  _Newoperator */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10816:10832  transferOperator */\n      tag_53\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10816:10846  transferOperator(_Newoperator) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10740:10854  function setOperator(address _Newoperator) external onlyOperator {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2579:2945  function initialize (\r... */\n    tag_97:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2358:2369  initialized */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2357:2369  !initialized */\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2349:2402  require(!initialized, \"Genesis: already initialized\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x47656e657369733a20616c726561647920696e697469616c697a656400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2736:2750  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2718:2733  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2718:2750  block.timestamp < _poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2710:2759  require(block.timestamp < _poolStartTime, \"late\") */\n      tag_241\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6c61746500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_241:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2791:2792  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2774:2793  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2774:2779  _Poly */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2774:2793  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2770:2815  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n      tag_242\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2809:2814  _Poly */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2795:2799  Poly */\n      0x02\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2795:2815  Poly = IERC20(_Poly) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2770:2815  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n    tag_242:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2842:2856  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2826:2839  poolStartTime */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2826:2856  poolStartTime = _poolStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2897:2908  runningTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2881:2894  poolStartTime */\n      sload(0x07)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2881:2908  poolStartTime + runningTime */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2867:2878  poolEndTime */\n      0x08\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2867:2908  poolEndTime = poolStartTime + runningTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2933:2937  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2919:2930  initialized */\n      0x04\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2919:2937  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2579:2945  function initialize (\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1217:1235  IERC20 public Poly */\n    tag_99:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7876:8957  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_102:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7942:7957  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7960:7970  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7942:7970  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7981:7996  uint256 _before */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7999:8016  _amount.ceil(200) */\n      tag_244\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8012:8015  200 */\n      0xc8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7999:8006  _amount */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7999:8011  _amount.ceil */\n      tag_245\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7999:8016  _amount.ceil(200) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7981:8016  uint256 _before = _amount.ceil(200) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8027:8041  uint256 _after */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8071  _before.mul(200).div(10000) */\n      tag_246\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8065:8070  10000 */\n      0x2710\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8060  _before.mul(200) */\n      tag_247\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8056:8059  200 */\n      0xc8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8051  _before */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8055  _before.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8060  _before.mul(200) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8064  _before.mul(200).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8044:8071  _before.mul(200).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_246:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8027:8071  uint256 _after = _before.mul(200).div(10000) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8082:8102  uint256 _fixedAmount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8105:8124  _amount.sub(_after) */\n      tag_248\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8117:8123  _after */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8105:8112  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8105:8116  _amount.sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8105:8124  _amount.sub(_after) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8082:8124  uint256 _fixedAmount = _amount.sub(_after) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8137:8158  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8161:8169  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8170:8174  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8161:8175  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_249\n      jumpi\n      invalid\n    tag_249:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8137:8175  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8186:8207  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8210:8218  userInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8210:8224  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8219:8223  _pid */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8210:8224  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8210:8233  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8225:8232  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8210:8233  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8186:8233  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8244:8260  updatePool(_pid) */\n      tag_251\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8255:8259  _pid */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8244:8254  updatePool */\n      tag_65\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8244:8260  updatePool(_pid) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8291:8292  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8277:8281  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8277:8288  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8277:8292  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8273:8564  if (user.amount > 0) {\r... */\n      iszero\n      tag_252\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8309:8325  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8397  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_253\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8381:8385  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8381:8396  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8376  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_254\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8371:8375  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8366  user.amount.mul(pool.accStonePerShare) */\n      tag_255\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8344:8348  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8344:8365  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8332  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8339  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8343  user.amount.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8366  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8370  user.amount.mul(pool.accStonePerShare).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8376  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_254:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8380  user.amount.mul(pool.accStonePerShare).div(1e18).sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8328:8397  user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8309:8397  uint256 _pending = user.amount.mul(pool.accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8427:8428  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8416:8424  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8416:8428  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8412:8553  if (_pending > 0) {\r... */\n      iszero\n      tag_256\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8449:8484  safePolyTransfer(_sender, _pending) */\n      tag_257\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8466:8473  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8475:8483  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8449:8465  safePolyTransfer */\n      tag_159\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8449:8484  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8519:8526  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8508:8537  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8528:8536  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8508:8537  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8412:8553  if (_pending > 0) {\r... */\n    tag_256:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8273:8564  if (user.amount > 0) {\r... */\n      pop\n    tag_252:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8588:8589  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8578:8585  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8578:8589  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8574:8826  if (_amount > 0) {\r... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8606:8666  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_259\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8634:8641  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8651:8655  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8658:8665  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8606:8610  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8606:8616  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8606:8633  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_260\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8606:8666  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_259:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8695:8724  user.amount.add(_fixedAmount) */\n      tag_261\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8711:8723  _fixedAmount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8695:8699  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8695:8706  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8695:8710  user.amount.add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8695:8724  user.amount.add(_fixedAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_261:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8681:8685  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8681:8692  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8681:8724  user.amount = user.amount.add(_fixedAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8739:8814  pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after) */\n      tag_262\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8763:8805  0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D */\n      0x01fc7f2c81acd9d38ed4d509b1f17555e549ef1d\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8813  _after */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8739:8743  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8739:8749  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8739:8762  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8739:8814  pool.token.safeTransfer(0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D, _after) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8574:8826  if (_amount > 0) {\r... */\n    tag_258:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8902  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      tag_263\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8897:8901  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8892  user.amount.mul(pool.accStonePerShare) */\n      tag_264\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8870:8874  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8870:8891  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8858  user */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8865  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8869  user.amount.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8892  user.amount.mul(pool.accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8896  user.amount.mul(pool.accStonePerShare).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8854:8902  user.amount.mul(pool.accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8836:8840  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8836:8851  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8836:8902  user.rewardDebt = user.amount.mul(pool.accStonePerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8935:8939  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8926:8933  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8918:8949  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8941:8948  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8918:8949  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7876:8957  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5813:6590  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_105:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5887:5894  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5907:5928  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5931:5939  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5940:5944  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5931:5945  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_266\n      jumpi\n      invalid\n    tag_266:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5907:5945  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5956:5977  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5980:5988  userInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5980:5994  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5989:5993  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5980:5994  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5980:6001  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5995:6000  _user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5980:6001  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5956:6001  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6012:6036  uint256 accStonePerShare */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6039:6043  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6039:6060  pool.accStonePerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6012:6060  uint256 accStonePerShare = pool.accStonePerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6071:6090  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6093:6097  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6093:6103  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6093:6113  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6122:6126  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6093:6128  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_268\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_268:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_270:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_271\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_271:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6071:6128  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6161:6165  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6161:6180  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6143:6158  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6143:6180  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6143:6200  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_272\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6199:6200  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6184:6195  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6184:6200  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6143:6200  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_272:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6139:6501  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6217:6241  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6244:6300  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_274\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6263:6267  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6263:6282  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6284:6299  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6244:6262  getGeneratedReward */\n      tag_50\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6244:6300  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_274:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6217:6300  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6315:6334  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6395  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_275\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6379:6394  totalAllocPoint */\n      sload(0x06)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6374  _generatedReward.mul(pool.allocPoint) */\n      tag_276\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6358:6362  pool */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6358:6373  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6353  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6357  _generatedReward.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6374  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_276:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6378  _generatedReward.mul(pool.allocPoint).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6337:6395  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_275:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6315:6395  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6429:6489  accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_277\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6488  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_278\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6476:6487  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6471  _PolyReward.mul(1e18) */\n      tag_279\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6466:6470  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6461  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6465  _PolyReward.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6471  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_279:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6475  _PolyReward.mul(1e18).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6450:6488  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_278:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6429:6445  accStonePerShare */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6429:6449  accStonePerShare.add */\n      tag_121\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6429:6489  accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_277:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6410:6489  accStonePerShare = accStonePerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6139:6501  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_273:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6582  user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      tag_280\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6566:6570  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6566:6581  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6561  user.amount.mul(accStonePerShare).div(1e18) */\n      tag_281\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6556:6560  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6551  user.amount.mul(accStonePerShare) */\n      tag_282\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6534:6550  accStonePerShare */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6522  user */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6529  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6533  user.amount.mul */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6551  user.amount.mul(accStonePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_282:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6555  user.amount.mul(accStonePerShare).div */\n      tag_156\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6561  user.amount.mul(accStonePerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_281:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6565  user.amount.mul(accStonePerShare).div(1e18).sub */\n      tag_120\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6518:6582  user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_280:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6511:6582  return user.amount.mul(accStonePerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5813:6590  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_108:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_284\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_141\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_286:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2173:2174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2161  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2145:2218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2254:2260  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2290:2298  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2287  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2298  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_294\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_293)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_294:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_295\n      jumpi\n      invalid\n    tag_295:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_293:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n    tag_146:\n        /* \"contracts/owner/Operator.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1108:1120  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/owner/Operator.sol\":1086:1207  require(\r... */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"contracts/owner/Operator.sol\":1255:1267  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      tag_300\n        /* \"contracts/owner/Operator.sol\":1305:1317  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1279:1304  Ownable.transferOwnership */\n      tag_108\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      jump\t// in\n    tag_300:\n        /* \"contracts/owner/Operator.sol\":1341:1353  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1329:1338  _operator */\n      0x01\n      0x00\n        /* \"contracts/owner/Operator.sol\":1329:1353  _operator = newOperator_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_302\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_302:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_303\n      jumpi\n      invalid\n    tag_303:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10367:10732  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_159:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10443:10463  uint256 _PolyBalance */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10466:10470  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10466:10480  Poly.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10489:10493  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10466:10495  Poly.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_305\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_305:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_307\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_307:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_308\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_308:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10443:10495  uint256 _PolyBalance = Poly.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10525:10526  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10510:10522  _PolyBalance */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10510:10526  _PolyBalance > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10506:10725  if (_PolyBalance > 0) {\r... */\n      iszero\n      tag_309\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10557:10569  _PolyBalance */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10547:10554  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10547:10569  _amount > _PolyBalance */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10543:10714  if (_amount > _PolyBalance) {\r... */\n      iszero\n      tag_310\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10590:10626  Poly.safeTransfer(_to, _PolyBalance) */\n      tag_311\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10608:10611  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10613:10625  _PolyBalance */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10590:10594  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10590:10607  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10590:10626  Poly.safeTransfer(_to, _PolyBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_311:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10543:10714  if (_amount > _PolyBalance) {\r... */\n      jump(tag_312)\n    tag_310:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10667:10698  Poly.safeTransfer(_to, _amount) */\n      tag_313\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10685:10688  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10690:10697  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10667:10671  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10667:10684  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_163\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10667:10698  Poly.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_313:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10543:10714  if (_amount > _PolyBalance) {\r... */\n    tag_312:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10506:10725  if (_PolyBalance > 0) {\r... */\n    tag_309:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10367:10732  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_315\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2955:3216  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_218:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3023:3037  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3040:3048  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3040:3055  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3023:3055  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3071:3082  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3066:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_318:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3094:3100  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3088:3091  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3088:3100  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3066:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_319\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3155:3161  _token */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3132:3161  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3132:3140  poolInfo */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3141:3144  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3132:3145  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_321\n      jumpi\n      invalid\n    tag_321:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3132:3151  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3132:3161  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3124:3197  require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\") */\n      tag_323\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_323:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3102:3107  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3066:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_318)\n    tag_319:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2955:3216  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5667  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5688  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      tag_325\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5695:5696  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5698:5699  m */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5694  add */\n      tag_121\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      jump\t// in\n    tag_325:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5700  uint256 c = add(a, m) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5719  uint256 d */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      tag_326\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5726:5727  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5729:5730  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5725  sub */\n      tag_120\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      jump\t// in\n    tag_326:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5731  uint256 d = sub(c, 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      tag_327\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      tag_328\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5756:5757  d */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5759:5760  m */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5755  div */\n      tag_156\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      jump\t// in\n    tag_328:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5763:5764  m */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5751  mul */\n      tag_129\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5741:5765  return mul(div(d, m), m) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_330\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_316\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_333\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_335\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_335:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_334:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_338\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_339\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_339:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_341\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_341:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_342\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_343\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_345:\n      0x20\n      dup4\n      lt\n      tag_347\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_345)\n    tag_347:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_350\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_349)\n    tag_350:\n      0x60\n      swap2\n      pop\n    tag_349:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_351\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_352\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_354)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_359:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_361\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_359)\n    tag_361:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_362\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_362:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_354:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7 6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb 6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa26469706673582212206b8f333e29ff2414a951be307730b98e0321c46008fabff7731468a24ce8593a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526000600460006101000a81548160ff0219169083151502179055506000600655670156a8c3949620006009556203f480600a553480156200004457600080fd5b50600062000057620001c860201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000105620001c860201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a3620001d0565b600033905090565b612f6b80620001e06000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80635f96dc11116100f957806396805e5411610097578063e177bb3811610071578063e177bb38146106d8578063e2bbb1581461070c578063ecf4deb914610744578063f2fde38b146107a6576101c4565b806396805e54146105e2578063b3ab15fb14610646578063cd6dc6871461068a576101c4565b8063715018a6116100d3578063715018a61461051d5780638da5cb5b1461052757806393f1a40b1461055b578063943f013d146105c4576101c4565b80635f96dc11146104d7578063630b5ba1146104f55780636e271dd5146104ff576101c4565b80633f7caf521161016657806351eb05a61161014057806351eb05a6146103d95780635312ea8e1461040757806354575af414610435578063570ca735146104a3576101c4565b80633f7caf5214610363578063441a3e70146103815780634456eda2146103b9576101c4565b80631ab06ee5116101a25780631ab06ee51461027b578063231f0c6a146102b357806329605e77146102ff578063392e53cd14610343576101c4565b806309cf6091146101c95780631526fe27146101e757806317caf6f11461025d575b600080fd5b6101d16107ea565b6040518082815260200191505060405180910390f35b610213600480360360208110156101fd57600080fd5b81019080803590602001909291905050506107f8565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b61026561086b565b6040518082815260200191505060405180910390f35b6102b16004803603604081101561029157600080fd5b810190808035906020019092919080359060200190929190505050610871565b005b6102e9600480360360408110156102c957600080fd5b810190808035906020019092919080359060200190929190505050610995565b6040518082815260200191505060405180910390f35b6103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa8565b005b61034b610b63565b60405180821515815260200191505060405180910390f35b61036b610b7a565b6040518082815260200191505060405180910390f35b6103b76004803603604081101561039757600080fd5b810190808035906020019092919080359060200190929190505050610b80565b005b6103c1610e38565b60405180821515815260200191505060405180910390f35b610405600480360360208110156103ef57600080fd5b8101908080359060200190929190505050610e97565b005b6104336004803603602081101561041d57600080fd5b81019080803590602001909291905050506110a6565b005b6104a16004803603606081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111da565b005b6104ab61148c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104df6114b6565b6040518082815260200191505060405180910390f35b6104fd6114bc565b005b6105076114e9565b6040518082815260200191505060405180910390f35b6105256114ef565b005b61052f61165c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a76004803603604081101561057157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b604051808381526020018281526020019250505060405180910390f35b6105cc6116b6565b6040518082815260200191505060405180910390f35b610644600480360360808110156105f857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506116bc565b005b6106886004803603602081101561065c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118f5565b005b6106d6600480360360408110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119a7565b005b6106e0611bee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107426004803603604081101561072257600080fd5b810190808035906020019092919080359060200190929190505050611c14565b005b6107906004803603604081101561075a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f23565b6040518082815260200191505060405180910390f35b6107e8600480360360208110156107bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061215b565b005b69054b40b1f852bda0000081565b6003818154811061080857600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60065481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610917576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b61091f6114bc565b60006003838154811061092e57fe5b906000526020600020906005020190508060040160009054906101000a900460ff16156109875761098082610972836001015460065461234d90919063ffffffff16565b6123d090919063ffffffff16565b6006819055505b818160010181905550505050565b60008183106109a75760009050610aa2565b6008548210610a2d5760085483106109c25760009050610aa2565b60075483116109fd576109f66009546109e860075460085461234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b610a26600954610a188560085461234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b6007548211610a3f5760009050610aa2565b6007548311610a7857610a71600954610a636007548561234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b610a9f600954610a91858561234d90919063ffffffff16565b61245890919063ffffffff16565b90505b92915050565b610ab06124de565b73ffffffffffffffffffffffffffffffffffffffff16610ace61165c565b73ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610b60816124e6565b50565b6000600460009054906101000a900460ff16905090565b60095481565b6000339050600060038481548110610b9457fe5b9060005260206000209060050201905060006005600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610c72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610c7b85610e97565b6000610cc88260010154610cba670de0b6b3a7640000610cac8760030154876000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b90506000811115610d2c57610cdd848261269d565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610da457610d4c85836000015461234d90919063ffffffff16565b8260000181905550610da384868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b610dd9670de0b6b3a7640000610dcb8560030154856000015461245890919063ffffffff16565b61261490919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e7b6124de565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060038281548110610ea657fe5b9060005260206000209060050201905080600201544211610ec757506110a3565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d6020811015610f7e57600080fd5b810190808051906020019092919050505090506000811415610faa5742826002018190555050506110a3565b8160040160009054906101000a900460ff16610ffd5760018260040160006101000a81548160ff021916908315150217905550610ff682600101546006546123d090919063ffffffff16565b6006819055505b60006006541115611097576000611018836002015442610995565b9050600061104760065461103986600101548561245890919063ffffffff16565b61261490919063ffffffff16565b905061108c6110798461106b670de0b6b3a76400008561245890919063ffffffff16565b61261490919063ffffffff16565b85600301546123d090919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b6000600382815481106110b557fe5b9060005260206000209060050201905060006005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061118533828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b6276a7006008540142101561145c57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611353576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600380549050905060005b818110156114595760006003828154811061137757fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561144d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611360565b50505b61148781838573ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000600380549050905060005b818110156114e5576114da81610e97565b8060010190506114c9565b5050565b60085481565b6114f76124de565b73ffffffffffffffffffffffffffffffffffffffff1661151561165c565b73ffffffffffffffffffffffffffffffffffffffff161461159e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600a5481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611762576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b61176b836128be565b811561177a576117796114bc565b5b6007544210156117ad5760008114156117975760075490506117a8565b6007548110156117a75760075490505b5b6117c5565b60008114806117bb57504281105b156117c4574290505b5b6000600754821115806117d85750428211155b905060036040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156118ee576118e7856006546123d090919063ffffffff16565b6006819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461199b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b6119a481610aa8565b50565b600460009054906101000a900460ff1615611a2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ad0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b804210611b45576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611bbb5781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600781905550600a54600754016008819055506001600460006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611c2f60c8846129c390919063ffffffff16565b90506000611c5b612710611c4d60c88561245890919063ffffffff16565b61261490919063ffffffff16565b90506000611c72828661234d90919063ffffffff16565b9050600060038781548110611c8357fe5b9060005260206000209060050201905060006005600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611cf088610e97565b600081600001541115611db0576000611d4a8260010154611d3c670de0b6b3a7640000611d2e8760030154876000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b90506000811115611dae57611d5f878261269d565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115611e8d57611e0a8630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129fe909392919063ffffffff16565b611e218382600001546123d090919063ffffffff16565b8160000181905550611e8c7301fc7f2c81acd9d38ed4d509b1f17555e549ef1d858460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b611ec2670de0b6b3a7640000611eb48460030154846000015461245890919063ffffffff16565b61261490919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b60008060038481548110611f3357fe5b9060005260206000209060050201905060006005600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561202d57600080fd5b505afa158015612041573d6000803e3d6000fd5b505050506040513d602081101561205757600080fd5b8101908080519060200190929190505050905083600201544211801561207e575060008114155b15612108576000612093856002015442610995565b905060006120c26006546120b488600101548561245890919063ffffffff16565b61261490919063ffffffff16565b90506121036120f4846120e6670de0b6b3a76400008561245890919063ffffffff16565b61261490919063ffffffff16565b856123d090919063ffffffff16565b935050505b61214f8360010154612141670de0b6b3a764000061213386886000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b94505050505092915050565b6121636124de565b73ffffffffffffffffffffffffffffffffffffffff1661218161165c565b73ffffffffffffffffffffffffffffffffffffffff161461220a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e4e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156123c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008082840190508381101561244e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561246b57600090506124d8565b600082840290508284828161247c57fe5b04146124d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ec76021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561256c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e9a602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36125d08161215b565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080821161268b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161269457fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561272857600080fd5b505afa15801561273c573d6000803e3d6000fd5b505050506040513d602081101561275257600080fd5b81019080805190602001909291905050509050600081111561281757808211156127c8576127c38382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b612816565b6128158383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b5b505050565b6128b98363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612abf565b505050565b6000600380549050905060005b818110156129be578273ffffffffffffffffffffffffffffffffffffffff16600382815481106128f757fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b8060010190506128cb565b505050565b6000806129d084846123d0565b905060006129df82600161234d565b90506129f46129ee8286612614565b85612458565b9250505092915050565b612ab9846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612abf565b50505050565b6000612b21826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612bae9092919063ffffffff16565b9050600081511115612ba957808060200190516020811015612b4257600080fd5b8101908080519060200190929190505050612ba8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612f0c602a913960400191505060405180910390fd5b5b505050565b6060612bbd8484600085612bc6565b90509392505050565b606082471015612c21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e746026913960400191505060405180910390fd5b612c2a85612d6e565b612c9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ceb5780518252602082019150602081019050602083039250612cc8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612d4d576040519150601f19603f3d011682016040523d82523d6000602084013e612d52565b606091505b5091509150612d62828286612d81565b92505050949350505050565b600080823b905060008111915050919050565b60608315612d9157829050612e46565b600083511115612da45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e0b578082015181840152602081019050612df0565b50505050905090810190601f168015612e385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212206b8f333e29ff2414a951be307730b98e0321c46008fabff7731468a24ce8593a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x6 SSTORE PUSH8 0x156A8C394962000 PUSH1 0x9 SSTORE PUSH3 0x3F480 PUSH1 0xA SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x57 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x105 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x2F6B DUP1 PUSH3 0x1E0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x68A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x5C4 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x4FF JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x4A3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1AB06EE5 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x343 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DF PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH2 0x14BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x507 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH2 0x14EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52F PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CC PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x688 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E0 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x742 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x790 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x215B JUMP JUMPDEST STOP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91F PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x92E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x987 JUMPI PUSH2 0x980 DUP3 PUSH2 0x972 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xA2D JUMPI PUSH1 0x8 SLOAD DUP4 LT PUSH2 0x9C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 GT PUSH2 0x9FD JUMPI PUSH2 0x9F6 PUSH1 0x9 SLOAD PUSH2 0x9E8 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA26 PUSH1 0x9 SLOAD PUSH2 0xA18 DUP6 PUSH1 0x8 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 GT PUSH2 0xA3F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 GT PUSH2 0xA78 JUMPI PUSH2 0xA71 PUSH1 0x9 SLOAD PUSH2 0xA63 PUSH1 0x7 SLOAD DUP6 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA9F PUSH1 0x9 SLOAD PUSH2 0xA91 DUP6 DUP6 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xACE PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0x24E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB94 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B DUP6 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC8 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xCBA PUSH8 0xDE0B6B3A7640000 PUSH2 0xCAC DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xCDD DUP5 DUP3 PUSH2 0x269D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xD4C DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDA3 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xDD9 PUSH8 0xDE0B6B3A7640000 PUSH2 0xDCB DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7B PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEA6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xEC7 JUMPI POP PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xFAA JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x10A3 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFFD JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFF6 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 PUSH2 0x1018 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1047 PUSH1 0x6 SLOAD PUSH2 0x1039 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x108C PUSH2 0x1079 DUP5 PUSH2 0x106B PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1185 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x8 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x145C JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1377 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1360 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1487 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14DA DUP2 PUSH2 0xE97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F7 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1515 PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP4 PUSH2 0x28BE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1797 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x17BB JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x17C4 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x17D8 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x18EE JUMPI PUSH2 0x18E7 DUP6 PUSH1 0x6 SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x199B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0xAA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBB JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x7 SLOAD ADD PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1C2F PUSH1 0xC8 DUP5 PUSH2 0x29C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x2710 PUSH2 0x1C4D PUSH1 0xC8 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C72 DUP3 DUP7 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1C83 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1CF0 DUP9 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1DB0 JUMPI PUSH1 0x0 PUSH2 0x1D4A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D3C PUSH8 0xDE0B6B3A7640000 PUSH2 0x1D2E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1D5F DUP8 DUP3 PUSH2 0x269D JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E0A DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29FE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E21 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1E8C PUSH20 0x1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1EC2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB4 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1F33 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x202D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2041 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x207E JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2108 JUMPI PUSH1 0x0 PUSH2 0x2093 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20C2 PUSH1 0x6 SLOAD PUSH2 0x20B4 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2103 PUSH2 0x20F4 DUP5 PUSH2 0x20E6 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x214F DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2141 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2133 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2163 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2181 PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x220A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E4E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x246B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x247C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x24D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EC7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x256C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E9A PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x25D0 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x268B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2694 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x273C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2817 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x27C8 JUMPI PUSH2 0x27C3 DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x2815 DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x28B9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29BE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28F7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x28CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D0 DUP5 DUP5 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x29DF DUP3 PUSH1 0x1 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP PUSH2 0x29F4 PUSH2 0x29EE DUP3 DUP7 PUSH2 0x2614 JUMP JUMPDEST DUP6 PUSH2 0x2458 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AB9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ABF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B21 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BAE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2BA9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BBD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E74 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C2A DUP6 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2C9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2CEB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2D62 DUP3 DUP3 DUP7 PUSH2 0x2D81 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D91 JUMPI DUP3 SWAP1 POP PUSH2 0x2E46 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2DA4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212206B8F333E 0x29 SELFDESTRUCT 0x24 EQ 0xA9 MLOAD 0xBE ADDRESS PUSH24 0x30B98E0321C46008FABFF7731468A24CE8593A64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11005:6:-:0;;;1347:5;1320:32;;;;;;;;;;;;;;;;;;;;1604:1;1571:34;;1815:13;1784:44;;1900:6;1871:35;;464:11005;;;;;;;;;;938:17:0;958:12;:10;;;:12;;:::i;:::-;938:32;;989:9;980:6;;:18;;;;;;;;;;;;;;;;;;1046:9;1013:43;;1042:1;1013:43;;;;;;;;;;;;904:159;435:12:7;:10;;;:12;;:::i;:::-;423:9;;:24;;;;;;;;;;;;;;;;;;495:9;;;;;;;;;;;463:42;;491:1;463:42;;;;;;;;;;;;464:11005:6;;596:96:4;649:7;675:10;668:17;;596:96;:::o;464:11005:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101c45760003560e01c80635f96dc11116100f957806396805e5411610097578063e177bb3811610071578063e177bb38146106d8578063e2bbb1581461070c578063ecf4deb914610744578063f2fde38b146107a6576101c4565b806396805e54146105e2578063b3ab15fb14610646578063cd6dc6871461068a576101c4565b8063715018a6116100d3578063715018a61461051d5780638da5cb5b1461052757806393f1a40b1461055b578063943f013d146105c4576101c4565b80635f96dc11146104d7578063630b5ba1146104f55780636e271dd5146104ff576101c4565b80633f7caf521161016657806351eb05a61161014057806351eb05a6146103d95780635312ea8e1461040757806354575af414610435578063570ca735146104a3576101c4565b80633f7caf5214610363578063441a3e70146103815780634456eda2146103b9576101c4565b80631ab06ee5116101a25780631ab06ee51461027b578063231f0c6a146102b357806329605e77146102ff578063392e53cd14610343576101c4565b806309cf6091146101c95780631526fe27146101e757806317caf6f11461025d575b600080fd5b6101d16107ea565b6040518082815260200191505060405180910390f35b610213600480360360208110156101fd57600080fd5b81019080803590602001909291905050506107f8565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b61026561086b565b6040518082815260200191505060405180910390f35b6102b16004803603604081101561029157600080fd5b810190808035906020019092919080359060200190929190505050610871565b005b6102e9600480360360408110156102c957600080fd5b810190808035906020019092919080359060200190929190505050610995565b6040518082815260200191505060405180910390f35b6103416004803603602081101561031557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610aa8565b005b61034b610b63565b60405180821515815260200191505060405180910390f35b61036b610b7a565b6040518082815260200191505060405180910390f35b6103b76004803603604081101561039757600080fd5b810190808035906020019092919080359060200190929190505050610b80565b005b6103c1610e38565b60405180821515815260200191505060405180910390f35b610405600480360360208110156103ef57600080fd5b8101908080359060200190929190505050610e97565b005b6104336004803603602081101561041d57600080fd5b81019080803590602001909291905050506110a6565b005b6104a16004803603606081101561044b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111da565b005b6104ab61148c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104df6114b6565b6040518082815260200191505060405180910390f35b6104fd6114bc565b005b6105076114e9565b6040518082815260200191505060405180910390f35b6105256114ef565b005b61052f61165c565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6105a76004803603604081101561057157600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611685565b604051808381526020018281526020019250505060405180910390f35b6105cc6116b6565b6040518082815260200191505060405180910390f35b610644600480360360808110156105f857600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190803590602001909291905050506116bc565b005b6106886004803603602081101561065c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118f5565b005b6106d6600480360360408110156106a057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506119a7565b005b6106e0611bee565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107426004803603604081101561072257600080fd5b810190808035906020019092919080359060200190929190505050611c14565b005b6107906004803603604081101561075a57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f23565b6040518082815260200191505060405180910390f35b6107e8600480360360208110156107bc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061215b565b005b69054b40b1f852bda0000081565b6003818154811061080857600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b60065481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610917576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b61091f6114bc565b60006003838154811061092e57fe5b906000526020600020906005020190508060040160009054906101000a900460ff16156109875761098082610972836001015460065461234d90919063ffffffff16565b6123d090919063ffffffff16565b6006819055505b818160010181905550505050565b60008183106109a75760009050610aa2565b6008548210610a2d5760085483106109c25760009050610aa2565b60075483116109fd576109f66009546109e860075460085461234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b610a26600954610a188560085461234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b6007548211610a3f5760009050610aa2565b6007548311610a7857610a71600954610a636007548561234d90919063ffffffff16565b61245890919063ffffffff16565b9050610aa2565b610a9f600954610a91858561234d90919063ffffffff16565b61245890919063ffffffff16565b90505b92915050565b610ab06124de565b73ffffffffffffffffffffffffffffffffffffffff16610ace61165c565b73ffffffffffffffffffffffffffffffffffffffff1614610b57576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610b60816124e6565b50565b6000600460009054906101000a900460ff16905090565b60095481565b6000339050600060038481548110610b9457fe5b9060005260206000209060050201905060006005600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610c72576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610c7b85610e97565b6000610cc88260010154610cba670de0b6b3a7640000610cac8760030154876000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b90506000811115610d2c57610cdd848261269d565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610da457610d4c85836000015461234d90919063ffffffff16565b8260000181905550610da384868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b610dd9670de0b6b3a7640000610dcb8560030154856000015461245890919063ffffffff16565b61261490919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610e7b6124de565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060038281548110610ea657fe5b9060005260206000209060050201905080600201544211610ec757506110a3565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f5457600080fd5b505afa158015610f68573d6000803e3d6000fd5b505050506040513d6020811015610f7e57600080fd5b810190808051906020019092919050505090506000811415610faa5742826002018190555050506110a3565b8160040160009054906101000a900460ff16610ffd5760018260040160006101000a81548160ff021916908315150217905550610ff682600101546006546123d090919063ffffffff16565b6006819055505b60006006541115611097576000611018836002015442610995565b9050600061104760065461103986600101548561245890919063ffffffff16565b61261490919063ffffffff16565b905061108c6110798461106b670de0b6b3a76400008561245890919063ffffffff16565b61261490919063ffffffff16565b85600301546123d090919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b6000600382815481106110b557fe5b9060005260206000209060050201905060006005600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061118533828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611280576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b6276a7006008540142101561145c57600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611353576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600380549050905060005b818110156114595760006003828154811061137757fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141561144d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611360565b50505b61148781838573ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6000600380549050905060005b818110156114e5576114da81610e97565b8060010190506114c9565b5050565b60085481565b6114f76124de565b73ffffffffffffffffffffffffffffffffffffffff1661151561165c565b73ffffffffffffffffffffffffffffffffffffffff161461159e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600a5481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611762576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b61176b836128be565b811561177a576117796114bc565b5b6007544210156117ad5760008114156117975760075490506117a8565b6007548110156117a75760075490505b5b6117c5565b60008114806117bb57504281105b156117c4574290505b5b6000600754821115806117d85750428211155b905060036040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156118ee576118e7856006546123d090919063ffffffff16565b6006819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461199b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b6119a481610aa8565b50565b600460009054906101000a900460ff1615611a2a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611ad0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180612ee86024913960400191505060405180910390fd5b804210611b45576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611bbb5781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600781905550600a54600754016008819055506001600460006101000a81548160ff0219169083151502179055505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611c2f60c8846129c390919063ffffffff16565b90506000611c5b612710611c4d60c88561245890919063ffffffff16565b61261490919063ffffffff16565b90506000611c72828661234d90919063ffffffff16565b9050600060038781548110611c8357fe5b9060005260206000209060050201905060006005600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611cf088610e97565b600081600001541115611db0576000611d4a8260010154611d3c670de0b6b3a7640000611d2e8760030154876000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b90506000811115611dae57611d5f878261269d565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115611e8d57611e0a8630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129fe909392919063ffffffff16565b611e218382600001546123d090919063ffffffff16565b8160000181905550611e8c7301fc7f2c81acd9d38ed4d509b1f17555e549ef1d858460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b611ec2670de0b6b3a7640000611eb48460030154846000015461245890919063ffffffff16565b61261490919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b60008060038481548110611f3357fe5b9060005260206000209060050201905060006005600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561202d57600080fd5b505afa158015612041573d6000803e3d6000fd5b505050506040513d602081101561205757600080fd5b8101908080519060200190929190505050905083600201544211801561207e575060008114155b15612108576000612093856002015442610995565b905060006120c26006546120b488600101548561245890919063ffffffff16565b61261490919063ffffffff16565b90506121036120f4846120e6670de0b6b3a76400008561245890919063ffffffff16565b61261490919063ffffffff16565b856123d090919063ffffffff16565b935050505b61214f8360010154612141670de0b6b3a764000061213386886000015461245890919063ffffffff16565b61261490919063ffffffff16565b61234d90919063ffffffff16565b94505050505092915050565b6121636124de565b73ffffffffffffffffffffffffffffffffffffffff1661218161165c565b73ffffffffffffffffffffffffffffffffffffffff161461220a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612290576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e4e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156123c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b60008082840190508381101561244e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561246b57600090506124d8565b600082840290508284828161247c57fe5b04146124d3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ec76021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561256c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e9a602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36125d08161215b565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080821161268b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b81838161269457fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561272857600080fd5b505afa15801561273c573d6000803e3d6000fd5b505050506040513d602081101561275257600080fd5b81019080805190602001909291905050509050600081111561281757808211156127c8576127c38382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b612816565b6128158383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661281c9092919063ffffffff16565b5b5b505050565b6128b98363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612abf565b505050565b6000600380549050905060005b818110156129be578273ffffffffffffffffffffffffffffffffffffffff16600382815481106128f757fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156129b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b8060010190506128cb565b505050565b6000806129d084846123d0565b905060006129df82600161234d565b90506129f46129ee8286612614565b85612458565b9250505092915050565b612ab9846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612abf565b50505050565b6000612b21826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612bae9092919063ffffffff16565b9050600081511115612ba957808060200190516020811015612b4257600080fd5b8101908080519060200190929190505050612ba8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180612f0c602a913960400191505060405180910390fd5b5b505050565b6060612bbd8484600085612bc6565b90509392505050565b606082471015612c21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e746026913960400191505060405180910390fd5b612c2a85612d6e565b612c9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612ceb5780518252602082019150602081019050602083039250612cc8565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612d4d576040519150601f19603f3d011682016040523d82523d6000602084013e612d52565b606091505b5091509150612d62828286612d81565b92505050949350505050565b600080823b905060008111915050919050565b60608315612d9157829050612e46565b600083511115612da45782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612e0b578082015181840152602081019050612df0565b50505050905090810190601f168015612e385780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a26469706673582212206b8f333e29ff2414a951be307730b98e0321c46008fabff7731468a24ce8593a64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5F96DC11 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x6D8 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x70C JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x744 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x7A6 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x5E2 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x646 JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x68A JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x51D JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x55B JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x5C4 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x4F5 JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x4FF JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x51EB05A6 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x3D9 JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x435 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x4A3 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x363 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x381 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x3B9 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x1AB06EE5 GT PUSH2 0x1A2 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x2B3 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x343 JUMPI PUSH2 0x1C4 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x1E7 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x25D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D1 PUSH2 0x7EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x213 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x265 PUSH2 0x86B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x291 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x871 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x341 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x315 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34B PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x36B PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB80 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C1 PUSH2 0xE38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x405 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x433 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x41D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x10A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x11DA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4AB PUSH2 0x148C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4DF PUSH2 0x14B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4FD PUSH2 0x14BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x507 PUSH2 0x14E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x525 PUSH2 0x14EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x52F PUSH2 0x165C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x571 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1685 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5CC PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x644 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x5F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x16BC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x688 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x18F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D6 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x6A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19A7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E0 PUSH2 0x1BEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x742 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x722 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1C14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x790 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x75A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1F23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7E8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x7BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x215B JUMP JUMPDEST STOP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x808 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x91F PUSH2 0x14BC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x92E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x987 JUMPI PUSH2 0x980 DUP3 PUSH2 0x972 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x9A7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP3 LT PUSH2 0xA2D JUMPI PUSH1 0x8 SLOAD DUP4 LT PUSH2 0x9C2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 GT PUSH2 0x9FD JUMPI PUSH2 0x9F6 PUSH1 0x9 SLOAD PUSH2 0x9E8 PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA26 PUSH1 0x9 SLOAD PUSH2 0xA18 DUP6 PUSH1 0x8 SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP3 GT PUSH2 0xA3F JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 GT PUSH2 0xA78 JUMPI PUSH2 0xA71 PUSH1 0x9 SLOAD PUSH2 0xA63 PUSH1 0x7 SLOAD DUP6 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xAA2 JUMP JUMPDEST PUSH2 0xA9F PUSH1 0x9 SLOAD PUSH2 0xA91 DUP6 DUP6 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xACE PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB57 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB60 DUP2 PUSH2 0x24E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xB94 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xC72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC7B DUP6 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC8 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xCBA PUSH8 0xDE0B6B3A7640000 PUSH2 0xCAC DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xD2C JUMPI PUSH2 0xCDD DUP5 DUP3 PUSH2 0x269D JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xDA4 JUMPI PUSH2 0xD4C DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xDA3 DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xDD9 PUSH8 0xDE0B6B3A7640000 PUSH2 0xDCB DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xE7B PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEA6 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xEC7 JUMPI POP PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF54 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF68 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xF7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xFAA JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x10A3 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xFFD JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xFF6 DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x6 SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD GT ISZERO PUSH2 0x1097 JUMPI PUSH1 0x0 PUSH2 0x1018 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1047 PUSH1 0x6 SLOAD PUSH2 0x1039 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x108C PUSH2 0x1079 DUP5 PUSH2 0x106B PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10B5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1185 CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1280 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x8 SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x145C JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1353 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1459 JUMPI PUSH1 0x0 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1377 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x144D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1360 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1487 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH2 0x14DA DUP2 PUSH2 0xE97 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x14C9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x14F7 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1515 PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x159E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1762 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x176B DUP4 PUSH2 0x28BE JUMP JUMPDEST DUP2 ISZERO PUSH2 0x177A JUMPI PUSH2 0x1779 PUSH2 0x14BC JUMP JUMPDEST JUMPDEST PUSH1 0x7 SLOAD TIMESTAMP LT ISZERO PUSH2 0x17AD JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1797 JUMPI PUSH1 0x7 SLOAD SWAP1 POP PUSH2 0x17A8 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x17A7 JUMPI PUSH1 0x7 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x17BB JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x17C4 JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x17D8 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x18EE JUMPI PUSH2 0x18E7 DUP6 PUSH1 0x6 SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x199B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19A4 DUP2 PUSH2 0xAA8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1A2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EE8 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1B45 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BBB JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x7 SLOAD ADD PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1C2F PUSH1 0xC8 DUP5 PUSH2 0x29C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C5B PUSH2 0x2710 PUSH2 0x1C4D PUSH1 0xC8 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C72 DUP3 DUP7 PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1C83 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1CF0 DUP9 PUSH2 0xE97 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1DB0 JUMPI PUSH1 0x0 PUSH2 0x1D4A DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1D3C PUSH8 0xDE0B6B3A7640000 PUSH2 0x1D2E DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1DAE JUMPI PUSH2 0x1D5F DUP8 DUP3 PUSH2 0x269D JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x1E8D JUMPI PUSH2 0x1E0A DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x29FE SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1E21 DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1E8C PUSH20 0x1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D DUP6 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1EC2 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1EB4 DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1F33 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x202D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2041 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2057 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x207E JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2108 JUMPI PUSH1 0x0 PUSH2 0x2093 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x995 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20C2 PUSH1 0x6 SLOAD PUSH2 0x20B4 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x2103 PUSH2 0x20F4 DUP5 PUSH2 0x20E6 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x23D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x214F DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2141 PUSH8 0xDE0B6B3A7640000 PUSH2 0x2133 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2458 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2614 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x234D SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2163 PUSH2 0x24DE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2181 PUSH2 0x165C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x220A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2290 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E4E PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x23C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x244E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x246B JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x247C JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x24D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2EC7 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x256C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E9A PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x25D0 DUP2 PUSH2 0x215B JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x268B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2694 JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2728 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x273C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2752 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x2817 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x27C8 JUMPI PUSH2 0x27C3 DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x2815 DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x281C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x28B9 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ABF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x29BE JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x28F7 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x29B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x28CB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x29D0 DUP5 DUP5 PUSH2 0x23D0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x29DF DUP3 PUSH1 0x1 PUSH2 0x234D JUMP JUMPDEST SWAP1 POP PUSH2 0x29F4 PUSH2 0x29EE DUP3 DUP7 PUSH2 0x2614 JUMP JUMPDEST DUP6 PUSH2 0x2458 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2AB9 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2ABF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B21 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2BAE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2BA9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2B42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F0C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2BBD DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2BC6 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2C21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2E74 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C2A DUP6 PUSH2 0x2D6E JUMP JUMPDEST PUSH2 0x2C9C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2CEB JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2CC8 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2D4D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2D52 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2D62 DUP3 DUP3 DUP7 PUSH2 0x2D81 JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2D91 JUMPI DUP3 SWAP1 POP PUSH2 0x2E46 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2DA4 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0B JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DF0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2E38 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A26469706673582212206B8F333E 0x29 SELFDESTRUCT 0x24 EQ 0xA9 MLOAD 0xBE ADDRESS PUSH24 0x30B98E0321C46008FABFF7731468A24CE8593A64736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "464:11005:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1923:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1271:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4667:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5097:653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2482:89:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1784:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8993:812;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;786:100:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6929:910:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9876:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10862:604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1656:28:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6673:180;;;:::i;:::-;;1733:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1771:145:0;;;:::i;:::-;;1139:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1410:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1871:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3294:1277;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10740:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2579:366;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1217:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7876:1081;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5813:777;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2065:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1923:51:6;1963:11;1923:51;:::o;1271:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1571:34::-;;;;:::o;4667:353::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4746:17:6::1;:15;:17::i;:::-;4774:21;4798:8;4807:4;4798:14;;;;;;;;;;;;;;;;;;4774:38;;4827:4;:14;;;;;;;;;;;;4823:150;;;4876:85;4935:11;4876:36;4896:4;:15;;;4876;;:19;;:36;;;;:::i;:::-;:40;;:85;;;;:::i;:::-;4858:15;:103;;;;4823:150;5001:11;4983:4;:15;;:29;;;;769:1:7;4667:353:6::0;;:::o;5097:653::-;5182:7;5219;5206:9;:20;5202:34;;5235:1;5228:8;;;;5202:34;5262:11;;5251:7;:22;5247:496;;5307:11;;5294:9;:24;5290:38;;5327:1;5320:8;;;;5290:38;5360:13;;5347:9;:26;5343:88;;5382:49;5417:13;;5382:30;5398:13;;5382:11;;:15;;:30;;;;:::i;:::-;:34;;:49;;;;:::i;:::-;5375:56;;;;5343:88;5453:45;5484:13;;5453:26;5469:9;5453:11;;:15;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5446:52;;;;5247:496;5546:13;;5535:7;:24;5531:38;;5568:1;5561:8;;;;5531:38;5601:13;;5588:9;:26;5584:84;;5623:45;5654:13;;5623:26;5635:13;;5623:7;:11;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5616:52;;;;5584:84;5690:41;5717:13;;5690:22;5702:9;5690:7;:11;;:22;;;;:::i;:::-;:26;;:41;;;;:::i;:::-;5683:48;;5097:653;;;;;:::o;894:115:7:-;1362:12:0;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:31:7::1;988:12;970:17;:31::i;:::-;894:115:::0;:::o;2482:89:6:-;2528:4;2552:11;;;;;;;;;;;2545:18;;2482:89;:::o;1784:44::-;;;;:::o;8993:812::-;9060:15;9078:10;9060:28;;9099:21;9123:8;9132:4;9123:14;;;;;;;;;;;;;;;;;;9099:38;;9148:21;9172:8;:14;9181:4;9172:14;;;;;;;;;;;:23;9187:7;9172:23;;;;;;;;;;;;;;;9148:47;;9229:7;9214:4;:11;;;:22;;9206:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9270:16;9281:4;9270:10;:16::i;:::-;9297;9316:69;9369:4;:15;;;9316:48;9359:4;9316:38;9332:4;:21;;;9316:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;9297:88;;9411:1;9400:8;:12;9396:129;;;9429:35;9446:7;9455:8;9429:16;:35::i;:::-;9495:7;9484:29;;;9504:8;9484:29;;;;;;;;;;;;;;;;;;9396:129;9549:1;9539:7;:11;9535:138;;;9581:24;9597:7;9581:4;:11;;;:15;;:24;;;;:::i;:::-;9567:4;:11;;:38;;;;9620:41;9644:7;9653;9620:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;9535:138;9701:48;9744:4;9701:38;9717:4;:21;;;9701:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;9683:4;:15;;:66;;;;9783:4;9774:7;9765:32;;;9789:7;9765:32;;;;;;;;;;;;;;;;;;8993:812;;;;;;:::o;786:100:7:-;829:4;869:9;;;;;;;;;;;853:25;;:12;:10;:12::i;:::-;:25;;;846:32;;786:100;:::o;6929:910:6:-;6981:21;7005:8;7014:4;7005:14;;;;;;;;;;;;;;;;;;6981:38;;7053:4;:19;;;7034:15;:38;7030:77;;7089:7;;;7030:77;7117:19;7139:4;:10;;;;;;;;;;;;:20;;;7168:4;7139:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7117:57;;7204:1;7189:11;:16;7185:107;;;7244:15;7222:4;:19;;:37;;;;7274:7;;;;7185:107;7307:4;:14;;;;;;;;;;;;7302:138;;7355:4;7338;:14;;;:21;;;;;;;;;;;;;;;;;;7392:36;7412:4;:15;;;7392;;:19;;:36;;;;:::i;:::-;7374:15;:54;;;;7302:138;7472:1;7454:15;;:19;7450:334;;;7490:24;7517:56;7536:4;:19;;;7557:15;7517:18;:56::i;:::-;7490:83;;7588:19;7610:58;7652:15;;7610:37;7631:4;:15;;;7610:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7588:80;;7707:65;7733:38;7759:11;7733:21;7749:4;7733:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;7707:4;:21;;;:25;;:65;;;;:::i;:::-;7683:4;:21;;:89;;;;7450:334;;;7816:15;7794:4;:19;;:37;;;;6929:910;;;;:::o;9876:377::-;9935:21;9959:8;9968:4;9959:14;;;;;;;;;;;;;;;;;;9935:38;;9984:21;10008:8;:14;10017:4;10008:14;;;;;;;;;;;:26;10023:10;10008:26;;;;;;;;;;;;;;;9984:50;;10045:15;10063:4;:11;;;10045:29;;10099:1;10085:4;:11;;:15;;;;10129:1;10111:4;:15;;:19;;;;10141:44;10165:10;10177:7;10141:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;10231:4;10219:10;10201:44;;;10237:7;10201:44;;;;;;;;;;;;;;;;;;9876:377;;;;:::o;10862:604::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11012:7:6::1;10998:11;;:21;10980:15;:39;10976:441;;;11154:4;;;;;;;;;;;11144:14;;:6;:14;;;;11136:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11182:14;11199:8;:15;;;;11182:32;;11234:11;11229:177;11257:6;11251:3;:12;11229:177;;;11291:21;11315:8;11324:3;11315:13;;;;;;;;;;;;;;;;;;11291:37;;11365:4;:10;;;;;;;;;;;;11355:20;;:6;:20;;;;11347:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11229:177;11265:5;;;;;11229:177;;;;10976:441;;11427:31;11447:2;11451:6;11427;:19;;;;:31;;;;;:::i;:::-;10862:604:::0;;;:::o;521:85:7:-;562:7;589:9;;;;;;;;;;;582:16;;521:85;:::o;1656:28:6:-;;;;:::o;6673:180::-;6718:14;6735:8;:15;;;;6718:32;;6766:11;6761:85;6789:6;6783:3;:12;6761:85;;;6819:15;6830:3;6819:10;:15::i;:::-;6797:5;;;;;6761:85;;;;6673:180;:::o;1733:26::-;;;;:::o;1771:145:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1907:1;1890:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1771:145::o:0;1139:85::-;1185:7;1211:6;;;;;;;;;;;1204:13;;1139:85;:::o;1410:64:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1871:35::-;;;;:::o;3294:1277::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3460:26:6::1;3479:6;3460:18;:26::i;:::-;3501:11;3497:61;;;3529:17;:15;:17::i;:::-;3497:61;3590:13;;3572:15;:31;3568:534;;;3676:1;3657:15;:20;3653:243;;;3716:13;;3698:31;;3653:243;;;3792:13;;3774:15;:31;3770:111;;;3848:13;;3830:31;;3770:111;3653:243;3568:534;;;3983:1;3964:15;:20;:57;;;;4006:15;3988;:33;3964:57;3960:131;;;4060:15;4042:33;;3960:131;3568:534;4112:15;4159:13;;4140:15;:32;;4139:83;;;;4206:15;4187;:34;;4139:83;4112:110;;4233:8;4247:212;;;;;;;;4279:6;4247:212;;;;;;4313:11;4247:212;;;;4356:15;4247:212;;;;4405:1;4247:212;;;;4433:10;4247:212;;;;::::0;4233:227:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4475:10;4471:93;;;4520:32;4540:11;4520:15;;:19;;:32;;;;:::i;:::-;4502:15;:50;;;;4471:93;769:1:7;3294:1277:6::0;;;;:::o;10740:114::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10816:30:6::1;10833:12;10816:16;:30::i;:::-;10740:114:::0;:::o;2579:366::-;2358:11;;;;;;;;;;;2357:12;2349:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:10:7::1;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2736:14:6::2;2718:15;:32;2710:49;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;2791:1;2774:19;;:5;:19;;;2770:45;;2809:5;2795:4;;:20;;;;;;;;;;;;;;;;;;2770:45;2842:14;2826:13;:30;;;;2897:11;;2881:13;;:27;2867:11;:41;;;;2933:4;2919:11;;:18;;;;;;;;;;;;;;;;;;2579:366:::0;;:::o;1217:18::-;;;;;;;;;;;;;:::o;7876:1081::-;7942:15;7960:10;7942:28;;7981:15;7999:17;8012:3;7999:7;:12;;:17;;;;:::i;:::-;7981:35;;8027:14;8044:27;8065:5;8044:16;8056:3;8044:7;:11;;:16;;;;:::i;:::-;:20;;:27;;;;:::i;:::-;8027:44;;8082:20;8105:19;8117:6;8105:7;:11;;:19;;;;:::i;:::-;8082:42;;8137:21;8161:8;8170:4;8161:14;;;;;;;;;;;;;;;;;;8137:38;;8186:21;8210:8;:14;8219:4;8210:14;;;;;;;;;;;:23;8225:7;8210:23;;;;;;;;;;;;;;;8186:47;;8244:16;8255:4;8244:10;:16::i;:::-;8291:1;8277:4;:11;;;:15;8273:291;;;8309:16;8328:69;8381:4;:15;;;8328:48;8371:4;8328:38;8344:4;:21;;;8328:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;:52;;:69;;;;:::i;:::-;8309:88;;8427:1;8416:8;:12;8412:141;;;8449:35;8466:7;8475:8;8449:16;:35::i;:::-;8519:7;8508:29;;;8528:8;8508:29;;;;;;;;;;;;;;;;;;8412:141;8273:291;;8588:1;8578:7;:11;8574:252;;;8606:60;8634:7;8651:4;8658:7;8606:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8695:29;8711:12;8695:4;:11;;;:15;;:29;;;;:::i;:::-;8681:4;:11;;:43;;;;8739:75;8763:42;8807:6;8739:4;:10;;;;;;;;;;;;:23;;;;:75;;;;;:::i;:::-;8574:252;8854:48;8897:4;8854:38;8870:4;:21;;;8854:4;:11;;;:15;;:38;;;;:::i;:::-;:42;;:48;;;;:::i;:::-;8836:4;:15;;:66;;;;8935:4;8926:7;8918:31;;;8941:7;8918:31;;;;;;;;;;;;;;;;;;7876:1081;;;;;;;;:::o;5813:777::-;5887:7;5907:21;5931:8;5940:4;5931:14;;;;;;;;;;;;;;;;;;5907:38;;5956:21;5980:8;:14;5989:4;5980:14;;;;;;;;;;;:21;5995:5;5980:21;;;;;;;;;;;;;;;5956:45;;6012:24;6039:4;:21;;;6012:48;;6071:19;6093:4;:10;;;;;;;;;;;;:20;;;6122:4;6093:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6071:57;;6161:4;:19;;;6143:15;:37;:57;;;;;6199:1;6184:11;:16;;6143:57;6139:362;;;6217:24;6244:56;6263:4;:19;;;6284:15;6244:18;:56::i;:::-;6217:83;;6315:19;6337:58;6379:15;;6337:37;6358:4;:15;;;6337:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;6315:80;;6429:60;6450:38;6476:11;6450:21;6466:4;6450:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;6429:16;:20;;:60;;;;:::i;:::-;6410:79;;6139:362;;;6518:64;6566:4;:15;;;6518:43;6556:4;6518:33;6534:16;6518:4;:11;;;:15;;:33;;;;:::i;:::-;:37;;:43;;;;:::i;:::-;:47;;:64;;;;:::i;:::-;6511:71;;;;;;5813:777;;;;:::o;2065:240:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:1:::1;2153:22;;:8;:22;;;;2145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:8;2233:38;;2254:6;::::0;::::1;;;;;;;;2233:38;;;;;;;;;;;;2290:8;2281:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2065:240:::0;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;596:96:4:-;649:7;675:10;668:17;;596:96;:::o;1017:344:7:-;1132:1;1108:26;;:12;:26;;;;1086:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:12;1223:45;;1251:1;1223:45;;;;;;;;;;;;1279:39;1305:12;1279:25;:39::i;:::-;1341:12;1329:9;;:24;;;;;;;;;;;;;;;;;;1017:344;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;10367:365:6:-;10443:20;10466:4;;;;;;;;;;;:14;;;10489:4;10466:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10443:52;;10525:1;10510:12;:16;10506:219;;;10557:12;10547:7;:22;10543:171;;;10590:36;10608:3;10613:12;10590:4;;;;;;;;;;;:17;;;;:36;;;;;:::i;:::-;10543:171;;;10667:31;10685:3;10690:7;10667:4;;;;;;;;;;;:17;;;;:31;;;;;:::i;:::-;10543:171;10506:219;10367:365;;;:::o;717:175:2:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;2955:261:6:-;3023:14;3040:8;:15;;;;3023:32;;3071:11;3066:143;3094:6;3088:3;:12;3066:143;;;3155:6;3132:29;;:8;3141:3;3132:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;3124:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3102:5;;;;;3066:143;;;;2955:261;;:::o;5601:171:5:-;5660:7;5679:9;5691;5695:1;5698;5691:3;:9::i;:::-;5679:21;;5710:9;5722;5726:1;5729;5722:3;:9::i;:::-;5710:21;;5748:17;5752:9;5756:1;5759;5752:3;:9::i;:::-;5763:1;5748:3;:17::i;:::-;5741:24;;;;5601:171;;;;:::o;898:203:2:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:3:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2427800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Poly()": "1091",
								"PolyPerSecond()": "1051",
								"TOTAL_REWARDS()": "252",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"initialize(address,uint256)": "infinite",
								"isInitialized()": "1167",
								"isOperator()": "1197",
								"massUpdatePools()": "infinite",
								"operator()": "1166",
								"owner()": "1122",
								"pendingStone(uint256,address)": "infinite",
								"poolEndTime()": "1095",
								"poolInfo(uint256)": "5486",
								"poolStartTime()": "1051",
								"renounceOwnership()": "24374",
								"runningTime()": "1116",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "infinite",
								"totalAllocPoint()": "1096",
								"transferOperator(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2196",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safePolyTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1347,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1320,
									"end": 1352,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1604,
									"end": 1605,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1571,
									"end": 1605,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1571,
									"end": 1605,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1815,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "156A8C394962000"
								},
								{
									"begin": 1784,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 1784,
									"end": 1828,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1900,
									"end": 1906,
									"name": "PUSH",
									"source": 6,
									"value": "3F480"
								},
								{
									"begin": 1871,
									"end": 1906,
									"name": "PUSH",
									"source": 6,
									"value": "A"
								},
								{
									"begin": 1871,
									"end": 1906,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 904,
									"end": 1063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 692,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 685,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 464,
									"end": 11469,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206b8f333e29ff2414a951be307730b98e0321c46008fabff7731468a24ce8593a64736f6c63430007060033",
									".code": [
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "ECF4DEB9"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "B3AB15FB"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "CD6DC687"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "943F013D"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "6E271DD5"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "3F7CAF52"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "3F7CAF52"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "392E53CD"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "9CF6091"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 464,
											"end": 11469,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1974,
											"name": "PUSH",
											"source": 6,
											"value": "54B40B1F852BDA00000"
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 1974,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1297,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1571,
											"end": 1605,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "112"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4746,
											"end": 4761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 4746,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4795,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4806,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4807,
											"end": 4811,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4798,
											"end": 4812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4774,
											"end": 4812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4831,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4827,
											"end": 4841,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4823,
											"end": 4973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4935,
											"end": 4946,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4896,
											"end": 4900,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4911,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4896,
											"end": 4911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4896,
											"end": 4911,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4891,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4876,
											"end": 4891,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 4876,
											"end": 4895,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 4876,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4876,
											"end": 4916,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 4876,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4873,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4858,
											"end": 4961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4961,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4858,
											"end": 4961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4823,
											"end": 4973,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 4823,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5001,
											"end": 5012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 4998,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4983,
											"end": 4998,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4667,
											"end": 5020,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5182,
											"end": 5189,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5226,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5215,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5226,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5235,
											"end": 5236,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5228,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5228,
											"end": 5236,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 5202,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5262,
											"end": 5273,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5262,
											"end": 5273,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5258,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5251,
											"end": 5273,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5247,
											"end": 5743,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5307,
											"end": 5318,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5307,
											"end": 5318,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5303,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5318,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5290,
											"end": 5328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5320,
											"end": 5328,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5290,
											"end": 5328,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 5290,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5360,
											"end": 5373,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5360,
											"end": 5373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5373,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5343,
											"end": 5431,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5417,
											"end": 5430,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5398,
											"end": 5411,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5393,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5382,
											"end": 5393,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5382,
											"end": 5397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5382,
											"end": 5412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5382,
											"end": 5416,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5382,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5431,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5431,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5375,
											"end": 5431,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5343,
											"end": 5431,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 5343,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5484,
											"end": 5497,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5469,
											"end": 5478,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5464,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5453,
											"end": 5464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5453,
											"end": 5468,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5453,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5453,
											"end": 5483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5453,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5498,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5498,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5446,
											"end": 5498,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5446,
											"end": 5498,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5247,
											"end": 5743,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 5247,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5546,
											"end": 5559,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5546,
											"end": 5559,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5542,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5535,
											"end": 5559,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5531,
											"end": 5569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5568,
											"end": 5569,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5531,
											"end": 5569,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5531,
											"end": 5569,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5601,
											"end": 5614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5597,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5588,
											"end": 5614,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5584,
											"end": 5668,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5654,
											"end": 5667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 5635,
											"end": 5648,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5630,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5623,
											"end": 5634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5623,
											"end": 5649,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5623,
											"end": 5653,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5623,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5616,
											"end": 5668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5616,
											"end": 5668,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5584,
											"end": 5668,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5584,
											"end": 5668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5717,
											"end": 5730,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5717,
											"end": 5730,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5702,
											"end": 5711,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5697,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5690,
											"end": 5712,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5690,
											"end": 5716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5690,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5731,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5683,
											"end": 5731,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5097,
											"end": 5750,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2552,
											"end": 2563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2545,
											"end": 2563,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2571,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1784,
											"end": 1828,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9075,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9078,
											"end": 9088,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9088,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9131,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9132,
											"end": 9136,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9123,
											"end": 9137,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9137,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9099,
											"end": 9137,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9169,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9180,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9181,
											"end": 9185,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9186,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9194,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9172,
											"end": 9195,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9195,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9195,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9229,
											"end": 9236,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9214,
											"end": 9218,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9214,
											"end": 9225,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9214,
											"end": 9236,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 9206,
											"end": 9259,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9281,
											"end": 9285,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9270,
											"end": 9280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 9270,
											"end": 9286,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9313,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9369,
											"end": 9373,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9369,
											"end": 9384,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 9359,
											"end": 9363,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9332,
											"end": 9336,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9353,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9332,
											"end": 9353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9332,
											"end": 9353,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9320,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9327,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9327,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9327,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9331,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 9316,
											"end": 9331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9316,
											"end": 9354,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9358,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9316,
											"end": 9358,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 9316,
											"end": 9364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9316,
											"end": 9368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 9316,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9385,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9385,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9411,
											"end": 9412,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9400,
											"end": 9408,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9400,
											"end": 9412,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9525,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9396,
											"end": 9525,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9429,
											"end": 9464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9446,
											"end": 9453,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9455,
											"end": 9463,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9429,
											"end": 9445,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 9429,
											"end": 9464,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9429,
											"end": 9464,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9429,
											"end": 9464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9495,
											"end": 9502,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9504,
											"end": 9512,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9484,
											"end": 9513,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 9396,
											"end": 9525,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 9396,
											"end": 9525,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9549,
											"end": 9550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9546,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9539,
											"end": 9550,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9673,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9535,
											"end": 9673,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9597,
											"end": 9604,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9585,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9592,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9581,
											"end": 9592,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 9581,
											"end": 9596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9581,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9571,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9605,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9605,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9567,
											"end": 9605,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9644,
											"end": 9651,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9653,
											"end": 9660,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9624,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9620,
											"end": 9630,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9643,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9620,
											"end": 9643,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9620,
											"end": 9643,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9620,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9535,
											"end": 9673,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9535,
											"end": 9673,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9744,
											"end": 9748,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9717,
											"end": 9721,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9738,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9717,
											"end": 9738,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9717,
											"end": 9738,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9705,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9712,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9701,
											"end": 9712,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9712,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9716,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 9701,
											"end": 9716,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9701,
											"end": 9739,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9743,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 9701,
											"end": 9743,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9701,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9687,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9698,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9683,
											"end": 9698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9749,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9749,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9683,
											"end": 9749,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9783,
											"end": 9787,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9774,
											"end": 9781,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9789,
											"end": 9796,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9765,
											"end": 9797,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8993,
											"end": 9805,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "141"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 7002,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7013,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7014,
											"end": 7018,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7005,
											"end": 7019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 7019,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6981,
											"end": 7019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7053,
											"end": 7057,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7053,
											"end": 7072,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7053,
											"end": 7072,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7053,
											"end": 7072,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7049,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7034,
											"end": 7072,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7089,
											"end": 7096,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 7030,
											"end": 7107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7143,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7139,
											"end": 7149,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7159,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7139,
											"end": 7159,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7159,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7168,
											"end": 7172,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7139,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7174,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7117,
											"end": 7174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7189,
											"end": 7200,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7189,
											"end": 7205,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7185,
											"end": 7292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7244,
											"end": 7259,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7226,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7241,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7222,
											"end": 7241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7222,
											"end": 7259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 7274,
											"end": 7281,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7185,
											"end": 7292,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 7185,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7311,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7307,
											"end": 7321,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7302,
											"end": 7440,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7338,
											"end": 7342,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7352,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7338,
											"end": 7352,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7352,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7338,
											"end": 7359,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7412,
											"end": 7416,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7427,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7412,
											"end": 7427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7412,
											"end": 7427,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7392,
											"end": 7407,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7392,
											"end": 7411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7392,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7374,
											"end": 7428,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7428,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7428,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7374,
											"end": 7428,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7302,
											"end": 7440,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7302,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7472,
											"end": 7473,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7454,
											"end": 7473,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7514,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7517,
											"end": 7573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7536,
											"end": 7540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7555,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7536,
											"end": 7555,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7536,
											"end": 7555,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7557,
											"end": 7572,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7517,
											"end": 7535,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 7517,
											"end": 7573,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7517,
											"end": 7573,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7517,
											"end": 7573,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7490,
											"end": 7573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 7652,
											"end": 7667,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7631,
											"end": 7635,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7631,
											"end": 7646,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7626,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 7610,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7610,
											"end": 7651,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7610,
											"end": 7668,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7668,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7588,
											"end": 7668,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7759,
											"end": 7770,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7749,
											"end": 7753,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7733,
											"end": 7744,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 7733,
											"end": 7748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7733,
											"end": 7754,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7733,
											"end": 7758,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7733,
											"end": 7771,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7711,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7728,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7707,
											"end": 7728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 7707,
											"end": 7732,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7707,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7687,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7704,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7683,
											"end": 7704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7772,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7772,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7772,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 7450,
											"end": 7784,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7816,
											"end": 7831,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7794,
											"end": 7813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7794,
											"end": 7831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7839,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9967,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9968,
											"end": 9972,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9959,
											"end": 9973,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9935,
											"end": 9973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10005,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10016,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10022,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10023,
											"end": 10033,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10008,
											"end": 10034,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9984,
											"end": 10034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10060,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10063,
											"end": 10074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10074,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10099,
											"end": 10100,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10085,
											"end": 10096,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10085,
											"end": 10100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10111,
											"end": 10115,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10126,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10111,
											"end": 10126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10111,
											"end": 10130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 10165,
											"end": 10175,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10177,
											"end": 10184,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10145,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10141,
											"end": 10151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10164,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10141,
											"end": 10164,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10141,
											"end": 10164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 10141,
											"end": 10185,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10231,
											"end": 10235,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10219,
											"end": 10229,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 10237,
											"end": 10244,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10201,
											"end": 10245,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9876,
											"end": 10253,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "191"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11019,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 10998,
											"end": 11009,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10998,
											"end": 11019,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10980,
											"end": 10995,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10980,
											"end": 11019,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11150,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11144,
											"end": 11158,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 11136,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11182,
											"end": 11196,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11199,
											"end": 11207,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11199,
											"end": 11214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11199,
											"end": 11214,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11199,
											"end": 11214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11199,
											"end": 11214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11182,
											"end": 11214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11182,
											"end": 11214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11245,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11251,
											"end": 11263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11291,
											"end": 11312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11323,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11324,
											"end": 11327,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11315,
											"end": 11328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11291,
											"end": 11328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11291,
											"end": 11328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11365,
											"end": 11375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11361,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11355,
											"end": 11375,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "706F6F6C2E746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 11347,
											"end": 11390,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11229,
											"end": 11406,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 10976,
											"end": 11417,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11447,
											"end": 11449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11451,
											"end": 11457,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11433,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11446,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11427,
											"end": 11446,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 11427,
											"end": 11446,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11427,
											"end": 11458,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10862,
											"end": 11466,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1656,
											"end": 1684,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6732,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6735,
											"end": 6743,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6735,
											"end": 6750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6750,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6735,
											"end": 6750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6718,
											"end": 6750,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6766,
											"end": 6777,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6789,
											"end": 6795,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6786,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6795,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6819,
											"end": 6829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 6819,
											"end": 6834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6797,
											"end": 6802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6761,
											"end": 6846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6673,
											"end": 6853,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1733,
											"end": 1759,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1410,
											"end": 1474,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1906,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "215"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3529,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3590,
											"end": 3603,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3590,
											"end": 3603,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3587,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3572,
											"end": 3603,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3676,
											"end": 3677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3672,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3657,
											"end": 3677,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3792,
											"end": 3805,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3792,
											"end": 3805,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3789,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3774,
											"end": 3805,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3861,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3830,
											"end": 3861,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3983,
											"end": 3984,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4006,
											"end": 4021,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3988,
											"end": 4021,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4075,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4042,
											"end": 4075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4172,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4159,
											"end": 4172,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4155,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4206,
											"end": 4221,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4221,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 4139,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4222,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4222,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4241,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4279,
											"end": 4285,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4324,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4356,
											"end": 4371,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4433,
											"end": 4443,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4459,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4233,
											"end": 4460,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4475,
											"end": 4485,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4471,
											"end": 4564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4540,
											"end": 4551,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4520,
											"end": 4535,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4520,
											"end": 4539,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 4520,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4517,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 4502,
											"end": 4552,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4552,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4552,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4502,
											"end": 4552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4471,
											"end": 4564,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 4471,
											"end": 4564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3294,
											"end": 4571,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10816,
											"end": 10846,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10833,
											"end": 10845,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10816,
											"end": 10832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 10816,
											"end": 10846,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10816,
											"end": 10846,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 10816,
											"end": 10846,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10740,
											"end": 10854,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2358,
											"end": 2369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2357,
											"end": 2369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "47656E657369733A20616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2349,
											"end": 2402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2736,
											"end": 2750,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2733,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2750,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "6C61746500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 2710,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2791,
											"end": 2792,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2779,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2774,
											"end": 2793,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2770,
											"end": 2815,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2770,
											"end": 2815,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2770,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2839,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2826,
											"end": 2856,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2856,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2908,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2897,
											"end": 2908,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2894,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 2881,
											"end": 2894,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2881,
											"end": 2908,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2878,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 2867,
											"end": 2908,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2908,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2867,
											"end": 2908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2919,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2919,
											"end": 2930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2919,
											"end": 2937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2579,
											"end": 2945,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1235,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7960,
											"end": 7970,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7970,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7942,
											"end": 7970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7981,
											"end": 7996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 8012,
											"end": 8015,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 7999,
											"end": 8006,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 7999,
											"end": 8011,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 7999,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7981,
											"end": 8016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7981,
											"end": 8016,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8027,
											"end": 8041,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8065,
											"end": 8070,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8056,
											"end": 8059,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8044,
											"end": 8055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "tag",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 8044,
											"end": 8060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8044,
											"end": 8064,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 8044,
											"end": 8071,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8027,
											"end": 8071,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8027,
											"end": 8071,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8082,
											"end": 8102,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8117,
											"end": 8123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8112,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8105,
											"end": 8116,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 8105,
											"end": 8124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8082,
											"end": 8124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8082,
											"end": 8124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8158,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8169,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8170,
											"end": 8174,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "tag",
											"source": 6,
											"value": "249"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8161,
											"end": 8175,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8137,
											"end": 8175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8218,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8219,
											"end": 8223,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8224,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8225,
											"end": 8232,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8233,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8186,
											"end": 8233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8244,
											"end": 8254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 8244,
											"end": 8260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8291,
											"end": 8292,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8281,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8277,
											"end": 8288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8277,
											"end": 8292,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8325,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8381,
											"end": 8385,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8396,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8381,
											"end": 8396,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8396,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8371,
											"end": 8375,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8344,
											"end": 8348,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8365,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8344,
											"end": 8365,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8365,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8332,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8339,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8328,
											"end": 8339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8339,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8328,
											"end": 8343,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8328,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8370,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8328,
											"end": 8370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "tag",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8328,
											"end": 8376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 8328,
											"end": 8380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8328,
											"end": 8397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8397,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8309,
											"end": 8397,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8427,
											"end": 8428,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8416,
											"end": 8424,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8416,
											"end": 8428,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8412,
											"end": 8553,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8412,
											"end": 8553,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8412,
											"end": 8553,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8466,
											"end": 8473,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8475,
											"end": 8483,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8449,
											"end": 8465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 8449,
											"end": 8484,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8449,
											"end": 8484,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8449,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8519,
											"end": 8526,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8528,
											"end": 8536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8508,
											"end": 8537,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8412,
											"end": 8553,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8412,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 8273,
											"end": 8564,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8588,
											"end": 8589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8578,
											"end": 8585,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8578,
											"end": 8589,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8826,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8574,
											"end": 8826,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8634,
											"end": 8641,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8651,
											"end": 8655,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8658,
											"end": 8665,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8606,
											"end": 8616,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8633,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8606,
											"end": 8633,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8633,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8606,
											"end": 8633,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "tag",
											"source": 6,
											"value": "259"
										},
										{
											"begin": 8606,
											"end": 8666,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8711,
											"end": 8723,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8699,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 8695,
											"end": 8710,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8695,
											"end": 8724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8692,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8724,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8724,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8681,
											"end": 8724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8763,
											"end": 8805,
											"name": "PUSH",
											"source": 6,
											"value": "1FC7F2C81ACD9D38ED4D509B1F17555E549EF1D"
										},
										{
											"begin": 8807,
											"end": 8813,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8749,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 8739,
											"end": 8762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8739,
											"end": 8814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8574,
											"end": 8826,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8574,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8897,
											"end": 8901,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8870,
											"end": 8874,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8858,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8865,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8854,
											"end": 8865,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8865,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8854,
											"end": 8869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8854,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8896,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 8854,
											"end": 8896,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8854,
											"end": 8902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8840,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8836,
											"end": 8851,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8902,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8902,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8902,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8836,
											"end": 8902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8935,
											"end": 8939,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 8933,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 8941,
											"end": 8948,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8918,
											"end": 8949,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 8957,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5887,
											"end": 5894,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5907,
											"end": 5928,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5939,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 5940,
											"end": 5944,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5931,
											"end": 5945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5907,
											"end": 5945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 5977,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5988,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5993,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 5994,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6000,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5980,
											"end": 6001,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6001,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5956,
											"end": 6001,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6036,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6043,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6060,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6039,
											"end": 6060,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6039,
											"end": 6060,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6012,
											"end": 6060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6103,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6113,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6113,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6113,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6122,
											"end": 6126,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6093,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6071,
											"end": 6128,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6165,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6161,
											"end": 6180,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6158,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6180,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6199,
											"end": 6200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6195,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6184,
											"end": 6200,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 6143,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6244,
											"end": 6300,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6263,
											"end": 6267,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6282,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6263,
											"end": 6282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6263,
											"end": 6282,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6299,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6262,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 6244,
											"end": 6300,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6244,
											"end": 6300,
											"name": "tag",
											"source": 6,
											"value": "274"
										},
										{
											"begin": 6244,
											"end": 6300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6300,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6334,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6379,
											"end": 6394,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 6379,
											"end": 6394,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6373,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6358,
											"end": 6373,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6358,
											"end": 6373,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6353,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6337,
											"end": 6357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 6337,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6378,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6337,
											"end": 6378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6337,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6395,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6315,
											"end": 6395,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6476,
											"end": 6487,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6450,
											"end": 6461,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6450,
											"end": 6465,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6450,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6450,
											"end": 6475,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "tag",
											"source": 6,
											"value": "278"
										},
										{
											"begin": 6450,
											"end": 6488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6445,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6449,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 6429,
											"end": 6449,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6429,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6489,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 6139,
											"end": 6501,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6566,
											"end": 6570,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6566,
											"end": 6581,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6534,
											"end": 6550,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6522,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6529,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6518,
											"end": 6533,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6518,
											"end": 6551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 6518,
											"end": 6555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6518,
											"end": 6561,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 6518,
											"end": 6565,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6518,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6511,
											"end": 6582,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5813,
											"end": 6590,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "290"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "292"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "296"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "293"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "tag",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH data",
											"source": 7,
											"value": "756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10466,
											"end": 10470,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10480,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10466,
											"end": 10480,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10480,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 10489,
											"end": 10493,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "tag",
											"source": 6,
											"value": "307"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "tag",
											"source": 6,
											"value": "308"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10495,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10443,
											"end": 10495,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10525,
											"end": 10526,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10510,
											"end": 10522,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10526,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10725,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10725,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 10506,
											"end": 10725,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10557,
											"end": 10569,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10547,
											"end": 10554,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10547,
											"end": 10569,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10608,
											"end": 10611,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10613,
											"end": 10625,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10594,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10607,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10590,
											"end": 10607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "tag",
											"source": 6,
											"value": "311"
										},
										{
											"begin": 10590,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "tag",
											"source": 6,
											"value": "310"
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10685,
											"end": 10688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10690,
											"end": 10697,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10667,
											"end": 10684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 10667,
											"end": 10698,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "tag",
											"source": 6,
											"value": "312"
										},
										{
											"begin": 10543,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10506,
											"end": 10725,
											"name": "tag",
											"source": 6,
											"value": "309"
										},
										{
											"begin": 10506,
											"end": 10725,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10367,
											"end": 10732,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3048,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3040,
											"end": 3055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3023,
											"end": 3055,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3082,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3091,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3088,
											"end": 3100,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3140,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3141,
											"end": 3144,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3145,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3151,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3132,
											"end": 3161,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 3124,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3102,
											"end": 3107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3066,
											"end": 3209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2955,
											"end": 3216,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "tag",
											"source": 5,
											"value": "245"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5722,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "326"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "tag",
											"source": 5,
											"value": "328"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "332"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "333"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "338"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "339"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "341"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "344"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "345"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "343"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 3,
											"value": "355"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "357"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "362"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Poly()": "e177bb38",
							"PolyPerSecond()": "3f7caf52",
							"TOTAL_REWARDS()": "09cf6091",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"initialize(address,uint256)": "cd6dc687",
							"isInitialized()": "392e53cd",
							"isOperator()": "4456eda2",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"pendingStone(uint256,address)": "ecf4deb9",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"renounceOwnership()": "715018a6",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"totalAllocPoint()": "17caf6f1",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Poly\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PolyPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Poly\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingStone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accStonePerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Newoperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TombGenesisRewardPool.sol\":\"PolyGenesisRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TombGenesisRewardPool.sol\":{\"keccak256\":\"0x64317ce4ddaf1c560165ac42e62b81e670ec91af920e0d1aae2c1c4814714dba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1048ed082df081101012226df7a1ede2e8331c553d47dbe0f9e61d2d50c50848\",\"dweb:/ipfs/Qmb6hgX54Sd195eabiqFuLVcLMSLqJ2Etr9GEpLfk2fpBz\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2190,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "Poly",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)187"
							},
							{
								"astId": 1141,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(PoolInfo)1136_storage)dyn_storage"
							},
							{
								"astId": 1144,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "initialized",
								"offset": 0,
								"slot": "4",
								"type": "t_bool"
							},
							{
								"astId": 1150,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))"
							},
							{
								"astId": 1153,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1155,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1157,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1160,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "PolyPerSecond",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1163,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1136_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1136_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyGenesisRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)187": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1125_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyGenesisRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1125_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1125_storage)"
							},
							"t_struct(PoolInfo)1136_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1127,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)187"
									},
									{
										"astId": 1129,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1131,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1133,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "accStonePerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1135,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1125_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.UserInfo",
								"members": [
									{
										"astId": 1122,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1124,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/owner/Operator.sol": {
				"Operator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator()": "4456eda2",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/owner/Operator.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2190,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "@openzeppelin/contracts/access/Ownable.sol:27:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1063,
					"file": "@openzeppelin/contracts/access/Ownable.sol",
					"start": 904
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "contracts/owner/Operator.sol:16:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor() internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 513,
					"file": "contracts/owner/Operator.sol",
					"start": 389
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							719
						],
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 720,
							"src": "120:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "675:7:0"
								}
							],
							"contractDependencies": [
								719
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								719
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"scope": 109,
									"src": "689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:57:0"
									},
									"src": "718:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "928:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"scope": 34,
														"src": "938:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "938:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "958:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:32:0"
											},
											{
												"expression": {
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "980:18:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "1008:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 109,
									"src": "904:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1194:30:0",
										"statements": [
											{
												"expression": {
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1204:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1069:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 109,
									"src": "1139:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1333:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1351:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1362:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1351:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1343:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1421:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1230:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:0"
									},
									"src": "1312:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1825:91:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1899:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1890:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1435:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 62,
											"modifierName": {
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1815:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:0"
									},
									"scope": 109,
									"src": "1771:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2135:170:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2173:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2145:73:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2228:43:0"
											},
											{
												"expression": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2281:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1922:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 86,
											"modifierName": {
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2125:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "2092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 109,
									"src": "2065:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "646:1661:0"
						}
					],
					"src": "87:2220:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 187,
									"src": "232:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "428:9:1"
									},
									"scope": 187,
									"src": "370:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "676:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "675:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 136,
												"src": "729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:6:1"
									},
									"scope": 187,
									"src": "658:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:32:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "1084:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1083:9:1"
									},
									"scope": 187,
									"src": "1010:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1762:33:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "1814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:6:1"
									},
									"scope": 187,
									"src": "1746:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 187,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 177,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2438:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 177,
												"src": "2480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2437:57:1"
									},
									"src": "2423:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 186,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2669:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2692:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:63:1"
									},
									"src": "2654:78:1"
								}
							],
							"scope": 188,
							"src": "138:2596:1"
						}
					],
					"src": "33:2702:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							697
						],
						"IERC20": [
							187
						],
						"SafeERC20": [
							400
						],
						"SafeMath": [
							1106
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 190,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 188,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 191,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 698,
							"src": "90:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 192,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 1107,
							"src": "127:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 196,
									"libraryName": {
										"id": 194,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "659:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:2",
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 697,
										"src": "691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$697",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:2",
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "789:103:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 212,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "849:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 136,
																		"src": "849:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "849:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 215,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "874:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "826:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 208,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "799:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "799:86:2"
											}
										]
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 200,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "753:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 221,
												"src": "765:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:41:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:2"
									},
									"scope": 400,
									"src": "717:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "988:113:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "1048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "1048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1048:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 239,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1077:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 240,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1083:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1087:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "998:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "998:96:2"
											}
										]
									},
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "924:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 222,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "938:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "952:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:55:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 400,
									"src": "898:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1437:537:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "1726:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 265,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1766:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 263,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 267,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "1773:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 261,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 146,
																				"src": "1742:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 280,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1927:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "1927:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1927:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 283,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1951:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1960:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1904:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1904:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 276,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1877:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 248,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "1382:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "1413:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:46:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 400,
									"src": "1361:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2066:197:2",
										"statements": [
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 324,
														"src": "2076:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"arguments": [
														{
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2123:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 306,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2130:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 300,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "2099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2099:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2099:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 313,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "2179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 316,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2209:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2209:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2209:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 319,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 320,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "2242:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 314,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2186:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2186:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 312,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2159:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:2"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 290,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2010:46:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:2"
									},
									"scope": 400,
									"src": "1980:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2355:242:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"scope": 361,
														"src": "2365:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"arguments": [
														{
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2432:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 340,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2412:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2419:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 336,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2388:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2388:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "2388:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 353,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2543:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2543:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 356,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 357,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2520:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2520:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2493:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:2"
											}
										]
									},
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2300:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 326,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2331:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2299:46:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 400,
									"src": "2269:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3050:681:2",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "3399:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"arguments": [
														{
															"id": 377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3453:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 374,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "3425:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 381,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3508:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "3504:221:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "3531:194:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 388,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3648:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 389,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:2",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 391,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 386,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3637:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3637:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 385,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 364,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "3023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3008:33:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:2"
									},
									"scope": 400,
									"src": "2980:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 401,
							"src": "629:3104:2"
						}
					],
					"src": "33:3700:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "793:311:3",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "990:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 406,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:3",
														"valueSize": 1
													},
													{
														"declaration": 412,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:3",
														"valueSize": 1
													}
												],
												"id": 414,
												"nodeType": "InlineAssembly",
												"src": "1012:61:3"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 415,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1089:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 410,
												"id": 418,
												"nodeType": "Return",
												"src": "1082:15:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "746:17:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "786:6:3"
									},
									"scope": 697,
									"src": "727:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2092:241:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 431,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2118:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 429,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2110:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2135:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2102:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:3"
											},
											{
												"assignments": [
													440,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "2187:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 441,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2205:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2205:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2227:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2040:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "2067:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2039:43:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:3"
									},
									"scope": 697,
									"src": "2021:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3164:84:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3194:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 464,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															491
														],
														"referencedDeclaration": 491,
														"src": "3181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "3174:67:3"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3113:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3096:35:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3150:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3149:14:3"
									},
									"scope": 697,
									"src": "3075:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3617:76:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 484,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3664:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3673:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "3634:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "3627:59:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3525:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3552:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:93:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "3603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3602:14:3"
									},
									"scope": 697,
									"src": "3470:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "4198:111:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4237:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4245:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "4215:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 502,
												"id": 509,
												"nodeType": "Return",
												"src": "4208:94:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4095:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:80:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "4184:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:14:3"
									},
									"scope": 697,
									"src": "4055:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4736:320:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4762:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4754:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4779:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 538,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "4856:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 537,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4845:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:3"
											},
											{
												"assignments": [
													544,
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4909:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 560,
														"src": "4923:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"arguments": [
														{
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 547,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "4950:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4969:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 555,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5024:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 557,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5036:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 554,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "4998:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 559,
												"nodeType": "Return",
												"src": "4991:58:3"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4621:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4671:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4587:116:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "4722:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4721:14:3"
									},
									"scope": 697,
									"src": "4557:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5333:97:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5369:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 571,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															613
														],
														"referencedDeclaration": 613,
														"src": "5350:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "5343:80:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5277:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5260:35:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "5319:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5318:14:3"
									},
									"scope": 697,
									"src": "5233:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5772:228:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 592,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 591,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "5790:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:3"
											},
											{
												"assignments": [
													598,
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5861:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 612,
														"src": "5875:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"arguments": [
														{
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5920:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 601,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5902:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5968:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 609,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5980:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 606,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5942:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 589,
												"id": 611,
												"nodeType": "Return",
												"src": "5935:58:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5651:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5675:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5702:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5641:93:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "5758:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5757:14:3"
									},
									"scope": 697,
									"src": "5614:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6276:101:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6314:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 623,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															665
														],
														"referencedDeclaration": 665,
														"src": "6293:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "6286:84:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6225:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6208:35:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "6262:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6261:14:3"
									},
									"scope": 697,
									"src": "6179:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6718:232:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 644,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 643,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6736:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:3"
											},
											{
												"assignments": [
													650,
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "6809:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 649,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"scope": 664,
														"src": "6823:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 651,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"arguments": [
														{
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 659,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 660,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "6918:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 661,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 658,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6892:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 663,
												"nodeType": "Return",
												"src": "6885:58:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6653:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6592:93:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "6704:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:14:3"
									},
									"scope": 697,
									"src": "6563:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7330:532:3",
										"statements": [
											{
												"condition": {
													"id": 677,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "7344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "7401:455:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 681,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7485:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "7793:53:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 688,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "7818:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 687,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7811:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 690,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:3"
																	}
																]
															},
															"id": 692,
															"nodeType": "IfStatement",
															"src": "7481:365:3",
															"trueBody": {
																"id": 686,
																"nodeType": "Block",
																"src": "7508:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 685,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7340:516:3",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "7353:42:3",
													"statements": [
														{
															"expression": {
																"id": 678,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 676,
															"id": 679,
															"nodeType": "Return",
															"src": "7367:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7205:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7227:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7260:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:97:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "7316:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7315:14:3"
									},
									"scope": 697,
									"src": "7170:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "135:7729:3"
						}
					],
					"src": "33:7832:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "67:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "658:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "675:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "675:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "668:17:4"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "649:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "648:9:4"
									},
									"scope": 719,
									"src": "596:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "765:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "782:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 713,
												"id": 716,
												"nodeType": "Return",
												"src": "775:15:4"
											}
										]
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "749:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:16:4"
									},
									"scope": 719,
									"src": "698:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "564:235:4"
						}
					],
					"src": "33:767:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 722,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 752,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 737,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 740,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 747,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 733,
													"id": 746,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 749,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 750,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 733,
												"id": 751,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 1106,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 765,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 772,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 764,
													"id": 771,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 774,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 777,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 764,
												"id": 778,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 780,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 1106,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 799,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 798,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 820,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 806,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 815,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 814,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 817,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 791,
												"id": 819,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 821,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 1106,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 838,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 832,
													"id": 839,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 832,
												"id": 846,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1106,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 859,
													"id": 866,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 859,
												"id": 873,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 1106,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 887,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 888,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 892,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 1106,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 918,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 919,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 921,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 1106,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 938,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 932,
													"id": 937,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 956,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 946,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 947,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"id": 954,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 955,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 1106,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 974,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 975,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 977,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 1106,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 997,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 999,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 1106,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1020,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1021,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1023,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 1106,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5669:103:5",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"arguments": [
														{
															"id": 1037,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5695:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1038,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5691:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:5"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"scope": 1056,
														"src": "5710:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"arguments": [
														{
															"id": 1044,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5726:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1043,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															1025
														],
														"referencedDeclaration": 923,
														"src": "5722:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1050,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1051,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5759:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1049,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	979,
																	1081
																],
																"referencedDeclaration": 979,
																"src": "5752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1053,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5763:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5748:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "5741:24:5"
											}
										]
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5614:22:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "5660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5659:9:5"
									},
									"scope": 1106,
									"src": "5601:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6524:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "6542:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1073,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6549:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6534:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1076,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1077,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "6583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1079,
												"nodeType": "Return",
												"src": "6572:12:5"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6442:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6453:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6464:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6441:50:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "6515:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6514:9:5"
									},
									"scope": 1106,
									"src": "6429:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "7332:67:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1094,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7350:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1097,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "7357:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7387:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "7391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1103,
												"nodeType": "Return",
												"src": "7380:12:5"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7250:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7261:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7272:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7249:50:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "7323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7322:9:5"
									},
									"scope": 1106,
									"src": "7237:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "630:6771:5"
						}
					],
					"src": "33:7368:5"
				},
				"id": 5
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TombGenesisRewardPool.sol",
					"exportedSymbols": {
						"Address": [
							697
						],
						"Context": [
							719
						],
						"IERC20": [
							187
						],
						"Operator": [
							2291
						],
						"Ownable": [
							109
						],
						"PolyGenesisRewardPool": [
							2180
						],
						"SafeERC20": [
							400
						],
						"SafeMath": [
							1106
						]
					},
					"id": 2181,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1109,
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 188,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1110,
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 401,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1111,
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 1107,
							"src": "195:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/owner/Operator.sol",
							"file": "../owner/Operator.sol",
							"id": 1112,
							"nodeType": "ImportDirective",
							"scope": 2181,
							"sourceUnit": 2292,
							"src": "254:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1113,
										"name": "Operator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2291,
										"src": "498:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operator_$2291",
											"typeString": "contract Operator"
										}
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "498:8:6"
								}
							],
							"contractDependencies": [
								109,
								719,
								2291
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2180,
							"linearizedBaseContracts": [
								2180,
								2291,
								109,
								719
							],
							"name": "PolyGenesisRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1117,
									"libraryName": {
										"id": 1115,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "520:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "514:27:6",
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "533:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1120,
									"libraryName": {
										"id": 1118,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "553:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$400",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "547:27:6",
									"typeName": {
										"id": 1119,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "567:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "PolyGenesisRewardPool.UserInfo",
									"id": 1125,
									"members": [
										{
											"constant": false,
											"id": 1122,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "636:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "636:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"scope": 1125,
											"src": "703:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "703:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2180,
									"src": "609:159:6",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyGenesisRewardPool.PoolInfo",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "830:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$187",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"id": 1126,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 187,
												"src": "830:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "886:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "886:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "988:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "accStonePerShare",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "1065:24:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1065:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"scope": 1136,
											"src": "1154:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1134,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1154:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2180,
									"src": "803:406:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e177bb38",
									"id": 1138,
									"mutability": "mutable",
									"name": "Poly",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1217:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$187",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1137,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "1217:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1141,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1271:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
										"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 1139,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1136,
											"src": "1271:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
												"typeString": "struct PolyGenesisRewardPool.PoolInfo"
											}
										},
										"id": 1140,
										"nodeType": "ArrayTypeName",
										"src": "1271:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage_ptr",
											"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1144,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1320:32:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1142,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1320:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1143,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1347:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1150,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1410:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1149,
										"keyType": {
											"id": 1145,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1418:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1410:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1148,
											"keyType": {
												"id": 1146,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1437:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1429:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
												"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo)"
											},
											"valueType": {
												"id": 1147,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1125,
												"src": "1448:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
													"typeString": "struct PolyGenesisRewardPool.UserInfo"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1153,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1571:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1151,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1571:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 1152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1604:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1155,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1656:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1154,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1656:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1157,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1733:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1156,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1733:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f7caf52",
									"id": 1160,
									"mutability": "mutable",
									"name": "PolyPerSecond",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1784:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1784:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e3039363435",
										"id": 1159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1815:13:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96450000000000000_by_1",
											"typeString": "int_const 96450000000000000"
										},
										"value": "0.09645"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1163,
									"mutability": "mutable",
									"name": "runningTime",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1871:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1161,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1871:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 1162,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1900:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "09cf6091",
									"id": 1166,
									"mutability": "constant",
									"name": "TOTAL_REWARDS",
									"nodeType": "VariableDeclaration",
									"scope": 2180,
									"src": "1923:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1164,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1923:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235303030",
										"id": 1165,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1963:11:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000000"
										},
										"value": "25000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1174,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2017:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2017:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2039:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "2060:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2016:59:6"
									},
									"src": "2003:73:6"
								},
								{
									"anonymous": false,
									"id": 1182,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2097:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1178,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2119:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2119:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1182,
												"src": "2140:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:59:6"
									},
									"src": "2082:74:6"
								},
								{
									"anonymous": false,
									"id": 1190,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1184,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2186:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2186:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2208:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1190,
												"src": "2229:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2229:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2185:59:6"
									},
									"src": "2162:83:6"
								},
								{
									"anonymous": false,
									"id": 1196,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1192,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2268:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2268:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "2290:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2267:38:6"
									},
									"src": "2251:55:6"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "2338:86:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2357:12:6",
															"subExpression": {
																"id": 1199,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1144,
																"src": "2358:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "47656e657369733a20616c726561647920696e697469616c697a6564",
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2371:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															},
															"value": "Genesis: already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															}
														],
														"id": 1198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2349:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2349:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "2349:53:6"
											},
											{
												"id": 1204,
												"nodeType": "PlaceholderStatement",
												"src": "2415:1:6"
											}
										]
									},
									"id": 1206,
									"name": "notInitialized",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2338:0:6"
									},
									"src": "2314:110:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "2534:37:6",
										"statements": [
											{
												"expression": {
													"id": 1211,
													"name": "initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1144,
													"src": "2552:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1212,
												"nodeType": "Return",
												"src": "2545:18:6"
											}
										]
									},
									"functionSelector": "392e53cd",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2504:2:6"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2528:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2528:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2527:6:6"
									},
									"scope": 2180,
									"src": "2482:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "2699:246:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1226,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2718:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2718:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1228,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1218,
																"src": "2736:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2718:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6c617465",
															"id": 1230,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2752:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2710:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2710:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "2710:49:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1233,
														"name": "_Poly",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "2774:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2791:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2783:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1234,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2783:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2783:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2774:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "2770:45:6",
												"trueBody": {
													"expression": {
														"id": 1243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1239,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2795:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"arguments": [
																{
																	"id": 1241,
																	"name": "_Poly",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1216,
																	"src": "2809:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1240,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2802:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2802:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"src": "2795:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$187",
															"typeString": "contract IERC20"
														}
													},
													"id": 1244,
													"nodeType": "ExpressionStatement",
													"src": "2795:20:6"
												}
											},
											{
												"expression": {
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1246,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "2826:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1247,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "2842:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2826:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "2826:30:6"
											},
											{
												"expression": {
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1250,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "2867:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1251,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "2881:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1252,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "2897:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2881:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2867:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1255,
												"nodeType": "ExpressionStatement",
												"src": "2867:41:6"
											},
											{
												"expression": {
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1256,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "2919:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1257,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2933:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2919:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "2919:18:6"
											}
										]
									},
									"functionSelector": "cd6dc687",
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1221,
											"modifierName": {
												"id": 1220,
												"name": "notInitialized",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1206,
												"src": "2671:14:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2671:14:6"
										},
										{
											"id": 1223,
											"modifierName": {
												"id": 1222,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2233,
												"src": "2686:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2686:12:6"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1216,
												"mutability": "mutable",
												"name": "_Poly",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2610:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2610:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "2634:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2599:64:6"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2699:0:6"
									},
									"scope": 2180,
									"src": "2579:366:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1293,
										"nodeType": "Block",
										"src": "3012:204:6",
										"statements": [
											{
												"assignments": [
													1267
												],
												"declarations": [
													{
														"constant": false,
														"id": 1267,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1293,
														"src": "3023:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1266,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3023:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"expression": {
														"id": 1268,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "3040:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3040:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3023:32:6"
											},
											{
												"body": {
													"id": 1291,
													"nodeType": "Block",
													"src": "3109:100:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 1287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 1282,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1141,
																					"src": "3132:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1284,
																				"indexExpression": {
																					"id": 1283,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1272,
																					"src": "3141:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3132:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1285,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1127,
																			"src": "3132:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1286,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1263,
																			"src": "3155:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "3132:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3163:33:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		},
																		"value": "PolyGenesisPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		}
																	],
																	"id": 1281,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3124:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3124:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1290,
															"nodeType": "ExpressionStatement",
															"src": "3124:73:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1275,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1272,
														"src": "3088:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1276,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "3094:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3088:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"initializationExpression": {
													"assignments": [
														1272
													],
													"declarations": [
														{
															"constant": false,
															"id": 1272,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1292,
															"src": "3071:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1271,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3071:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1274,
													"initialValue": {
														"hexValue": "30",
														"id": 1273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3085:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3071:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3102:5:6",
														"subExpression": {
															"id": 1278,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "3104:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1280,
													"nodeType": "ExpressionStatement",
													"src": "3102:5:6"
												},
												"nodeType": "ForStatement",
												"src": "3066:143:6"
											}
										]
									},
									"id": 1294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2983:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1262,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2983:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2982:15:6"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3012:0:6"
									},
									"scope": 2180,
									"src": "2955:261:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "3449:1122:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1308,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "3479:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														],
														"id": 1307,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "3460:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$187_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1310,
												"nodeType": "ExpressionStatement",
												"src": "3460:26:6"
											},
											{
												"condition": {
													"id": 1311,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1300,
													"src": "3501:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "3497:61:6",
												"trueBody": {
													"id": 1315,
													"nodeType": "Block",
													"src": "3514:44:6",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1312,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3529:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3529:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1314,
															"nodeType": "ExpressionStatement",
															"src": "3529:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1317,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3572:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3572:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1319,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1155,
														"src": "3590:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3572:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1356,
													"nodeType": "Block",
													"src": "3913:189:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1341,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "3964:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1342,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3983:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3964:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1347,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1344,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1302,
																		"src": "3988:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"expression": {
																			"id": 1345,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "4006:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "4006:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3988:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3964:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1355,
															"nodeType": "IfStatement",
															"src": "3960:131:6",
															"trueBody": {
																"id": 1354,
																"nodeType": "Block",
																"src": "4023:68:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1349,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "4042:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"expression": {
																					"id": 1350,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "4060:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1351,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "4060:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4042:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1353,
																		"nodeType": "ExpressionStatement",
																		"src": "4042:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1357,
												"nodeType": "IfStatement",
												"src": "3568:534:6",
												"trueBody": {
													"id": 1340,
													"nodeType": "Block",
													"src": "3605:302:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1321,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "3657:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3676:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3657:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1338,
																"nodeType": "Block",
																"src": "3751:145:6",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1331,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1329,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "3774:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1330,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "3792:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3774:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1337,
																		"nodeType": "IfStatement",
																		"src": "3770:111:6",
																		"trueBody": {
																			"id": 1336,
																			"nodeType": "Block",
																			"src": "3807:74:6",
																			"statements": [
																				{
																					"expression": {
																						"id": 1334,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 1332,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1302,
																							"src": "3830:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1333,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1155,
																							"src": "3848:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3830:31:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1335,
																					"nodeType": "ExpressionStatement",
																					"src": "3830:31:6"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1339,
															"nodeType": "IfStatement",
															"src": "3653:243:6",
															"trueBody": {
																"id": 1328,
																"nodeType": "Block",
																"src": "3679:66:6",
																"statements": [
																	{
																		"expression": {
																			"id": 1326,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1324,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1302,
																				"src": "3698:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1325,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1155,
																				"src": "3716:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3698:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1327,
																		"nodeType": "ExpressionStatement",
																		"src": "3698:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1359
												],
												"declarations": [
													{
														"constant": false,
														"id": 1359,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"scope": 1393,
														"src": "4112:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1358,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4112:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1360,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "4140:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1361,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "4159:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4140:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1363,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4139:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1364,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "4187:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1365,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4206:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4206:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4187:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1368,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4186:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4139:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4112:110:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1375,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "4279:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 1376,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1296,
																	"src": "4313:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1377,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1302,
																	"src": "4356:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4405:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"id": 1379,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1359,
																	"src": "4433:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1374,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "4247:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1136_storage_ptr_$",
																	"typeString": "type(struct PolyGenesisRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accStonePerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4247:212:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"id": 1371,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1141,
															"src": "4233:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4233:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1136_storage_$returns$__$",
															"typeString": "function (struct PolyGenesisRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4233:227:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4233:227:6"
											},
											{
												"condition": {
													"id": 1383,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1359,
													"src": "4475:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1392,
												"nodeType": "IfStatement",
												"src": "4471:93:6",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "4487:77:6",
													"statements": [
														{
															"expression": {
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1384,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4502:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1387,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "4540:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1385,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "4520:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4520:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4520:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4502:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1390,
															"nodeType": "ExpressionStatement",
															"src": "4502:50:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "96805e54",
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1305,
											"modifierName": {
												"id": 1304,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2233,
												"src": "3436:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3436:12:6"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3317:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3347:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1297,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3347:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3371:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3371:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "3398:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3306:122:6"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3449:0:6"
									},
									"scope": 2180,
									"src": "3294:1277:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "4735:285:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1403,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "4746:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1405,
												"nodeType": "ExpressionStatement",
												"src": "4746:17:6"
											},
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1433,
														"src": "4774:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1406,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "4774:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1411,
												"initialValue": {
													"baseExpression": {
														"id": 1408,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "4798:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1410,
													"indexExpression": {
														"id": 1409,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1396,
														"src": "4807:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4798:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4774:38:6"
											},
											{
												"condition": {
													"expression": {
														"id": 1412,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "4827:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1135,
													"src": "4827:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "4823:150:6",
												"trueBody": {
													"id": 1425,
													"nodeType": "Block",
													"src": "4843:130:6",
													"statements": [
														{
															"expression": {
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1414,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "4858:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1421,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1398,
																			"src": "4935:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1417,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1407,
																						"src": "4896:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																							"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1418,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1129,
																					"src": "4896:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1415,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1153,
																					"src": "4876:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1416,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "4876:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4876:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4876:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4876:85:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4858:103:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1424,
															"nodeType": "ExpressionStatement",
															"src": "4858:103:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1427,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "4983:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "4983:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1430,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1398,
														"src": "5001:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4983:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1432,
												"nodeType": "ExpressionStatement",
												"src": "4983:29:6"
											}
										]
									},
									"functionSelector": "1ab06ee5",
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1401,
											"modifierName": {
												"id": 1400,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2233,
												"src": "4722:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4722:12:6"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4680:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4680:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "4694:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4694:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4679:35:6"
									},
									"returnParameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4735:0:6"
									},
									"scope": 2180,
									"src": "4667:353:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1507,
										"nodeType": "Block",
										"src": "5191:559:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1443,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1436,
														"src": "5206:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1444,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "5219:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5206:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1448,
												"nodeType": "IfStatement",
												"src": "5202:34:6",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5235:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1442,
													"id": 1447,
													"nodeType": "Return",
													"src": "5228:8:6"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1449,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1438,
														"src": "5251:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 1450,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "5262:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5251:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1505,
													"nodeType": "Block",
													"src": "5516:227:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1479,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1438,
																	"src": "5535:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1480,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "5546:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5535:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1484,
															"nodeType": "IfStatement",
															"src": "5531:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1482,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5568:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1442,
																"id": 1483,
																"nodeType": "Return",
																"src": "5561:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1485,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "5588:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1486,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "5601:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5588:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1496,
															"nodeType": "IfStatement",
															"src": "5584:84:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1493,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "5654:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1490,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "5635:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1488,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1438,
																					"src": "5623:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1489,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5623:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5623:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5623:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1494,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5623:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1442,
																"id": 1495,
																"nodeType": "Return",
																"src": "5616:52:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1502,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "5717:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1499,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "5702:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1497,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1438,
																				"src": "5690:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1498,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5690:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1500,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5690:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5690:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5690:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1442,
															"id": 1504,
															"nodeType": "Return",
															"src": "5683:48:6"
														}
													]
												},
												"id": 1506,
												"nodeType": "IfStatement",
												"src": "5247:496:6",
												"trueBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "5275:235:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1452,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "5294:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1453,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "5307:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5294:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1457,
															"nodeType": "IfStatement",
															"src": "5290:38:6",
															"trueBody": {
																"expression": {
																	"hexValue": "30",
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5327:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1442,
																"id": 1456,
																"nodeType": "Return",
																"src": "5320:8:6"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1458,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1436,
																	"src": "5347:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1459,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1155,
																	"src": "5360:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5347:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1469,
															"nodeType": "IfStatement",
															"src": "5343:88:6",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1466,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1160,
																			"src": "5417:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1463,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "5398:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1461,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "5382:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1462,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5382:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5382:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5382:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5382:49:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1442,
																"id": 1468,
																"nodeType": "Return",
																"src": "5375:56:6"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1475,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1160,
																		"src": "5484:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1472,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1436,
																				"src": "5469:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1470,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1157,
																				"src": "5453:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1471,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5453:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5453:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5453:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5453:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1442,
															"id": 1477,
															"nodeType": "Return",
															"src": "5446:52:6"
														}
													]
												}
											}
										]
									},
									"functionSelector": "231f0c6a",
									"id": 1508,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1436,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5125:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5125:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5144:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:36:6"
									},
									"returnParameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1508,
												"src": "5182:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5182:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5181:9:6"
									},
									"scope": 2180,
									"src": "5097:653:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "5896:694:6",
										"statements": [
											{
												"assignments": [
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "5907:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1517,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "5907:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1522,
												"initialValue": {
													"baseExpression": {
														"id": 1519,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "5931:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1521,
													"indexExpression": {
														"id": 1520,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1510,
														"src": "5940:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5931:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5907:38:6"
											},
											{
												"assignments": [
													1524
												],
												"declarations": [
													{
														"constant": false,
														"id": 1524,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "5956:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1523,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "5956:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1525,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "5980:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1527,
														"indexExpression": {
															"id": 1526,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "5989:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5980:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1529,
													"indexExpression": {
														"id": 1528,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "5995:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5980:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5956:45:6"
											},
											{
												"assignments": [
													1532
												],
												"declarations": [
													{
														"constant": false,
														"id": 1532,
														"mutability": "mutable",
														"name": "accStonePerShare",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "6012:24:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6012:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"expression": {
														"id": 1533,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1518,
														"src": "6039:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accStonePerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1133,
													"src": "6039:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6012:48:6"
											},
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1604,
														"src": "6071:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1536,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6071:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1546,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1543,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6122:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6114:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1541,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6114:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6114:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1538,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "6093:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1539,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "6093:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "6093:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6093:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6071:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1551,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1547,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "6143:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "6143:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"expression": {
																"id": 1549,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "6161:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1550,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "6161:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6143:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1552,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "6184:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6199:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6184:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6143:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1590,
												"nodeType": "IfStatement",
												"src": "6139:362:6",
												"trueBody": {
													"id": 1589,
													"nodeType": "Block",
													"src": "6202:299:6",
													"statements": [
														{
															"assignments": [
																1557
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1557,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1589,
																	"src": "6217:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1556,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6217:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1564,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1559,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1518,
																			"src": "6263:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1560,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "6263:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1561,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "6284:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "6284:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1558,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "6244:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6244:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6217:83:6"
														},
														{
															"assignments": [
																1566
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1566,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1589,
																	"src": "6315:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1565,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6315:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1575,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1573,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "6379:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1569,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1518,
																					"src": "6358:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1570,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "6358:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1567,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1557,
																				"src": "6337:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "6337:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6337:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "6337:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6337:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6315:80:6"
														},
														{
															"expression": {
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1576,
																	"name": "accStonePerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1532,
																	"src": "6410:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1584,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1537,
																					"src": "6476:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1581,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6466:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1579,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1566,
																							"src": "6450:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1580,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "6450:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1582,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6450:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "6450:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6450:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1577,
																			"name": "accStonePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "6429:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "6429:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6429:60:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6410:79:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1588,
															"nodeType": "ExpressionStatement",
															"src": "6410:79:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1600,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "6566:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "6566:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6556:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1594,
																			"name": "accStonePerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1532,
																			"src": "6534:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1591,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1524,
																				"src": "6518:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1592,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "6518:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1593,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "6518:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6518:33:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "6518:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6518:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "6518:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6518:64:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1603,
												"nodeType": "Return",
												"src": "6511:71:6"
											}
										]
									},
									"functionSelector": "ecf4deb9",
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingStone",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5835:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5835:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5849:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5849:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5834:29:6"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "5887:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5887:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5886:9:6"
									},
									"scope": 2180,
									"src": "5813:777:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1629,
										"nodeType": "Block",
										"src": "6707:146:6",
										"statements": [
											{
												"assignments": [
													1609
												],
												"declarations": [
													{
														"constant": false,
														"id": 1609,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"scope": 1629,
														"src": "6718:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1608,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6718:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1612,
												"initialValue": {
													"expression": {
														"id": 1610,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "6735:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6735:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6718:32:6"
											},
											{
												"body": {
													"id": 1627,
													"nodeType": "Block",
													"src": "6804:42:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1624,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "6830:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1623,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1741,
																	"src": "6819:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6819:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1626,
															"nodeType": "ExpressionStatement",
															"src": "6819:15:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1617,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1614,
														"src": "6783:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1618,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "6789:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6783:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1628,
												"initializationExpression": {
													"assignments": [
														1614
													],
													"declarations": [
														{
															"constant": false,
															"id": 1614,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"scope": 1628,
															"src": "6766:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1613,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6766:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1616,
													"initialValue": {
														"hexValue": "30",
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6780:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6766:15:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6797:5:6",
														"subExpression": {
															"id": 1620,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6799:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1622,
													"nodeType": "ExpressionStatement",
													"src": "6797:5:6"
												},
												"nodeType": "ForStatement",
												"src": "6761:85:6"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 1630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6697:2:6"
									},
									"returnParameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6707:0:6"
									},
									"scope": 2180,
									"src": "6673:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "6970:869:6",
										"statements": [
											{
												"assignments": [
													1636
												],
												"declarations": [
													{
														"constant": false,
														"id": 1636,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "6981:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1635,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "6981:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1640,
												"initialValue": {
													"baseExpression": {
														"id": 1637,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "7005:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1639,
													"indexExpression": {
														"id": 1638,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1632,
														"src": "7014:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7005:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6981:38:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1641,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7034:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 1643,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "7053:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7053:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7034:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1648,
												"nodeType": "IfStatement",
												"src": "7030:77:6",
												"trueBody": {
													"id": 1647,
													"nodeType": "Block",
													"src": "7074:33:6",
													"statements": [
														{
															"functionReturnParameters": 1634,
															"id": 1646,
															"nodeType": "Return",
															"src": "7089:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1650
												],
												"declarations": [
													{
														"constant": false,
														"id": 1650,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"scope": 1740,
														"src": "7117:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1649,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1659,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1656,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7168:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7160:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1654,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7160:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7160:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 1651,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1636,
																"src": "7139:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1652,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "7139:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "7139:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7139:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7117:57:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1660,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1650,
														"src": "7189:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7204:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7189:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"nodeType": "IfStatement",
												"src": "7185:107:6",
												"trueBody": {
													"id": 1671,
													"nodeType": "Block",
													"src": "7207:85:6",
													"statements": [
														{
															"expression": {
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1663,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "7222:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "7222:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1666,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7244:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7244:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7222:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1669,
															"nodeType": "ExpressionStatement",
															"src": "7222:37:6"
														},
														{
															"functionReturnParameters": 1634,
															"id": 1670,
															"nodeType": "Return",
															"src": "7274:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7306:15:6",
													"subExpression": {
														"expression": {
															"id": 1673,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "7307:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1674,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "7307:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1691,
												"nodeType": "IfStatement",
												"src": "7302:138:6",
												"trueBody": {
													"id": 1690,
													"nodeType": "Block",
													"src": "7323:117:6",
													"statements": [
														{
															"expression": {
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1676,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "7338:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "7338:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7338:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1681,
															"nodeType": "ExpressionStatement",
															"src": "7338:21:6"
														},
														{
															"expression": {
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1682,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "7374:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1685,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1636,
																				"src": "7412:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1129,
																			"src": "7412:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1683,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1153,
																			"src": "7392:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7392:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7392:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7374:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1689,
															"nodeType": "ExpressionStatement",
															"src": "7374:54:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1692,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "7454:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7472:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7454:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1732,
												"nodeType": "IfStatement",
												"src": "7450:334:6",
												"trueBody": {
													"id": 1731,
													"nodeType": "Block",
													"src": "7475:309:6",
													"statements": [
														{
															"assignments": [
																1696
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1696,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1731,
																	"src": "7490:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1695,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7490:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1703,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1698,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1636,
																			"src": "7536:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1699,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "7536:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1700,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7557:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7557:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1697,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "7517:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7517:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7490:83:6"
														},
														{
															"assignments": [
																1705
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1705,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"scope": 1731,
																	"src": "7588:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1704,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7588:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1714,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1712,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1153,
																		"src": "7652:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1708,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1636,
																					"src": "7631:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1709,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "7631:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1706,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1696,
																				"src": "7610:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "7610:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7610:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "7610:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7610:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7588:80:6"
														},
														{
															"expression": {
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1715,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1636,
																		"src": "7683:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1717,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accStonePerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "7683:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1726,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1650,
																					"src": "7759:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653138",
																							"id": 1723,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7749:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"id": 1721,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1705,
																							"src": "7733:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "7733:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1724,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7733:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1725,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "7733:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7733:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1718,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1636,
																				"src": "7707:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1719,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accStonePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "7707:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7707:25:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7707:65:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7683:89:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1730,
															"nodeType": "ExpressionStatement",
															"src": "7683:89:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1733,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1636,
															"src": "7794:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1735,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7794:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1736,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7816:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7816:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7794:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1739,
												"nodeType": "ExpressionStatement",
												"src": "7794:37:6"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "6949:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6949:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6948:14:6"
									},
									"returnParameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6970:0:6"
									},
									"scope": 2180,
									"src": "6929:910:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "7931:1026:6",
										"statements": [
											{
												"assignments": [
													1749
												],
												"declarations": [
													{
														"constant": false,
														"id": 1749,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "7942:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1748,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7942:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"expression": {
														"id": 1750,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7960:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7960:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7942:28:6"
											},
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "_before",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "7981:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7981:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1759,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "323030",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8012:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															},
															"value": "200"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_200_by_1",
																"typeString": "int_const 200"
															}
														],
														"expression": {
															"id": 1755,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "7999:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1756,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ceil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1057,
														"src": "7999:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7999:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7981:35:6"
											},
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "_after",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "8027:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8027:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1769,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "3130303030",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8065:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "323030",
																	"id": 1764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8056:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	},
																	"value": "200"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	}
																],
																"expression": {
																	"id": 1762,
																	"name": "_before",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "8044:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "8044:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8044:16:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 979,
														"src": "8044:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8044:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8027:44:6"
											},
											{
												"assignments": [
													1771
												],
												"declarations": [
													{
														"constant": false,
														"id": 1771,
														"mutability": "mutable",
														"name": "_fixedAmount",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "8082:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8082:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1776,
												"initialValue": {
													"arguments": [
														{
															"id": 1774,
															"name": "_after",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1761,
															"src": "8117:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1772,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "8105:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "8105:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8105:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8082:42:6"
											},
											{
												"assignments": [
													1778
												],
												"declarations": [
													{
														"constant": false,
														"id": 1778,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "8137:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1777,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "8137:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"baseExpression": {
														"id": 1779,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "8161:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1781,
													"indexExpression": {
														"id": 1780,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "8170:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8161:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8137:38:6"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 1889,
														"src": "8186:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1783,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "8186:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1785,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "8210:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1787,
														"indexExpression": {
															"id": 1786,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "8219:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8210:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1789,
													"indexExpression": {
														"id": 1788,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1749,
														"src": "8225:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8210:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8186:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1792,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "8255:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1791,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "8244:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8244:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1794,
												"nodeType": "ExpressionStatement",
												"src": "8244:16:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1795,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "8277:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1796,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "8277:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1797,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8291:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8277:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1831,
												"nodeType": "IfStatement",
												"src": "8273:291:6",
												"trueBody": {
													"id": 1830,
													"nodeType": "Block",
													"src": "8294:270:6",
													"statements": [
														{
															"assignments": [
																1800
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1800,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"scope": 1830,
																	"src": "8309:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1799,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8309:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1814,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1811,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "8381:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1124,
																		"src": "8381:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653138",
																				"id": 1808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8371:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 1804,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1778,
																							"src": "8344:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1805,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accStonePerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1133,
																						"src": "8344:21:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"expression": {
																							"id": 1801,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1784,
																							"src": "8328:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1802,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1122,
																						"src": "8328:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 957,
																					"src": "8328:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1806,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8328:38:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 979,
																			"src": "8328:42:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8328:48:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "8328:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8328:69:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8309:88:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1815,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "8416:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1816,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8427:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8416:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1829,
															"nodeType": "IfStatement",
															"src": "8412:141:6",
															"trueBody": {
																"id": 1828,
																"nodeType": "Block",
																"src": "8430:123:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1819,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1749,
																					"src": "8466:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1820,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1800,
																					"src": "8475:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1818,
																				"name": "safePolyTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2102,
																				"src": "8449:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1821,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8449:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1822,
																		"nodeType": "ExpressionStatement",
																		"src": "8449:35:6"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1824,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1749,
																					"src": "8519:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1825,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1800,
																					"src": "8528:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1823,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "8508:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1826,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8508:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1827,
																		"nodeType": "EmitStatement",
																		"src": "8503:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1832,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1745,
														"src": "8578:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8588:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8578:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1868,
												"nodeType": "IfStatement",
												"src": "8574:252:6",
												"trueBody": {
													"id": 1867,
													"nodeType": "Block",
													"src": "8591:235:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1840,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1749,
																		"src": "8634:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1843,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8651:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			],
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8643:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1841,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8643:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1844,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8643:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1845,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "8658:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1835,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "8606:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8606:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "8606:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8606:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1847,
															"nodeType": "ExpressionStatement",
															"src": "8606:60:6"
														},
														{
															"expression": {
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1848,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1784,
																		"src": "8681:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "8681:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1854,
																			"name": "_fixedAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1771,
																			"src": "8711:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1851,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "8695:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1852,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8695:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "8695:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8695:29:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8681:43:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1857,
															"nodeType": "ExpressionStatement",
															"src": "8681:43:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"hexValue": "307830316643376632433831616344394433386564344435303962314631373535354535343945463144",
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8763:42:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"value": "0x01fC7f2C81acD9D38ed4D509b1F17555E549EF1D"
																	},
																	{
																		"id": 1864,
																		"name": "_after",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "8807:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1858,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "8739:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1861,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8739:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "8739:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8739:75:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1866,
															"nodeType": "ExpressionStatement",
															"src": "8739:75:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1869,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1784,
															"src": "8836:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "8836:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8897:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1875,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1778,
																			"src": "8870:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accStonePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "8870:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1872,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "8854:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "8854:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1874,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "8854:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8854:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "8854:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8854:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8836:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1882,
												"nodeType": "ExpressionStatement",
												"src": "8836:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1884,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "8926:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1885,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "8935:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1886,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1745,
															"src": "8941:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1883,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "8918:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "EmitStatement",
												"src": "8913:36:6"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "7893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "7907:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7907:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7892:31:6"
									},
									"returnParameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7931:0:6"
									},
									"scope": 2180,
									"src": "7876:1081:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2003,
										"nodeType": "Block",
										"src": "9049:756:6",
										"statements": [
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "9060:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1897,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9060:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1901,
												"initialValue": {
													"expression": {
														"id": 1899,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "9078:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "9078:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9060:28:6"
											},
											{
												"assignments": [
													1903
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "9099:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 1902,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "9099:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1907,
												"initialValue": {
													"baseExpression": {
														"id": 1904,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "9123:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1906,
													"indexExpression": {
														"id": 1905,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1892,
														"src": "9132:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9123:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9099:38:6"
											},
											{
												"assignments": [
													1909
												],
												"declarations": [
													{
														"constant": false,
														"id": 1909,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "9148:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 1908,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "9148:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1915,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1910,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "9172:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1912,
														"indexExpression": {
															"id": 1911,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "9181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9172:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1914,
													"indexExpression": {
														"id": 1913,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1898,
														"src": "9187:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9172:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9148:47:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1917,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1909,
																	"src": "9214:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																		"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1918,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1122,
																"src": "9214:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1919,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "9229:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9214:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9238:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1916,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9206:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9206:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "9206:53:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1925,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "9281:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1924,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1741,
														"src": "9270:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9270:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "9270:16:6"
											},
											{
												"assignments": [
													1929
												],
												"declarations": [
													{
														"constant": false,
														"id": 1929,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"scope": 2003,
														"src": "9297:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1928,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9297:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1943,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1940,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1909,
																"src": "9369:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1941,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "9369:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9359:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1933,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1903,
																				"src": "9332:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1934,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accStonePerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "9332:21:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1930,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1909,
																				"src": "9316:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1931,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9316:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1932,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "9316:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1935,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9316:38:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "9316:42:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9316:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1939,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "9316:52:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9316:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9297:88:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1944,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1929,
														"src": "9400:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9411:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9400:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "9396:129:6",
												"trueBody": {
													"id": 1957,
													"nodeType": "Block",
													"src": "9414:111:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1948,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "9446:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1949,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "9455:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1947,
																	"name": "safePolyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "9429:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9429:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1951,
															"nodeType": "ExpressionStatement",
															"src": "9429:35:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1953,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "9495:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1954,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1929,
																		"src": "9504:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1952,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "9484:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9484:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1956,
															"nodeType": "EmitStatement",
															"src": "9479:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1959,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "9539:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1960,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9549:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9539:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1982,
												"nodeType": "IfStatement",
												"src": "9535:138:6",
												"trueBody": {
													"id": 1981,
													"nodeType": "Block",
													"src": "9552:121:6",
													"statements": [
														{
															"expression": {
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1962,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1909,
																		"src": "9567:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1964,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "9567:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1968,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1894,
																			"src": "9597:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1965,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1909,
																				"src": "9581:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9581:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 923,
																		"src": "9581:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1969,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9581:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9567:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1971,
															"nodeType": "ExpressionStatement",
															"src": "9567:38:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1977,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "9644:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1978,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "9653:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1972,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "9620:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1975,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "9620:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1976,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "9620:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9620:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1980,
															"nodeType": "ExpressionStatement",
															"src": "9620:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1983,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "9683:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "9683:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653138",
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9744:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1989,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1903,
																			"src": "9717:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1990,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accStonePerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "9717:21:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1986,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1909,
																			"src": "9701:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1987,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "9701:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1988,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "9701:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9701:38:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "9701:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9701:48:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9683:66:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1996,
												"nodeType": "ExpressionStatement",
												"src": "9683:66:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1998,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "9774:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1999,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "9783:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2000,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "9789:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1997,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1182,
														"src": "9765:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9765:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2002,
												"nodeType": "EmitStatement",
												"src": "9760:37:6"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 2004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "9011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9011:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2004,
												"src": "9025:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9025:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9010:31:6"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9049:0:6"
									},
									"scope": 2180,
									"src": "8993:812:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2058,
										"nodeType": "Block",
										"src": "9924:329:6",
										"statements": [
											{
												"assignments": [
													2010
												],
												"declarations": [
													{
														"constant": false,
														"id": 2010,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2058,
														"src": "9935:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"id": 2009,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "9935:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2014,
												"initialValue": {
													"baseExpression": {
														"id": 2011,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "9959:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2013,
													"indexExpression": {
														"id": 2012,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2006,
														"src": "9968:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9959:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9935:38:6"
											},
											{
												"assignments": [
													2016
												],
												"declarations": [
													{
														"constant": false,
														"id": 2016,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"scope": 2058,
														"src": "9984:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"id": 2015,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "9984:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2023,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 2017,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1150,
															"src": "10008:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2019,
														"indexExpression": {
															"id": 2018,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "10017:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10008:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2022,
													"indexExpression": {
														"expression": {
															"id": 2020,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "10023:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "10023:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10008:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9984:50:6"
											},
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"scope": 2058,
														"src": "10045:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2024,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10045:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2028,
												"initialValue": {
													"expression": {
														"id": 2026,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2016,
														"src": "10063:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
														}
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1122,
													"src": "10063:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10045:29:6"
											},
											{
												"expression": {
													"id": 2033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2029,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "10085:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2031,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "10085:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2032,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10099:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10085:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2034,
												"nodeType": "ExpressionStatement",
												"src": "10085:15:6"
											},
											{
												"expression": {
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2035,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2016,
															"src": "10111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2037,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "10111:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10129:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10111:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2040,
												"nodeType": "ExpressionStatement",
												"src": "10111:19:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2046,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10165:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10165:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2048,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "10177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 2041,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2010,
																"src": "10141:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "10141:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "10141:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10141:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2050,
												"nodeType": "ExpressionStatement",
												"src": "10141:44:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2052,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10219:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10219:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2054,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2006,
															"src": "10231:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2055,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "10237:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2051,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1190,
														"src": "10201:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10201:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2057,
												"nodeType": "EmitStatement",
												"src": "10196:49:6"
											}
										]
									},
									"functionSelector": "5312ea8e",
									"id": 2059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2006,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"scope": 2059,
												"src": "9903:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9903:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9902:14:6"
									},
									"returnParameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9924:0:6"
									},
									"scope": 2180,
									"src": "9876:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2101,
										"nodeType": "Block",
										"src": "10432:300:6",
										"statements": [
											{
												"assignments": [
													2067
												],
												"declarations": [
													{
														"constant": false,
														"id": 2067,
														"mutability": "mutable",
														"name": "_PolyBalance",
														"nodeType": "VariableDeclaration",
														"scope": 2101,
														"src": "10443:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10443:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2075,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2072,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "10489:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2180",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10481:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2070,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10481:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10481:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2068,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "10466:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "10466:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10466:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10443:52:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2076,
														"name": "_PolyBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2067,
														"src": "10510:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2077,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10525:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10510:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2100,
												"nodeType": "IfStatement",
												"src": "10506:219:6",
												"trueBody": {
													"id": 2099,
													"nodeType": "Block",
													"src": "10528:197:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2079,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "10547:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2080,
																	"name": "_PolyBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2067,
																	"src": "10557:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10547:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2097,
																"nodeType": "Block",
																"src": "10648:66:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2093,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2061,
																					"src": "10685:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2094,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2063,
																					"src": "10690:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2090,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10667:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2092,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10667:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10667:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2096,
																		"nodeType": "ExpressionStatement",
																		"src": "10667:31:6"
																	}
																]
															},
															"id": 2098,
															"nodeType": "IfStatement",
															"src": "10543:171:6",
															"trueBody": {
																"id": 2089,
																"nodeType": "Block",
																"src": "10571:71:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2085,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2061,
																					"src": "10608:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2086,
																					"name": "_PolyBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2067,
																					"src": "10613:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2082,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10590:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2084,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10590:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2087,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10590:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2088,
																		"nodeType": "ExpressionStatement",
																		"src": "10590:36:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"id": 2102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePolyTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "10393:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10393:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 2102,
												"src": "10406:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10406:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10392:30:6"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10432:0:6"
									},
									"scope": 2180,
									"src": "10367:365:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "10805:49:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2110,
															"name": "_Newoperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "10833:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2109,
														"name": "transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2256,
														"src": "10816:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10816:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "10816:30:6"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2107,
											"modifierName": {
												"id": 2106,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2233,
												"src": "10792:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10792:12:6"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "_Newoperator",
												"nodeType": "VariableDeclaration",
												"scope": 2114,
												"src": "10761:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10761:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10760:22:6"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10805:0:6"
									},
									"scope": 2180,
									"src": "10740:114:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2178,
										"nodeType": "Block",
										"src": "10965:501:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2125,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "10980:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "10980:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2127,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "10998:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "3930",
															"id": 2128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11012:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"src": "10998:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10980:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "10976:441:6",
												"trueBody": {
													"id": 2169,
													"nodeType": "Block",
													"src": "11021:396:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 2134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2132,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2116,
																			"src": "11144:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 2133,
																			"name": "Poly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "11154:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "11144:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506f6c79",
																		"id": 2135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11160:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		},
																		"value": "Poly"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		}
																	],
																	"id": 2131,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "11136:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11136:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2137,
															"nodeType": "ExpressionStatement",
															"src": "11136:31:6"
														},
														{
															"assignments": [
																2139
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2139,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"scope": 2169,
																	"src": "11182:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2138,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11182:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2142,
															"initialValue": {
																"expression": {
																	"id": 2140,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "11199:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																		"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "11199:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11182:32:6"
														},
														{
															"body": {
																"id": 2167,
																"nodeType": "Block",
																"src": "11272:134:6",
																"statements": [
																	{
																		"assignments": [
																			2154
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2154,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"scope": 2167,
																				"src": "11291:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"id": 2153,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1136,
																					"src": "11291:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2158,
																		"initialValue": {
																			"baseExpression": {
																				"id": 2155,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1141,
																				"src": "11315:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2157,
																			"indexExpression": {
																				"id": 2156,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2144,
																				"src": "11324:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11315:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11291:37:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					},
																					"id": 2163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2160,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2116,
																						"src": "11355:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"id": 2161,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2154,
																							"src": "11365:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2162,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1127,
																						"src": "11365:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "11355:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 2164,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11377:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 2159,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "11347:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2165,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11347:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2166,
																		"nodeType": "ExpressionStatement",
																		"src": "11347:43:6"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2147,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2144,
																	"src": "11251:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2148,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2139,
																	"src": "11257:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11251:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2168,
															"initializationExpression": {
																"assignments": [
																	2144
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2144,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"scope": 2168,
																		"src": "11234:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2143,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11234:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2146,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11248:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11234:15:6"
															},
															"loopExpression": {
																"expression": {
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "11265:5:6",
																	"subExpression": {
																		"id": 2150,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2144,
																		"src": "11267:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2152,
																"nodeType": "ExpressionStatement",
																"src": "11265:5:6"
															},
															"nodeType": "ForStatement",
															"src": "11229:177:6"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2174,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "11447:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2175,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "11451:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2171,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "11427:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "11427:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11427:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2177,
												"nodeType": "ExpressionStatement",
												"src": "11427:31:6"
											}
										]
									},
									"functionSelector": "54575af4",
									"id": 2179,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2123,
											"modifierName": {
												"id": 2122,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2233,
												"src": "10952:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10952:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "10900:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 2115,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "10900:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "10915:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2179,
												"src": "10931:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10899:43:6"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10965:0:6"
									},
									"scope": 2180,
									"src": "10862:604:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2181,
							"src": "464:11005:6"
						}
					],
					"src": "35:11438:6"
				},
				"id": 6
			},
			"contracts/owner/Operator.sol": {
				"ast": {
					"absolutePath": "contracts/owner/Operator.sol",
					"exportedSymbols": {
						"Context": [
							719
						],
						"Operator": [
							2291
						],
						"Ownable": [
							109
						]
					},
					"id": 2292,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2182,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2183,
							"nodeType": "ImportDirective",
							"scope": 2292,
							"sourceUnit": 110,
							"src": "70:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2184,
							"nodeType": "ImportDirective",
							"scope": 2292,
							"sourceUnit": 720,
							"src": "124:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2185,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "209:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 2186,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:7"
								},
								{
									"baseName": {
										"id": 2187,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "218:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 2188,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:7"
								}
							],
							"contractDependencies": [
								109,
								719
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2291,
							"linearizedBaseContracts": [
								2291,
								109,
								719
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2190,
									"mutability": "mutable",
									"name": "_operator",
									"nodeType": "VariableDeclaration",
									"scope": 2291,
									"src": "233:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2189,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 2196,
									"name": "OperatorTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2192,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "303:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2194,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nodeType": "VariableDeclaration",
												"scope": 2196,
												"src": "346:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "292:88:7"
									},
									"src": "267:114:7"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "412:101:7",
										"statements": [
											{
												"expression": {
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2199,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2200,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "435:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2203,
												"nodeType": "ExpressionStatement",
												"src": "423:24:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2206,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2205,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2209,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2190,
															"src": "495:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2204,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2211,
												"nodeType": "EmitStatement",
												"src": "458:47:7"
											}
										]
									},
									"id": 2213,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:7"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:7"
									},
									"scope": 2291,
									"src": "389:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2220,
										"nodeType": "Block",
										"src": "571:35:7",
										"statements": [
											{
												"expression": {
													"id": 2218,
													"name": "_operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2190,
													"src": "589:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2217,
												"id": 2219,
												"nodeType": "Return",
												"src": "582:16:7"
											}
										]
									},
									"functionSelector": "570ca735",
									"id": 2221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:7"
									},
									"returnParameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2216,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2221,
												"src": "562:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:9:7"
									},
									"scope": 2291,
									"src": "521:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2232,
										"nodeType": "Block",
										"src": "638:140:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2224,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2190,
																"src": "671:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2225,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "684:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "671:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:38:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															},
															"value": "operator: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															}
														],
														"id": 2223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "649:109:7"
											},
											{
												"id": 2231,
												"nodeType": "PlaceholderStatement",
												"src": "769:1:7"
											}
										]
									},
									"id": 2233,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:7"
									},
									"src": "614:164:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2243,
										"nodeType": "Block",
										"src": "835:51:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2238,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "853:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 2240,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2237,
												"id": 2242,
												"nodeType": "Return",
												"src": "846:32:7"
											}
										]
									},
									"functionSelector": "4456eda2",
									"id": 2244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:7"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2244,
												"src": "829:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "828:6:7"
									},
									"scope": 2291,
									"src": "786:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "959:50:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2252,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2251,
														"name": "_transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2290,
														"src": "970:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2254,
												"nodeType": "ExpressionStatement",
												"src": "970:31:7"
											}
										]
									},
									"functionSelector": "29605e77",
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2249,
											"modifierName": {
												"id": 2248,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "949:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "949:9:7"
										}
									],
									"name": "transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2246,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "920:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2245,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "919:22:7"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:7"
									},
									"scope": 2291,
									"src": "894:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2289,
										"nodeType": "Block",
										"src": "1075:286:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2262,
																"name": "newOperator_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2258,
																"src": "1108:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1124:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2263,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1124:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 2266,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1124:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1108:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
															"id": 2268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															},
															"value": "operator: zero address given for new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															}
														],
														"id": 2261,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1086:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2270,
												"nodeType": "ExpressionStatement",
												"src": "1086:121:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2274,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1251:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2272,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 2276,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "1255:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2271,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "1223:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2278,
												"nodeType": "EmitStatement",
												"src": "1218:50:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2282,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2258,
															"src": "1305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2279,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$109_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "1279:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2284,
												"nodeType": "ExpressionStatement",
												"src": "1279:39:7"
											},
											{
												"expression": {
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2285,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2190,
														"src": "1329:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2286,
														"name": "newOperator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2258,
														"src": "1341:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1329:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2288,
												"nodeType": "ExpressionStatement",
												"src": "1329:24:7"
											}
										]
									},
									"id": 2290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOperator",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2258,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"scope": 2290,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:22:7"
									},
									"returnParameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:7"
									},
									"scope": 2291,
									"src": "1017:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2292,
							"src": "179:1185:7"
						}
					],
					"src": "35:1331:7"
				},
				"id": 7
			}
		}
	}
}