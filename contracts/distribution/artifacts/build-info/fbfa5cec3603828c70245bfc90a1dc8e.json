{
	"id": "fbfa5cec3603828c70245bfc90a1dc8e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TombRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n// Note that this pool has no minter key of TOMB (rewards).\r\n// Instead, the governance will call TOMB distributeReward method and send reward to this pool at the beginning.\r\ncontract TombRewardPool {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // governance\r\n    address public operator;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many LP tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. TOMBs to distribute in the pool.\r\n        uint256 lastRewardTime; // Last time that TOMBs distribution occurred.\r\n        uint256 accTombPerShare; // Accumulated TOMBs per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardTime has passed\r\n    }\r\n\r\n    IERC20 public tomb;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when TOMB mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    uint256[] public epochTotalRewards = [80000 ether, 60000 ether];\r\n\r\n    // Time when each epoch ends.\r\n    uint256[3] public epochEndTimes;\r\n\r\n    // Reward per second for each of 2 epochs (last item is equal to 0 - for sanity).\r\n    uint256[3] public epochTombPerSecond;\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    constructor(address _tomb, uint256 _poolStartTime) public {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_tomb != address(0)) tomb = IERC20(_tomb);\r\n\r\n        poolStartTime = _poolStartTime;\r\n\r\n        epochEndTimes[0] = poolStartTime + 4 days; // Day 2-5\r\n        epochEndTimes[1] = epochEndTimes[0] + 5 days; // Day 6-10\r\n\r\n        epochTombPerSecond[0] = epochTotalRewards[0].div(4 days);\r\n        epochTombPerSecond[1] = epochTotalRewards[1].div(5 days);\r\n\r\n        epochTombPerSecond[2] = 0;\r\n        operator = msg.sender;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(operator == msg.sender, \"TombRewardPool: caller is not the operator\");\r\n        _;\r\n    }\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"TombRewardPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new token to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted = (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accTombPerShare: 0, isStarted: _isStarted}));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's TOMB allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(_allocPoint);\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _fromTime to _toTime.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        for (uint8 epochId = 2; epochId >= 1; --epochId) {\r\n            if (_toTime >= epochEndTimes[epochId - 1]) {\r\n                if (_fromTime >= epochEndTimes[epochId - 1]) {\r\n                    return _toTime.sub(_fromTime).mul(epochTombPerSecond[epochId]);\r\n                }\r\n\r\n                uint256 _generatedReward = _toTime.sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]);\r\n                if (epochId == 1) {\r\n                    return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0]));\r\n                }\r\n                for (epochId = epochId - 1; epochId >= 1; --epochId) {\r\n                    if (_fromTime >= epochEndTimes[epochId - 1]) {\r\n                        return _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochTombPerSecond[epochId]));\r\n                    }\r\n                    _generatedReward = _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]));\r\n                }\r\n                return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0]));\r\n            }\r\n        }\r\n        return _toTime.sub(_fromTime).mul(epochTombPerSecond[0]);\r\n    }\r\n\r\n    // View function to see pending TOMBs on frontend.\r\n    function pendingTOMB(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accTombPerShare = pool.accTombPerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accTombPerShare = accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accTombPerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accTombPerShare = pool.accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safeTombTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accTombPerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safeTombTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accTombPerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe tomb transfer function, just in case if rounding error causes pool to not have enough TOMBs.\r\n    function safeTombTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _tombBal = tomb.balanceOf(address(this));\r\n        if (_tombBal > 0) {\r\n            if (_amount > _tombBal) {\r\n                tomb.safeTransfer(_to, _tombBal);\r\n            } else {\r\n                tomb.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setOperator(address _operator) external onlyOperator {\r\n        operator = _operator;\r\n    }\r\n\r\n    function governanceRecoverUnsupported(\r\n        IERC20 _token,\r\n        uint256 amount,\r\n        address to\r\n    ) external onlyOperator {\r\n        if (block.timestamp < epochEndTimes[1] + 30 days) {\r\n            // do not allow to drain token if less than 30 days after farming\r\n            require(_token != tomb, \"!tomb\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"!pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209dccbaac0918a3e225ec2308a7212359aec7fbbb8894f6b23bd27f64386ec49064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dccbaac0918a3e225ec2308a7212359aec7fbbb8894f6b23bd27f64386ec49064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xCC 0xBA 0xAC MULMOD XOR LOG3 0xE2 0x25 0xEC 0x23 ADDMOD 0xA7 0x21 0x23 MSIZE 0xAE 0xC7 0xFB 0xBB DUP9 SWAP5 0xF6 0xB2 EXTCODESIZE 0xD2 PUSH32 0x64386EC49064736F6C634300060C003300000000000000000000000000000000 ",
							"sourceMap": "629:3104:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209dccbaac0918a3e225ec2308a7212359aec7fbbb8894f6b23bd27f64386ec49064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP14 0xCC 0xBA 0xAC MULMOD XOR LOG3 0xE2 0x25 0xEC 0x23 ADDMOD 0xA7 0x21 0x23 MSIZE 0xAE 0xC7 0xFB 0xBB DUP9 SWAP5 0xF6 0xB2 EXTCODESIZE 0xD2 PUSH32 0x64386EC49064736F6C634300060C003300000000000000000000000000000000 ",
							"sourceMap": "629:3104:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209dccbaac0918a3e225ec2308a7212359aec7fbbb8894f6b23bd27f64386ec49064736f6c634300060c0033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122042b616609a915f0855a7b4996bf17e72ba0ef52703d4719495e3ed1de775445e64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042b616609a915f0855a7b4996bf17e72ba0ef52703d4719495e3ed1de775445e64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB6 AND PUSH1 0x9A SWAP2 0x5F ADDMOD SSTORE 0xA7 0xB4 SWAP10 PUSH12 0xF17E72BA0EF52703D4719495 0xE3 0xED SAR 0xE7 PUSH22 0x445E64736F6C634300060C0033000000000000000000 ",
							"sourceMap": "135:7729:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042b616609a915f0855a7b4996bf17e72ba0ef52703d4719495e3ed1de775445e64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB6 AND PUSH1 0x9A SWAP2 0x5F ADDMOD SSTORE 0xA7 0xB4 SWAP10 PUSH12 0xF17E72BA0EF52703D4719495 0xE3 0xED SAR 0xE7 PUSH22 0x445E64736F6C634300060C0033000000000000000000 ",
							"sourceMap": "135:7729:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122042b616609a915f0855a7b4996bf17e72ba0ef52703d4719495e3ed1de775445e64736f6c634300060c0033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e29a4c2f81d95a0236af165504cd53791bfc1a980edfdde07af9b47a60c47e0964736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e29a4c2f81d95a0236af165504cd53791bfc1a980edfdde07af9b47a60c47e0964736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP11 0x4C 0x2F DUP2 0xD9 GAS MUL CALLDATASIZE 0xAF AND SSTORE DIV 0xCD MSTORE8 PUSH26 0x1BFC1A980EDFDDE07AF9B47A60C47E0964736F6C634300060C00 CALLER ",
							"sourceMap": "630:6771:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e29a4c2f81d95a0236af165504cd53791bfc1a980edfdde07af9b47a60c47e0964736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE2 SWAP11 0x4C 0x2F DUP2 0xD9 GAS MUL CALLDATASIZE 0xAF AND SSTORE DIV 0xCD MSTORE8 PUSH26 0x1BFC1A980EDFDDE07AF9B47A60C47E0964736F6C634300060C00 CALLER ",
							"sourceMap": "630:6771:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e29a4c2f81d95a0236af165504cd53791bfc1a980edfdde07af9b47a60c47e0964736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TombRewardPool.sol": {
				"TombRewardPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tomb",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochEndTimes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochTombPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "epochTotalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingTOMB",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accTombPerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tomb",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TombRewardPool.sol\":1566:1567  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":1533:1567  uint256 public totalAllocPoint = 0 */\n  0x04\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  0xc0\n    /* \"contracts/distribution/TombRewardPool.sol\":431:11739  contract TombRewardPool {\r... */\n  0x40\n    /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  mstore\n    /* \"contracts/distribution/TombRewardPool.sol\":1693:1704  80000 ether */\n  0x10f0cf064dd592000000\n    /* \"contracts/distribution/TombRewardPool.sol\":431:11739  contract TombRewardPool {\r... */\n  0x80\n    /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  swap1\n  dup2\n  mstore\n    /* \"contracts/distribution/TombRewardPool.sol\":1706:1717  60000 ether */\n  0x0cb49b44ba602d800000\n    /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n  0xa0\n  mstore\n  tag_1\n  swap1\n  0x06\n  swap1\n  0x02\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2245:2808  constructor(address _tomb, uint256 _poolStartTime) public {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  pop\n  dup1\n  mload\n  0x20\n  swap1\n  swap2\n  add\n  mload\n    /* \"contracts/distribution/TombRewardPool.sol\":2322:2337  block.timestamp */\n  timestamp\n    /* \"contracts/distribution/TombRewardPool.sol\":2322:2354  block.timestamp < _poolStartTime */\n  dup2\n  gt\n    /* \"contracts/distribution/TombRewardPool.sol\":2314:2363  require(block.timestamp < _poolStartTime, \"late\") */\n  tag_7\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup1\n  dup4\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  0x24\n  dup3\n  add\n  mstore\n  shl(0xe0, 0x6c617465)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_7:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/distribution/TombRewardPool.sol\":2378:2397  _tomb != address(0) */\n  dup3\n  and\n  iszero\n    /* \"contracts/distribution/TombRewardPool.sol\":2374:2419  if (_tomb != address(0)) tomb = IERC20(_tomb) */\n  tag_8\n  jumpi\n    /* \"contracts/distribution/TombRewardPool.sol\":2399:2403  tomb */\n  0x01\n    /* \"contracts/distribution/TombRewardPool.sol\":2399:2419  tomb = IERC20(_tomb) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup5\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2374:2419  if (_tomb != address(0)) tomb = IERC20(_tomb) */\ntag_8:\n    /* \"contracts/distribution/TombRewardPool.sol\":2432:2445  poolStartTime */\n  0x05\n    /* \"contracts/distribution/TombRewardPool.sol\":2432:2462  poolStartTime = _poolStartTime */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2510:2516  4 days */\n  0x054600\n    /* \"contracts/distribution/TombRewardPool.sol\":2494:2516  poolStartTime + 4 days */\n  dup1\n  dup3\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2475:2488  epochEndTimes */\n  0x07\n    /* \"contracts/distribution/TombRewardPool.sol\":2475:2516  epochEndTimes[0] = poolStartTime + 4 days */\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2557:2582  epochEndTimes[0] + 5 days */\n  0x0bdd80\n  dup3\n  add\n    /* \"contracts/distribution/TombRewardPool.sol\":2538:2554  epochEndTimes[1] */\n  0x08\n    /* \"contracts/distribution/TombRewardPool.sol\":2538:2582  epochEndTimes[1] = epochEndTimes[0] + 5 days */\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2648  epochTotalRewards */\n  0x06\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2651  epochTotalRewards[0] */\n  dup1\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2663  epochTotalRewards[0].div(4 days) */\n  tag_15\n  swap3\n    /* \"contracts/distribution/TombRewardPool.sol\":2510:2516  4 days */\n  swap2\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2648  epochTotalRewards */\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2489:2490  0 */\n  0x00\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2651  epochTotalRewards[0] */\n  tag_16\n  jumpi\n  invalid\ntag_16:\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2655  epochTotalRewards[0].div */\n  or(tag_0_81, shl(0x20, tag_18))\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2631:2663  epochTotalRewards[0].div(4 days) */\n  swap2\n  swap1\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/distribution/TombRewardPool.sol\":2607:2625  epochTombPerSecond */\n  0x0a\n    /* \"contracts/distribution/TombRewardPool.sol\":2607:2663  epochTombPerSecond[0] = epochTotalRewards[0].div(4 days) */\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2698:2715  epochTotalRewards */\n  0x06\n    /* \"contracts/distribution/TombRewardPool.sol\":2698:2718  epochTotalRewards[1] */\n  dup1\n  sload\n    /* \"contracts/distribution/TombRewardPool.sol\":2698:2730  epochTotalRewards[1].div(5 days) */\n  tag_21\n  swap2\n    /* \"contracts/distribution/TombRewardPool.sol\":2723:2729  5 days */\n  0x069780\n  swap2\n    /* \"contracts/distribution/TombRewardPool.sol\":2716:2717  1 */\n  0x01\n  swap1\n    /* \"contracts/distribution/TombRewardPool.sol\":2698:2718  epochTotalRewards[1] */\n  dup2\n  lt\n  tag_16\n  jumpi\n  invalid\n    /* \"contracts/distribution/TombRewardPool.sol\":2698:2730  epochTotalRewards[1].div(5 days) */\ntag_21:\n    /* \"contracts/distribution/TombRewardPool.sol\":2674:2695  epochTombPerSecond[1] */\n  0x0b\n    /* \"contracts/distribution/TombRewardPool.sol\":2674:2730  epochTombPerSecond[1] = epochTotalRewards[1].div(5 days) */\n  sstore\n  pop\n  pop\n    /* \"contracts/distribution/TombRewardPool.sol\":2767:2768  0 */\n  0x00\n    /* \"contracts/distribution/TombRewardPool.sol\":2743:2764  epochTombPerSecond[2] */\n  0x0c\n    /* \"contracts/distribution/TombRewardPool.sol\":2743:2768  epochTombPerSecond[2] = 0 */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":2779:2800  operator = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/distribution/TombRewardPool.sol\":2790:2800  msg.sender */\n  caller\n    /* \"contracts/distribution/TombRewardPool.sol\":2779:2800  operator = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"contracts/distribution/TombRewardPool.sol\":431:11739  contract TombRewardPool {\r... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n  0x00\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n  dup1\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n  dup3\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n  gt\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n  tag_30\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x1a\n  0x24\n  dup3\n  add\n  mstore\n  0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_30:\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n  dup2\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n  dup4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n  dup2\n  tag_31\n  jumpi\n  invalid\ntag_31:\n  div\n  swap4\n    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/distribution/TombRewardPool.sol\":431:11739  contract TombRewardPool {\r... */\ntag_2:\n  dup3\n  dup1\n  sload\n  dup3\n  dup3\n  sstore\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_34\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_33:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_34\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  sub(shl(0x50, 0x01), 0x01)\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_33)\ntag_34:\n  pop\n  tag_35\n  swap3\n  swap2\n  pop\n  tag_36\n  jump\t// in\ntag_35:\n  pop\n  swap1\n  jump\t// out\ntag_36:\ntag_37:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_35\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_37)\ntag_28:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TombRewardPool.sol\":431:11739  contract TombRewardPool {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x630b5ba1\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x9a25cefc\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x9a25cefc\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xb89e73c1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc040f23a\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x630b5ba1\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x7704d44e\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x89744bb4\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x96805e54\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x51eb05a6\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5f96dc11\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_25:\n      dup1\n      0x1526fe27\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TombRewardPool.sol\":1288:1314  PoolInfo[] public poolInfo */\n    tag_3:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      calldataload\n      tag_28\n      jump\t// in\n    tag_26:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap7\n      and\n      dup7\n      mstore\n      0x20\n      dup7\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      dup5\n      dup5\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      0x60\n      dup5\n      add\n      mstore\n      iszero\n      iszero\n      0x80\n      dup4\n      add\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0xa0\n      add\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1533:1567  uint256 public totalAllocPoint = 0 */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":4563:4884  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_5:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n    tag_31:\n      stop\n        /* \"contracts/distribution/TombRewardPool.sol\":4963:6295  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_6:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_36\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":9274:10084  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_7:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_39\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":7469:8377  function updatePool(uint256 _pid) public {\r... */\n    tag_8:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      calldataload\n      tag_42\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":10155:10532  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_9:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":11112:11736  function governanceRecoverUnsupported(\r... */\n    tag_10:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      0x40\n      swap1\n      swap2\n      add\n      calldataload\n      and\n      tag_48\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":549:572  address public operator */\n    tag_11:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":1618:1646  uint256 public poolStartTime */\n    tag_12:\n      tag_29\n      tag_52\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":7213:7393  function massUpdatePools() public {\r... */\n    tag_13:\n      tag_31\n      tag_54\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1889:1925  uint256[3] public epochTombPerSecond */\n    tag_14:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      calldataload\n      tag_57\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":6359:7130  function pendingTOMB(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_15:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_60\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1372:1436  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_16:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_63\n      jump\t// in\n    tag_61:\n      0x40\n      dup1\n      mload\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      return\n        /* \"contracts/distribution/TombRewardPool.sol\":3294:4467  function add(\r... */\n    tag_17:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      dup1\n      calldataload\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      0x20\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x60\n      add\n      calldataload\n      tag_66\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n    tag_18:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      calldataload\n      tag_69\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":11003:11104  function setOperator(address _operator) external onlyOperator {\r... */\n    tag_19:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_72\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1762:1793  uint256[3] public epochEndTimes */\n    tag_20:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      calldataload\n      tag_75\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1234:1252  IERC20 public tomb */\n    tag_21:\n      tag_49\n      tag_77\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":8412:9238  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_22:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_79\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_79:\n      pop\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      calldataload\n      tag_80\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":1288:1314  PoolInfo[] public poolInfo */\n    tag_28:\n      0x02\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_82\n      jumpi\n      invalid\n    tag_82:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      swap1\n      swap5\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      pop\n      swap1\n      swap3\n      swap1\n      swap2\n      0xff\n      and\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1533:1567  uint256 public totalAllocPoint = 0 */\n    tag_30:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":4563:4884  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_33:\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2867  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2881  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2881  operator == msg.sender */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":2851:2928  require(operator == msg.sender, \"TombRewardPool: caller is not the operator\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/distribution/TombRewardPool.sol\":4642:4659  massUpdatePools() */\n      tag_87\n        /* \"contracts/distribution/TombRewardPool.sol\":4642:4657  massUpdatePools */\n      tag_54\n        /* \"contracts/distribution/TombRewardPool.sol\":4642:4659  massUpdatePools() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/distribution/TombRewardPool.sol\":4670:4691  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4702  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":4703:4707  _pid */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4708  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4723:4737  pool.isStarted */\n      0x04\n      dup2\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":4694:4708  poolInfo[_pid] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4723:4737  pool.isStarted */\n      0xff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":4719:4837  if (pool.isStarted) {\r... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4825  totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      tag_91\n        /* \"contracts/distribution/TombRewardPool.sol\":4813:4824  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4808  totalAllocPoint.sub(pool.allocPoint) */\n      tag_92\n        /* \"contracts/distribution/TombRewardPool.sol\":4792:4796  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":4792:4807  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4787  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4791  totalAllocPoint.sub */\n      tag_93\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4808  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_92:\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4812  totalAllocPoint.sub(pool.allocPoint).add */\n      swap1\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":4772:4825  totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/distribution/TombRewardPool.sol\":4754:4769  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":4754:4825  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(_allocPoint) */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":4719:4837  if (pool.isStarted) {\r... */\n    tag_90:\n        /* \"contracts/distribution/TombRewardPool.sol\":4847:4862  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":4847:4876  pool.allocPoint = _allocPoint */\n      sstore\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4563:4884  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":4963:6295  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_36:\n        /* \"contracts/distribution/TombRewardPool.sol\":5048:5055  uint256 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5089:5090  2 */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":5068:6221  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n    tag_96:\n        /* \"contracts/distribution/TombRewardPool.sol\":5103:5104  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5092:5099  epochId */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":5092:5104  epochId >= 1 */\n      0xff\n      and\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5068:6221  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n      tag_97\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5147:5160  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5171:5172  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5161:5168  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5161:5172  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5147:5173  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_99\n      jumpi\n      invalid\n    tag_99:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5136:5143  _toTime */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":5136:5173  _toTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5132:6210  if (_toTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_101\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5211:5224  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5235:5236  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5225:5232  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5225:5236  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5211:5237  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_102\n      jumpi\n      invalid\n    tag_102:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5198:5207  _fromTime */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":5198:5237  _fromTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5194:5344  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_104\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5324  _toTime.sub(_fromTime).mul(epochTombPerSecond[epochId]) */\n      tag_105\n        /* \"contracts/distribution/TombRewardPool.sol\":5296:5314  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":5315:5322  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5296:5323  epochTombPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5291  _toTime.sub(_fromTime) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5276  _toTime */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":5281:5290  _fromTime */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5280  _toTime.sub */\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5291  _toTime.sub(_fromTime) */\n      jump\t// in\n    tag_108:\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5295  _toTime.sub(_fromTime).mul */\n      swap1\n      tag_109\n        /* \"contracts/distribution/TombRewardPool.sol\":5269:5324  _toTime.sub(_fromTime).mul(epochTombPerSecond[epochId]) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/distribution/TombRewardPool.sol\":5262:5324  return _toTime.sub(_fromTime).mul(epochTombPerSecond[epochId]) */\n      swap2\n      pop\n      pop\n      jump(tag_95)\n        /* \"contracts/distribution/TombRewardPool.sol\":5194:5344  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_104:\n        /* \"contracts/distribution/TombRewardPool.sol\":5364:5388  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5463  _toTime.sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]) */\n      tag_110\n        /* \"contracts/distribution/TombRewardPool.sol\":5435:5453  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":5454:5461  epochId */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":5435:5462  epochTombPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_111\n      jumpi\n      invalid\n    tag_111:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5430  _toTime.sub(epochEndTimes[epochId - 1]) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":5403:5416  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5427:5428  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5417:5424  epochId */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":5417:5428  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5403:5429  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_114\n      jumpi\n      invalid\n    tag_114:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5398  _toTime */\n      dup8\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5402  _toTime.sub */\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5430  _toTime.sub(epochEndTimes[epochId - 1]) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":5391:5463  _toTime.sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]) */\n    tag_110:\n        /* \"contracts/distribution/TombRewardPool.sol\":5364:5463  uint256 _generatedReward = _toTime.sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5486:5493  epochId */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":5486:5498  epochId == 1 */\n      0xff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":5497:5498  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5486:5498  epochId == 1 */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":5482:5630  if (epochId == 1) {\r... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5530:5610  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0])) */\n      tag_117\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5609  epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0]) */\n      tag_118\n        /* \"contracts/distribution/TombRewardPool.sol\":5587:5605  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":5606:5607  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5587:5608  epochTombPerSecond[0] */\n    tag_119:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5582  epochEndTimes[0].sub(_fromTime) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":5572:5581  _fromTime */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5564  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5565:5566  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5567  epochEndTimes[0] */\n    tag_122:\n      add\n      sload\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5571  epochEndTimes[0].sub */\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5582  epochEndTimes[0].sub(_fromTime) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":5551:5609  epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0]) */\n    tag_118:\n        /* \"contracts/distribution/TombRewardPool.sol\":5530:5546  _generatedReward */\n      dup3\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":5530:5550  _generatedReward.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":5530:5610  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0])) */\n      jump\t// in\n    tag_117:\n        /* \"contracts/distribution/TombRewardPool.sol\":5523:5610  return _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0])) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_95)\n        /* \"contracts/distribution/TombRewardPool.sol\":5482:5630  if (epochId == 1) {\r... */\n    tag_116:\n        /* \"contracts/distribution/TombRewardPool.sol\":5673:5674  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5663:5670  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5663:5674  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5653:5674  epochId = epochId - 1 */\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5648:6089  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n    tag_124:\n        /* \"contracts/distribution/TombRewardPool.sol\":5687:5688  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5676:5683  epochId */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":5676:5688  epochId >= 1 */\n      0xff\n      and\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5648:6089  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n      tag_125\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5741:5754  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5765:5766  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":5755:5762  epochId */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":5755:5766  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":5741:5767  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_127\n      jumpi\n      invalid\n    tag_127:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5728:5737  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":5728:5767  _fromTime >= epochEndTimes[epochId - 1] */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":5724:5919  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n      tag_129\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":5803:5895  _generatedReward.add(epochEndTimes[epochId].sub(_fromTime).mul(epochTombPerSecond[epochId])) */\n      tag_117\n        /* \"contracts/distribution/TombRewardPool.sol\":5824:5894  epochEndTimes[epochId].sub(_fromTime).mul(epochTombPerSecond[epochId]) */\n      tag_118\n        /* \"contracts/distribution/TombRewardPool.sol\":5866:5884  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":5885:5892  epochId */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":5866:5893  epochTombPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_132\n      jumpi\n      invalid\n    tag_132:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5824:5861  epochEndTimes[epochId].sub(_fromTime) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":5851:5860  _fromTime */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":5824:5837  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5838:5845  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5824:5846  epochEndTimes[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n        /* \"contracts/distribution/TombRewardPool.sol\":5724:5919  if (_fromTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_129:\n        /* \"contracts/distribution/TombRewardPool.sol\":5960:6069  _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId])) */\n      tag_137\n        /* \"contracts/distribution/TombRewardPool.sol\":5981:6068  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId]) */\n      tag_118\n        /* \"contracts/distribution/TombRewardPool.sol\":6040:6058  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":6059:6066  epochId */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6040:6067  epochTombPerSecond[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_139\n      jumpi\n      invalid\n    tag_139:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5981:6035  epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":6008:6021  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":6032:6033  1 */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":6022:6029  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":6022:6033  epochId - 1 */\n      sub\n        /* \"contracts/distribution/TombRewardPool.sol\":6008:6034  epochEndTimes[epochId - 1] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_142\n      jumpi\n      invalid\n    tag_142:\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":5981:5994  epochEndTimes */\n      0x07\n        /* \"contracts/distribution/TombRewardPool.sol\":5995:6002  epochId */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":5981:6003  epochEndTimes[epochId] */\n      0xff\n      and\n      0x03\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n        /* \"contracts/distribution/TombRewardPool.sol\":5960:6069  _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId])) */\n    tag_137:\n      not(0x00)\n        /* \"contracts/distribution/TombRewardPool.sol\":5690:5699  --epochId */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":5941:6069  _generatedReward = _generatedReward.add(epochEndTimes[epochId].sub(epochEndTimes[epochId - 1]).mul(epochTombPerSecond[epochId])) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":5648:6089  for (epochId = epochId - 1; epochId >= 1; --epochId) {\r... */\n      jump(tag_124)\n    tag_125:\n        /* \"contracts/distribution/TombRewardPool.sol\":6114:6194  _generatedReward.add(epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0])) */\n      tag_117\n        /* \"contracts/distribution/TombRewardPool.sol\":6135:6193  epochEndTimes[0].sub(_fromTime).mul(epochTombPerSecond[0]) */\n      tag_118\n        /* \"contracts/distribution/TombRewardPool.sol\":6171:6189  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":6190:6191  0 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6171:6192  epochTombPerSecond[0] */\n      jump(tag_119)\n        /* \"contracts/distribution/TombRewardPool.sol\":5132:6210  if (_toTime >= epochEndTimes[epochId - 1]) {\r... */\n    tag_101:\n      not(0x00)\n        /* \"contracts/distribution/TombRewardPool.sol\":5106:5115  --epochId */\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":5068:6221  for (uint8 epochId = 2; epochId >= 1; --epochId) {\r... */\n      jump(tag_96)\n    tag_97:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6265:6283  epochTombPerSecond */\n      0x0a\n        /* \"contracts/distribution/TombRewardPool.sol\":6265:6286  epochTombPerSecond[0] */\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6287  _toTime.sub(_fromTime).mul(epochTombPerSecond[0]) */\n      tag_153\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6260  _toTime.sub(_fromTime) */\n      tag_108\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6245  _toTime */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6250:6259  _fromTime */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6249  _toTime.sub */\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6260  _toTime.sub(_fromTime) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":6238:6287  _toTime.sub(_fromTime).mul(epochTombPerSecond[0]) */\n    tag_153:\n        /* \"contracts/distribution/TombRewardPool.sol\":6231:6287  return _toTime.sub(_fromTime).mul(epochTombPerSecond[0]) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4963:6295  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_95:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":9274:10084  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_39:\n        /* \"contracts/distribution/TombRewardPool.sol\":9341:9356  address _sender */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9359:9369  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":9341:9369  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9380:9401  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9404:9412  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":9413:9417  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9404:9418  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":9453:9467  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":9453:9461  userInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":9453:9467  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":9453:9476  userInfo[_pid][_sender] */\n      dup9\n      and\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":9495:9506  user.amount */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9404:9418  poolInfo[_pid] */\n      0x05\n      swap1\n      swap3\n      mul\n      swap1\n      swap3\n      add\n      swap3\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9495:9517  user.amount >= _amount */\n      dup5\n      gt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":9487:9540  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_160\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x1dda5d1a191c985dce881b9bdd0819dbdbd9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/distribution/TombRewardPool.sol\":9551:9567  updatePool(_pid) */\n      tag_161\n        /* \"contracts/distribution/TombRewardPool.sol\":9562:9566  _pid */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9551:9561  updatePool */\n      tag_42\n        /* \"contracts/distribution/TombRewardPool.sol\":9551:9567  updatePool(_pid) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/distribution/TombRewardPool.sol\":9578:9594  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9665  user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_162\n        /* \"contracts/distribution/TombRewardPool.sol\":9649:9653  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9649:9664  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9644  user.amount.mul(pool.accTombPerShare).div(1e18) */\n      tag_163\n        /* \"contracts/distribution/TombRewardPool.sol\":9639:9643  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9634  user.amount.mul(pool.accTombPerShare) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":9613:9617  pool */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9613:9633  pool.accTombPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9601  user */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9608  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9612  user.amount.mul */\n      tag_109\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9634  user.amount.mul(pool.accTombPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9638  user.amount.mul(pool.accTombPerShare).div */\n      swap1\n      tag_81\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9644  user.amount.mul(pool.accTombPerShare).div(1e18) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9648  user.amount.mul(pool.accTombPerShare).div(1e18).sub */\n      swap1\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":9597:9665  user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      jump\t// in\n    tag_162:\n        /* \"contracts/distribution/TombRewardPool.sol\":9578:9665  uint256 _pending = user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":9680:9692  _pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":9676:9805  if (_pending > 0) {\r... */\n      tag_165\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":9709:9744  safeTombTransfer(_sender, _pending) */\n      tag_166\n        /* \"contracts/distribution/TombRewardPool.sol\":9726:9733  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9735:9743  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":9709:9725  safeTombTransfer */\n      tag_167\n        /* \"contracts/distribution/TombRewardPool.sol\":9709:9744  safeTombTransfer(_sender, _pending) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/distribution/TombRewardPool.sol\":9764:9793  RewardPaid(_sender, _pending) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap2\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/distribution/TombRewardPool.sol\":9676:9805  if (_pending > 0) {\r... */\n    tag_165:\n        /* \"contracts/distribution/TombRewardPool.sol\":9819:9830  _amount > 0 */\n      dup5\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":9815:9953  if (_amount > 0) {\r... */\n      tag_170\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":9861:9872  user.amount */\n      dup2\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9861:9885  user.amount.sub(_amount) */\n      tag_169\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9877:9884  _amount */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":9861:9876  user.amount.sub */\n      tag_93\n        /* \"contracts/distribution/TombRewardPool.sol\":9861:9885  user.amount.sub(_amount) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/distribution/TombRewardPool.sol\":9847:9885  user.amount = user.amount.sub(_amount) */\n      dup3\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9910  pool.token */\n      dup3\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9941  pool.token.safeTransfer(_sender, _amount) */\n      tag_170\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9910  pool.token */\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":9924:9931  _sender */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9933:9940  _amount */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9923  pool.token.safeTransfer */\n      tag_171\n        /* \"contracts/distribution/TombRewardPool.sol\":9900:9941  pool.token.safeTransfer(_sender, _amount) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/distribution/TombRewardPool.sol\":9997:10017  pool.accTombPerShare */\n      0x03\n      dup4\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:9992  user.amount */\n      dup3\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:10028  user.amount.mul(pool.accTombPerShare).div(1e18) */\n      tag_172\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10023:10027  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:10018  user.amount.mul(pool.accTombPerShare) */\n      tag_164\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:9996  user.amount.mul */\n      tag_109\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:10018  user.amount.mul(pool.accTombPerShare) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":9981:10028  user.amount.mul(pool.accTombPerShare).div(1e18) */\n    tag_172:\n        /* \"contracts/distribution/TombRewardPool.sol\":9963:9978  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":9963:10028  user.rewardDebt = user.amount.mul(pool.accTombPerShare).div(1e18) */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":10044:10076  Withdraw(_sender, _pid, _amount) */\n      0x40\n      dup1\n      mload\n      dup7\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":10062:10066  _pid */\n      dup8\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10044:10076  Withdraw(_sender, _pid, _amount) */\n      dup8\n      and\n      swap2\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":9274:10084  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":7469:8377  function updatePool(uint256 _pid) public {\r... */\n    tag_42:\n        /* \"contracts/distribution/TombRewardPool.sol\":7521:7542  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7545:7553  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":7554:7558  _pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":7545:7559  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_175\n      jumpi\n      invalid\n    tag_175:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7521:7559  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7593:7597  pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":7593:7612  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7574:7589  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":7574:7612  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":7570:7647  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_177\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7629:7636  return; */\n      pop\n      jump(tag_174)\n        /* \"contracts/distribution/TombRewardPool.sol\":7570:7647  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_177:\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7689  pool.token */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7714  pool.token.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":7708:7712  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7714  pool.token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":7657:7676  uint256 tokenSupply */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7689  pool.token */\n      and\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7699  pool.token.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7714  pool.token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7689  pool.token */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":7679:7714  pool.token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_180\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_180:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7729:7745  tokenSupply == 0 */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":7725:7832  if (tokenSupply == 0) {\r... */\n      tag_182\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7784:7799  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":7762:7781  pool.lastRewardTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7762:7799  pool.lastRewardTime = block.timestamp */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":7814:7821  return; */\n      jump(tag_174)\n        /* \"contracts/distribution/TombRewardPool.sol\":7725:7832  if (tokenSupply == 0) {\r... */\n    tag_182:\n        /* \"contracts/distribution/TombRewardPool.sol\":7847:7861  pool.isStarted */\n      0x04\n      dup3\n      add\n      sload\n      0xff\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":7842:7980  if (!pool.isStarted) {\r... */\n      tag_183\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7878:7892  pool.isStarted */\n      0x04\n      dup1\n      dup4\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7878:7899  pool.isStarted = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":7895:7899  true */\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":7878:7899  pool.isStarted = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":7952:7967  pool.allocPoint */\n      dup4\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7932:7947  totalAllocPoint */\n      swap1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7932:7968  totalAllocPoint.add(pool.allocPoint) */\n      tag_184\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":7932:7951  totalAllocPoint.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":7932:7968  totalAllocPoint.add(pool.allocPoint) */\n      jump\t// in\n    tag_184:\n        /* \"contracts/distribution/TombRewardPool.sol\":7914:7929  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":7914:7968  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":7842:7980  if (!pool.isStarted) {\r... */\n    tag_183:\n        /* \"contracts/distribution/TombRewardPool.sol\":7994:8009  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TombRewardPool.sol\":7994:8013  totalAllocPoint > 0 */\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":7990:8322  if (totalAllocPoint > 0) {\r... */\n      tag_185\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8030:8054  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8057:8113  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_186\n        /* \"contracts/distribution/TombRewardPool.sol\":8076:8080  pool */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":8076:8095  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8097:8112  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":8057:8075  getGeneratedReward */\n      tag_36\n        /* \"contracts/distribution/TombRewardPool.sol\":8057:8113  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_186:\n        /* \"contracts/distribution/TombRewardPool.sol\":8030:8113  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8128:8147  uint256 _tombReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8208  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_187\n        /* \"contracts/distribution/TombRewardPool.sol\":8192:8207  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8187  _generatedReward.mul(pool.allocPoint) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":8171:8175  pool */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":8171:8186  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8166  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8170  _generatedReward.mul */\n      tag_109\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8187  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":8150:8208  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_187:\n        /* \"contracts/distribution/TombRewardPool.sol\":8128:8208  uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8246:8310  pool.accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      tag_189\n        /* \"contracts/distribution/TombRewardPool.sol\":8271:8309  _tombReward.mul(1e18).div(tokenSupply) */\n      tag_190\n        /* \"contracts/distribution/TombRewardPool.sol\":8297:8308  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8271:8292  _tombReward.mul(1e18) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":8128:8208  uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8287:8291  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":8271:8286  _tombReward.mul */\n      tag_109\n        /* \"contracts/distribution/TombRewardPool.sol\":8271:8292  _tombReward.mul(1e18) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":8271:8309  _tombReward.mul(1e18).div(tokenSupply) */\n    tag_190:\n        /* \"contracts/distribution/TombRewardPool.sol\":8246:8266  pool.accTombPerShare */\n      0x03\n      dup7\n      add\n      sload\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8246:8270  pool.accTombPerShare.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":8246:8310  pool.accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/distribution/TombRewardPool.sol\":8223:8243  pool.accTombPerShare */\n      0x03\n      dup6\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8223:8310  pool.accTombPerShare = pool.accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      sstore\n      pop\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7990:8322  if (totalAllocPoint > 0) {\r... */\n    tag_185:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8354:8369  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":8332:8351  pool.lastRewardTime */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":8332:8369  pool.lastRewardTime = block.timestamp */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":7469:8377  function updatePool(uint256 _pid) public {\r... */\n    tag_174:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":10155:10532  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_45:\n        /* \"contracts/distribution/TombRewardPool.sol\":10214:10235  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":10238:10246  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":10247:10251  _pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10238:10252  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":10287:10301  userInfo[_pid] */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":10287:10295  userInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":10287:10301  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":10302:10312  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":10287:10313  userInfo[_pid][msg.sender] */\n      dup1\n      dup8\n      mstore\n      swap4\n      mstore\n      dup5\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":10342:10353  user.amount */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":10364:10379  user.amount = 0 */\n      dup6\n      dup3\n      sstore\n      0x01\n        /* \"contracts/distribution/TombRewardPool.sol\":10390:10405  user.rewardDebt */\n      dup3\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":10390:10409  user.rewardDebt = 0 */\n      swap6\n      swap1\n      swap6\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":10238:10252  poolInfo[_pid] */\n      0x05\n      swap1\n      swap4\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":10420:10430  pool.token */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":10238:10252  poolInfo[_pid] */\n      swap1\n      swap5\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10287:10313  userInfo[_pid][msg.sender] */\n      swap2\n      swap3\n        /* \"contracts/distribution/TombRewardPool.sol\":10342:10353  user.amount */\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10420:10464  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_195\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10420:10430  pool.token */\n      swap2\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":10342:10353  user.amount */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10420:10443  pool.token.safeTransfer */\n      tag_171\n        /* \"contracts/distribution/TombRewardPool.sol\":10420:10464  pool.token.safeTransfer(msg.sender, _amount) */\n      jump\t// in\n    tag_195:\n        /* \"contracts/distribution/TombRewardPool.sol\":10480:10524  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":10510:10514  _pid */\n      dup6\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10498:10508  msg.sender */\n      caller\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10480:10524  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":10155:10532  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":11112:11736  function governanceRecoverUnsupported(\r... */\n    tag_48:\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2867  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2881  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2881  operator == msg.sender */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":2851:2928  require(operator == msg.sender, \"TombRewardPool: caller is not the operator\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contracts/distribution/TombRewardPool.sol\":11282:11298  epochEndTimes[1] */\n      sload(0x08)\n        /* \"contracts/distribution/TombRewardPool.sol\":11301:11308  30 days */\n      0x278d00\n        /* \"contracts/distribution/TombRewardPool.sol\":11282:11308  epochEndTimes[1] + 30 days */\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":11264:11279  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":11264:11308  block.timestamp < epochEndTimes[1] + 30 days */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":11260:11687  if (block.timestamp < epochEndTimes[1] + 30 days) {\r... */\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":11422:11426  tomb */\n      sload(0x01)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":11412:11426  _token != tomb */\n      dup5\n      dup2\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11422:11426  tomb */\n      swap2\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11412:11426  _token != tomb */\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":11404:11436  require(_token != tomb, \"!tomb\") */\n      tag_202\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x05\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xd9, 0x10ba37b6b1)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_202:\n        /* \"contracts/distribution/TombRewardPool.sol\":11468:11476  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":11468:11483  poolInfo.length */\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":11451:11465  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11498:11676  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_203:\n        /* \"contracts/distribution/TombRewardPool.sol\":11526:11532  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":11520:11523  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":11520:11532  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":11498:11676  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":11560:11581  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11584:11592  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":11593:11596  pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":11584:11597  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_206\n      jumpi\n      invalid\n    tag_206:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":11634:11644  pool.token */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":11584:11597  poolInfo[pid] */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":11624:11644  _token != pool.token */\n      dup8\n      dup2\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11634:11644  pool.token */\n      swap2\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11624:11644  _token != pool.token */\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":11616:11660  require(_token != pool.token, \"!pool.token\") */\n      tag_208\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0b\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xa9, 0x10b837b7b6173a37b5b2b7)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_208:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11534:11539  ++pid */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":11498:11676  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_203)\n    tag_204:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":11260:11687  if (block.timestamp < epochEndTimes[1] + 30 days) {\r... */\n      pop\n    tag_201:\n        /* \"contracts/distribution/TombRewardPool.sol\":11697:11728  _token.safeTransfer(to, amount) */\n      tag_209\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":11697:11716  _token.safeTransfer */\n      dup5\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":11717:11719  to */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":11721:11727  amount */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":11697:11716  _token.safeTransfer */\n      tag_171\n        /* \"contracts/distribution/TombRewardPool.sol\":11697:11728  _token.safeTransfer(to, amount) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/distribution/TombRewardPool.sol\":11112:11736  function governanceRecoverUnsupported(\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":549:572  address public operator */\n    tag_50:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1618:1646  uint256 public poolStartTime */\n    tag_52:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":7213:7393  function massUpdatePools() public {\r... */\n    tag_54:\n        /* \"contracts/distribution/TombRewardPool.sol\":7275:7283  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":7275:7290  poolInfo.length */\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7258:7272  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":7301:7386  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_211:\n        /* \"contracts/distribution/TombRewardPool.sol\":7329:7335  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7323:7326  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7323:7335  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":7301:7386  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":7359:7374  updatePool(pid) */\n      tag_214\n        /* \"contracts/distribution/TombRewardPool.sol\":7370:7373  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":7359:7369  updatePool */\n      tag_42\n        /* \"contracts/distribution/TombRewardPool.sol\":7359:7374  updatePool(pid) */\n      jump\t// in\n    tag_214:\n        /* \"contracts/distribution/TombRewardPool.sol\":7337:7342  ++pid */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":7301:7386  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_211)\n    tag_212:\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":7213:7393  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1889:1925  uint256[3] public epochTombPerSecond */\n    tag_57:\n      0x0a\n      dup2\n      0x03\n      dup2\n      lt\n      tag_215\n      jumpi\n      invalid\n    tag_215:\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":6359:7130  function pendingTOMB(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_60:\n        /* \"contracts/distribution/TombRewardPool.sol\":6432:6439  uint256 */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6452:6473  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":6476:6484  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":6485:6489  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6476:6490  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_218\n      jumpi\n      invalid\n    tag_218:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":6525:6539  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":6525:6533  userInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":6525:6539  userInfo[_pid] */\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup7\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":6525:6546  userInfo[_pid][_user] */\n      dup1\n      dup12\n      and\n      dup9\n      mstore\n      swap1\n      dup6\n      mstore\n      dup2\n      dup8\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":6476:6490  poolInfo[_pid] */\n      0x05\n      swap1\n      swap7\n      mul\n      swap1\n      swap4\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":6583:6603  pool.accTombPerShare */\n      swap2\n      dup3\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6646  pool.token */\n      dup3\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6671  pool.token.balanceOf(address(this)) */\n      dup3\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":6665:6669  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6671  pool.token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap3\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":6476:6490  poolInfo[_pid] */\n      swap4\n      swap9\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6525:6546  userInfo[_pid][_user] */\n      swap6\n      swap7\n        /* \"contracts/distribution/TombRewardPool.sol\":6583:6603  pool.accTombPerShare */\n      swap1\n      swap6\n        /* \"contracts/distribution/TombRewardPool.sol\":6476:6490  poolInfo[_pid] */\n      swap1\n      swap5\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6646  pool.token */\n      swap4\n      and\n      swap3\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6656  pool.token.balanceOf */\n      0x70a08231\n      swap3\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6671  pool.token.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup5\n      add\n      swap4\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6646  pool.token */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6671  pool.token.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_220\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_220:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_223\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_223:\n      pop\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":6704:6723  pool.lastRewardTime */\n      0x02\n      dup6\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6636:6671  pool.token.balanceOf(address(this)) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6686:6701  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":6686:6723  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":6686:6743  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6727:6743  tokenSupply != 0 */\n      dup1\n      iszero\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":6686:6743  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_224:\n        /* \"contracts/distribution/TombRewardPool.sol\":6682:7042  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_225\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":6760:6784  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6787:6843  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_226\n        /* \"contracts/distribution/TombRewardPool.sol\":6806:6810  pool */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6806:6825  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6827:6842  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":6787:6805  getGeneratedReward */\n      tag_36\n        /* \"contracts/distribution/TombRewardPool.sol\":6787:6843  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/distribution/TombRewardPool.sol\":6760:6843  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6858:6877  uint256 _tombReward */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6938  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_227\n        /* \"contracts/distribution/TombRewardPool.sol\":6922:6937  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6917  _generatedReward.mul(pool.allocPoint) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":6901:6905  pool */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":6901:6916  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6896  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6900  _generatedReward.mul */\n      tag_109\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6917  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":6880:6938  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_227:\n        /* \"contracts/distribution/TombRewardPool.sol\":6858:6938  uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6971:7030  accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      tag_229\n        /* \"contracts/distribution/TombRewardPool.sol\":6991:7029  _tombReward.mul(1e18).div(tokenSupply) */\n      tag_230\n        /* \"contracts/distribution/TombRewardPool.sol\":7017:7028  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":6991:7012  _tombReward.mul(1e18) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":6858:6938  uint256 _tombReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":7007:7011  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":6991:7006  _tombReward.mul */\n      tag_109\n        /* \"contracts/distribution/TombRewardPool.sol\":6991:7012  _tombReward.mul(1e18) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":6991:7029  _tombReward.mul(1e18).div(tokenSupply) */\n    tag_230:\n        /* \"contracts/distribution/TombRewardPool.sol\":6971:6986  accTombPerShare */\n      dup6\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":6971:6990  accTombPerShare.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":6971:7030  accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      jump\t// in\n    tag_229:\n        /* \"contracts/distribution/TombRewardPool.sol\":6953:7030  accTombPerShare = accTombPerShare.add(_tombReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":6682:7042  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_225:\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7122  user.amount.mul(accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_232\n        /* \"contracts/distribution/TombRewardPool.sol\":7106:7110  user */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":7106:7121  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7101  user.amount.mul(accTombPerShare).div(1e18) */\n      tag_163\n        /* \"contracts/distribution/TombRewardPool.sol\":7096:7100  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7091  user.amount.mul(accTombPerShare) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":7075:7090  accTombPerShare */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7063  user */\n      dup9\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7070  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7074  user.amount.mul */\n      tag_109\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7091  user.amount.mul(accTombPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":7059:7122  user.amount.mul(accTombPerShare).div(1e18).sub(user.rewardDebt) */\n    tag_232:\n        /* \"contracts/distribution/TombRewardPool.sol\":7052:7122  return user.amount.mul(accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      swap8\n        /* \"contracts/distribution/TombRewardPool.sol\":6359:7130  function pendingTOMB(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1372:1436  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_63:\n      0x03\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":3294:4467  function add(\r... */\n    tag_66:\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2867  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2881  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2881  operator == msg.sender */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":2851:2928  require(operator == msg.sender, \"TombRewardPool: caller is not the operator\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"contracts/distribution/TombRewardPool.sol\":3460:3486  checkPoolDuplicate(_token) */\n      tag_238\n        /* \"contracts/distribution/TombRewardPool.sol\":3479:3485  _token */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":3460:3478  checkPoolDuplicate */\n      tag_239\n        /* \"contracts/distribution/TombRewardPool.sol\":3460:3486  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_238:\n        /* \"contracts/distribution/TombRewardPool.sol\":3501:3512  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3497:3558  if (_withUpdate) {\r... */\n      iszero\n      tag_241\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3529:3546  massUpdatePools() */\n      tag_241\n        /* \"contracts/distribution/TombRewardPool.sol\":3529:3544  massUpdatePools */\n      tag_54\n        /* \"contracts/distribution/TombRewardPool.sol\":3529:3546  massUpdatePools() */\n      jump\t// in\n    tag_241:\n        /* \"contracts/distribution/TombRewardPool.sol\":3590:3603  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":3572:3587  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3572:3603  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3568:4102  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_242\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3657:3677  _lastRewardTime == 0 */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":3653:3896  if (_lastRewardTime == 0) {\r... */\n      tag_243\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3716:3729  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":3653:3896  if (_lastRewardTime == 0) {\r... */\n      jump(tag_245)\n    tag_243:\n        /* \"contracts/distribution/TombRewardPool.sol\":3792:3805  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":3774:3789  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3774:3805  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3770:3881  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_245\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3848:3861  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":3770:3881  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_245:\n        /* \"contracts/distribution/TombRewardPool.sol\":3568:4102  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_248)\n    tag_242:\n        /* \"contracts/distribution/TombRewardPool.sol\":3964:3984  _lastRewardTime == 0 */\n      dup1\n      iszero\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":3964:4021  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      tag_247\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4006:4021  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3988:4003  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3988:4021  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3964:4021  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_247:\n        /* \"contracts/distribution/TombRewardPool.sol\":3960:4091  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_248\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4060:4075  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":3960:4091  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_248:\n        /* \"contracts/distribution/TombRewardPool.sol\":4112:4127  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":4150:4163  poolStartTime */\n      sload(0x05)\n        /* \"contracts/distribution/TombRewardPool.sol\":4131:4146  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":4131:4163  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":4130:4204  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n      dup1\n      tag_249\n      jumpi\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4188:4203  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombRewardPool.sol\":4169:4184  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":4169:4203  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":4130:4204  (_lastRewardTime <= poolStartTime) || (_lastRewardTime <= block.timestamp) */\n    tag_249:\n        /* \"contracts/distribution/TombRewardPool.sol\":4229:4355  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accTombPerShare: 0, isStarted: _isStarted}) */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup10\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup7\n      dup2\n      mstore\n      0x00\n      0x60\n      dup5\n      add\n      dup2\n      dup2\n      mstore\n      dup7\n      iszero\n      dup1\n      iszero\n      0x80\n      dup8\n      add\n      swap1\n      dup2\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":4215:4223  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":4215:4356  poolInfo.push(PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accTombPerShare: 0, isStarted: _isStarted})) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap5\n      mstore\n      swap6\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace\n      0x05\n      swap1\n      swap5\n      mul\n      swap4\n      dup5\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap7\n      and\n      or\n      swap1\n      swap5\n      sstore\n      swap5\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf\n      dup3\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad0\n      dup3\n      add\n      sstore\n      swap3\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1\n      dup5\n      add\n      sstore\n      swap1\n      mload\n      0x405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap3\n      iszero\n      iszero\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":4229:4355  PoolInfo({token: _token, allocPoint: _allocPoint, lastRewardTime: _lastRewardTime, accTombPerShare: 0, isStarted: _isStarted}) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":4367:4460  if (_isStarted) {\r... */\n      tag_251\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":4416:4431  totalAllocPoint */\n      sload(0x04)\n        /* \"contracts/distribution/TombRewardPool.sol\":4416:4448  totalAllocPoint.add(_allocPoint) */\n      tag_252\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":4436:4447  _allocPoint */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":4416:4435  totalAllocPoint.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":4416:4448  totalAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/distribution/TombRewardPool.sol\":4398:4413  totalAllocPoint */\n      0x04\n        /* \"contracts/distribution/TombRewardPool.sol\":4398:4448  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":4367:4460  if (_isStarted) {\r... */\n    tag_251:\n        /* \"contracts/distribution/TombRewardPool.sol\":2939:2940  _ */\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":3294:4467  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1655:1718  uint256[] public epochTotalRewards = [80000 ether, 60000 ether] */\n    tag_69:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_253\n      jumpi\n      invalid\n    tag_253:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":11003:11104  function setOperator(address _operator) external onlyOperator {\r... */\n    tag_72:\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2867  operator */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"contracts/distribution/TombRewardPool.sol\":2871:2881  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":2859:2881  operator == msg.sender */\n      eq\n        /* \"contracts/distribution/TombRewardPool.sol\":2851:2928  require(operator == msg.sender, \"TombRewardPool: caller is not the operator\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_256:\n        /* \"contracts/distribution/TombRewardPool.sol\":11076:11084  operator */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":11076:11096  operator = _operator */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":11003:11104  function setOperator(address _operator) external onlyOperator {\r... */\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":1762:1793  uint256[3] public epochEndTimes */\n    tag_75:\n      0x07\n      dup2\n      0x03\n      dup2\n      lt\n      tag_215\n      jumpi\n      invalid\n        /* \"contracts/distribution/TombRewardPool.sol\":1234:1252  IERC20 public tomb */\n    tag_77:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombRewardPool.sol\":8412:9238  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_80:\n        /* \"contracts/distribution/TombRewardPool.sol\":8478:8493  address _sender */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8496:8506  msg.sender */\n      caller\n        /* \"contracts/distribution/TombRewardPool.sol\":8478:8506  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8517:8538  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8541:8549  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":8550:8554  _pid */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8541:8555  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_261\n      jumpi\n      invalid\n    tag_261:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":8590:8604  userInfo[_pid] */\n      dup8\n      dup5\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":8590:8598  userInfo */\n      0x03\n        /* \"contracts/distribution/TombRewardPool.sol\":8590:8604  userInfo[_pid] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":8590:8613  userInfo[_pid][_sender] */\n      dup9\n      and\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n        /* \"contracts/distribution/TombRewardPool.sol\":8541:8555  poolInfo[_pid] */\n      0x05\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8624:8640  updatePool(_pid) */\n      tag_263\n        /* \"contracts/distribution/TombRewardPool.sol\":8599:8603  _pid */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":8624:8634  updatePool */\n      tag_42\n        /* \"contracts/distribution/TombRewardPool.sol\":8624:8640  updatePool(_pid) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/distribution/TombRewardPool.sol\":8655:8666  user.amount */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8655:8670  user.amount > 0 */\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":8651:8941  if (user.amount > 0) {\r... */\n      tag_264\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8687:8703  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8774  user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_265\n        /* \"contracts/distribution/TombRewardPool.sol\":8758:8762  user */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8758:8773  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8753  user.amount.mul(pool.accTombPerShare).div(1e18) */\n      tag_163\n        /* \"contracts/distribution/TombRewardPool.sol\":8748:8752  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8743  user.amount.mul(pool.accTombPerShare) */\n      tag_164\n        /* \"contracts/distribution/TombRewardPool.sol\":8722:8726  pool */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":8722:8742  pool.accTombPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8710  user */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8717  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8721  user.amount.mul */\n      tag_109\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8743  user.amount.mul(pool.accTombPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":8706:8774  user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n    tag_265:\n        /* \"contracts/distribution/TombRewardPool.sol\":8687:8774  uint256 _pending = user.amount.mul(pool.accTombPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":8793:8805  _pending > 0 */\n      dup1\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":8789:8930  if (_pending > 0) {\r... */\n      tag_268\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8826:8861  safeTombTransfer(_sender, _pending) */\n      tag_269\n        /* \"contracts/distribution/TombRewardPool.sol\":8843:8850  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":8852:8860  _pending */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":8826:8842  safeTombTransfer */\n      tag_167\n        /* \"contracts/distribution/TombRewardPool.sol\":8826:8861  safeTombTransfer(_sender, _pending) */\n      jump\t// in\n    tag_269:\n        /* \"contracts/distribution/TombRewardPool.sol\":8885:8914  RewardPaid(_sender, _pending) */\n      0x40\n      dup1\n      mload\n      dup3\n      dup2\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      swap2\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap2\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log2\n        /* \"contracts/distribution/TombRewardPool.sol\":8789:8930  if (_pending > 0) {\r... */\n    tag_268:\n        /* \"contracts/distribution/TombRewardPool.sol\":8651:8941  if (user.amount > 0) {\r... */\n      pop\n    tag_264:\n        /* \"contracts/distribution/TombRewardPool.sol\":8955:8966  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":8951:9108  if (_amount > 0) {\r... */\n      tag_270\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:8993  pool.token */\n      dup2\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9043  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_271\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:8993  pool.token */\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":9011:9018  _sender */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":9028:9032  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":9035:9042  _amount */\n      dup8\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9010  pool.token.safeTransferFrom */\n      tag_272\n        /* \"contracts/distribution/TombRewardPool.sol\":8983:9043  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      jump\t// in\n    tag_271:\n        /* \"contracts/distribution/TombRewardPool.sol\":9072:9083  user.amount */\n      dup1\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9072:9096  user.amount.add(_amount) */\n      tag_273\n      swap1\n        /* \"contracts/distribution/TombRewardPool.sol\":9088:9095  _amount */\n      dup6\n        /* \"contracts/distribution/TombRewardPool.sol\":9072:9087  user.amount.add */\n      tag_94\n        /* \"contracts/distribution/TombRewardPool.sol\":9072:9096  user.amount.add(_amount) */\n      jump\t// in\n    tag_273:\n        /* \"contracts/distribution/TombRewardPool.sol\":9058:9096  user.amount = user.amount.add(_amount) */\n      dup2\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":8951:9108  if (_amount > 0) {\r... */\n    tag_270:\n        /* \"contracts/distribution/TombRewardPool.sol\":9152:9172  pool.accTombPerShare */\n      0x03\n      dup3\n      add\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9147  user.amount */\n      dup2\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9183  user.amount.mul(pool.accTombPerShare).div(1e18) */\n      tag_274\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":9178:9182  1e18 */\n      0x0de0b6b3a7640000\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9173  user.amount.mul(pool.accTombPerShare) */\n      tag_164\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9151  user.amount.mul */\n      tag_109\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9173  user.amount.mul(pool.accTombPerShare) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":9136:9183  user.amount.mul(pool.accTombPerShare).div(1e18) */\n    tag_274:\n        /* \"contracts/distribution/TombRewardPool.sol\":9118:9133  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":9118:9183  user.rewardDebt = user.amount.mul(pool.accTombPerShare).div(1e18) */\n      sstore\n        /* \"contracts/distribution/TombRewardPool.sol\":9199:9230  Deposit(_sender, _pid, _amount) */\n      0x40\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":9216:9220  _pid */\n      dup7\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":9199:9230  Deposit(_sender, _pid, _amount) */\n      dup7\n      and\n      swap2\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap2\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      log3\n        /* \"contracts/distribution/TombRewardPool.sol\":8412:9238  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_81:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_277\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1a\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_277:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_278\n      jumpi\n      invalid\n    tag_278:\n      div\n      swap4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_280\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_280:\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      swap1\n      sub\n      swap1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      dup3\n      dup3\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_153\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      tag_284\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      jump(tag_95)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_284:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n      dup3\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      tag_285\n      jumpi\n      invalid\n    tag_285:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/distribution/TombRewardPool.sol\":10646:10995  function safeTombTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_167:\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10745  tomb */\n      sload(0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10770  tomb.balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/distribution/TombRewardPool.sol\":10764:10768  this */\n      address\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10770  tomb.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"contracts/distribution/TombRewardPool.sol\":10722:10738  uint256 _tombBal */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10745  tomb */\n      and\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10755  tomb.balanceOf */\n      0x70a08231\n      swap2\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10770  tomb.balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10745  tomb */\n      dup7\n        /* \"contracts/distribution/TombRewardPool.sol\":10741:10770  tomb.balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_288\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_288:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_291\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_291:\n      pop\n      mload\n      swap1\n      pop\n        /* \"contracts/distribution/TombRewardPool.sol\":10785:10797  _tombBal > 0 */\n      dup1\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":10781:10988  if (_tombBal > 0) {\r... */\n      tag_209\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":10828:10836  _tombBal */\n      dup1\n        /* \"contracts/distribution/TombRewardPool.sol\":10818:10825  _amount */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":10818:10836  _amount > _tombBal */\n      gt\n        /* \"contracts/distribution/TombRewardPool.sol\":10814:10977  if (_amount > _tombBal) {\r... */\n      iszero\n      tag_293\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":10857:10861  tomb */\n      sload(0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10857:10889  tomb.safeTransfer(_to, _tombBal) */\n      tag_294\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10857:10861  tomb */\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10875:10878  _to */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":10880:10888  _tombBal */\n      dup4\n        /* \"contracts/distribution/TombRewardPool.sol\":10857:10874  tomb.safeTransfer */\n      tag_171\n        /* \"contracts/distribution/TombRewardPool.sol\":10857:10889  tomb.safeTransfer(_to, _tombBal) */\n      jump\t// in\n    tag_294:\n        /* \"contracts/distribution/TombRewardPool.sol\":10814:10977  if (_amount > _tombBal) {\r... */\n      jump(tag_209)\n    tag_293:\n        /* \"contracts/distribution/TombRewardPool.sol\":10930:10934  tomb */\n      sload(0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10930:10961  tomb.safeTransfer(_to, _amount) */\n      tag_209\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":10930:10934  tomb */\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":10948:10951  _to */\n      dup5\n        /* \"contracts/distribution/TombRewardPool.sol\":10953:10960  _amount */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_209\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup5\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"contracts/distribution/TombRewardPool.sol\":2956:3216  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_239:\n        /* \"contracts/distribution/TombRewardPool.sol\":3041:3049  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":3041:3056  poolInfo.length */\n      sload\n        /* \"contracts/distribution/TombRewardPool.sol\":3024:3038  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombRewardPool.sol\":3067:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_301:\n        /* \"contracts/distribution/TombRewardPool.sol\":3095:3101  length */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3089:3092  pid */\n      dup2\n        /* \"contracts/distribution/TombRewardPool.sol\":3089:3101  pid < length */\n      lt\n        /* \"contracts/distribution/TombRewardPool.sol\":3067:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/distribution/TombRewardPool.sol\":3156:3162  _token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/distribution/TombRewardPool.sol\":3133:3162  poolInfo[pid].token != _token */\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":3133:3141  poolInfo */\n      0x02\n        /* \"contracts/distribution/TombRewardPool.sol\":3142:3145  pid */\n      dup3\n        /* \"contracts/distribution/TombRewardPool.sol\":3133:3146  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_304\n      jumpi\n      invalid\n    tag_304:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":3133:3152  poolInfo[pid].token */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/distribution/TombRewardPool.sol\":3133:3162  poolInfo[pid].token != _token */\n      eq\n      iszero\n        /* \"contracts/distribution/TombRewardPool.sol\":3125:3197  require(poolInfo[pid].token != _token, \"TombRewardPool: existing pool?\") */\n      tag_306\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x546f6d62526577617264506f6f6c3a206578697374696e6720706f6f6c3f0000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_306:\n        /* \"contracts/distribution/TombRewardPool.sol\":3103:3108  ++pid */\n      0x01\n      add\n        /* \"contracts/distribution/TombRewardPool.sol\":3067:3209  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_301)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup7\n      and\n      0x24\n      dup4\n      add\n      mstore\n      dup5\n      and\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x84\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_308\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup6\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_299\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_310\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      and\n      tag_311\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_313\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_313:\n      pop\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_316\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_317\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_315:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_317:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_319\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_319:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_320\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_321\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_322\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_322:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_323:\n      0x20\n      dup4\n      lt\n      tag_325\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_323)\n    tag_325:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_328\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_327)\n    tag_328:\n      0x60\n      swap2\n      pop\n    tag_327:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_232\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_330\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_321:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_330:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_333\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      jump(tag_315)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_333:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      dup3\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      tag_335\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_337:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_339\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_337)\n    tag_339:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_340\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_340:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd 546f6d62526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220bbb8d0c4148d234ab60a81704fc77639b49ff849021a392e19460bd4ff654fa164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "600060045560c06040526910f0cf064dd5920000006080908152690cb49b44ba602d80000060a05262000037906006906002620001d2565b503480156200004557600080fd5b5060405162001aff38038062001aff833981810160405260408110156200006b57600080fd5b508051602090910151428111620000b2576040805162461bcd60e51b815260206004808301919091526024820152636c61746560e01b604482015290519081900360640190fd5b6001600160a01b03821615620000de57600180546001600160a01b0319166001600160a01b0384161790555b600581905562054600808201600755620bdd808201600855600680546200012a9291906000906200010b57fe5b90600052602060002001546200016960201b6200119c1790919060201c565b600a55600680546200014791620697809160019081106200010b57fe5b600b5550506000600c81905580546001600160a01b0319163317905562000244565b6000808211620001c0576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b818381620001ca57fe5b049392505050565b8280548282559060005260206000209081019282156200021b579160200282015b828111156200021b57825182906001600160501b0316905591602001919060010190620001f3565b50620002299291506200022d565b5090565b5b808211156200022957600081556001016200022e565b6118ab80620002546000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063630b5ba1116100ad5780639a25cefc116100715780639a25cefc14610376578063b3ab15fb14610393578063b89e73c1146103b9578063c040f23a146103d6578063e2bbb158146103de5761012c565b8063630b5ba1146102a65780637704d44e146102ae57806389744bb4146102cb57806393f1a40b146102f757806396805e541461033c5761012c565b806351eb05a6116100f457806351eb05a61461020a5780635312ea8e1461022757806354575af414610244578063570ca7351461027a5780635f96dc111461029e5761012c565b80631526fe271461013157806317caf6f1146101855780631ab06ee51461019f578063231f0c6a146101c4578063441a3e70146101e7575b600080fd5b61014e6004803603602081101561014757600080fd5b5035610401565b604080516001600160a01b039096168652602086019490945284840192909252606084015215156080830152519081900360a00190f35b61018d61044c565b60408051918252519081900360200190f35b6101c2600480360360408110156101b557600080fd5b5080359060200135610452565b005b61018d600480360360408110156101da57600080fd5b5080359060200135610500565b6101c2600480360360408110156101fd57600080fd5b50803590602001356106bf565b6101c26004803603602081101561022057600080fd5b503561087c565b6101c26004803603602081101561023d57600080fd5b50356109da565b6101c26004803603606081101561025a57600080fd5b506001600160a01b03813581169160208101359160409091013516610a76565b610282610bbe565b604080516001600160a01b039092168252519081900360200190f35b61018d610bcd565b6101c2610bd3565b61018d600480360360208110156102c457600080fd5b5035610bf6565b61018d600480360360408110156102e157600080fd5b50803590602001356001600160a01b0316610c0a565b6103236004803603604081101561030d57600080fd5b50803590602001356001600160a01b0316610d66565b6040805192835260208301919091528051918290030190f35b6101c26004803603608081101561035257600080fd5b508035906001600160a01b0360208201351690604081013515159060600135610d8a565b61018d6004803603602081101561038c57600080fd5b5035610f87565b6101c2600480360360208110156103a957600080fd5b50356001600160a01b0316610fa5565b61018d600480360360208110156103cf57600080fd5b5035611010565b61028261101d565b6101c2600480360360408110156103f457600080fd5b508035906020013561102c565b6002818154811061040e57fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b60045481565b6000546001600160a01b0316331461049b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b6104a3610bd3565b6000600283815481106104b257fe5b60009182526020909120600590910201600481015490915060ff16156104f9576104f5826104ef836001015460045461120390919063ffffffff16565b90611260565b6004555b6001015550565b600060025b60018160ff16106106a45760076001820360ff166003811061052357fe5b0154831061069b5760076001820360ff166003811061053e57fe5b015484106105735761056b600a8260ff166003811061055957fe5b01546105658587611203565b906112ba565b9150506106b9565b60006105a9600a8360ff166003811061058857fe5b015461056560076001860360ff16600381106105a057fe5b01548790611203565b90508160ff16600114156105e5576105dc6105d5600a60005b015461056588600760005b015490611203565b8290611260565b925050506106b9565b6001820391505b60018260ff161061068c5760076001830360ff166003811061060a57fe5b0154851061063e576105dc6105d5600a8460ff166003811061062857fe5b01546105658860078760ff16600381106105cd57fe5b61067e6105d5600a8460ff166003811061065457fe5b015461056560076001870360ff166003811061066c57fe5b015460078760ff16600381106105cd57fe5b6000199092019190506105ec565b6105dc6105d5600a60006105c2565b60001901610505565b50600a546106b6906105658486611203565b90505b92915050565b60003390506000600284815481106106d357fe5b600091825260208083208784526003825260408085206001600160a01b0388168652909252922080546005909202909201925084111561074f576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6107588561087c565b6000610795826001015461078f670de0b6b3a7640000610789876003015487600001546112ba90919063ffffffff16565b9061119c565b90611203565b905080156107e7576107a78482611313565b6040805182815290516001600160a01b038616917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b84156108115781546107f99086611203565b82558254610811906001600160a01b031685876113c9565b6003830154825461082f91670de0b6b3a764000091610789916112ba565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b60006002828154811061088b57fe5b90600052602060002090600502019050806002015442116108ac57506109d7565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d602081101561092057600080fd5b50519050806109365750426002909101556109d7565b600482015460ff16610967576004808301805460ff19166001908117909155830154905461096391611260565b6004555b600454156109ce57600061097f836002015442610500565b905060006109a06004546107898660010154856112ba90919063ffffffff16565b90506109c66109bb8461078984670de0b6b3a76400006112ba565b600386015490611260565b600385015550505b50426002909101555b50565b6000600282815481106109e957fe5b600091825260208083208584526003825260408085203380875293528420805485825560018201959095556005909302018054909450919291610a39916001600160a01b039190911690836113c9565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b6000546001600160a01b03163314610abf5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b60085462278d0001421015610ba5576001546001600160a01b0384811691161415610b19576040805162461bcd60e51b815260206004820152600560248201526410ba37b6b160d91b604482015290519081900360640190fd5b60025460005b81811015610ba257600060028281548110610b3657fe5b6000918252602090912060059091020180549091506001600160a01b0387811691161415610b99576040805162461bcd60e51b815260206004820152600b60248201526a10b837b7b6173a37b5b2b760a91b604482015290519081900360640190fd5b50600101610b1f565b50505b610bb96001600160a01b03841682846113c9565b505050565b6000546001600160a01b031681565b60055481565b60025460005b81811015610bf257610bea8161087c565b600101610bd9565b5050565b600a8160038110610c0357fe5b0154905081565b60008060028481548110610c1a57fe5b60009182526020808320878452600380835260408086206001600160a01b03808b168852908552818720600590960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015610c9257600080fd5b505afa158015610ca6573d6000803e3d6000fd5b505050506040513d6020811015610cbc57600080fd5b5051600285015490915042118015610cd357508015155b15610d30576000610ce8856002015442610500565b90506000610d096004546107898860010154856112ba90919063ffffffff16565b9050610d2b610d248461078984670de0b6b3a76400006112ba565b8590611260565b935050505b610d5b836001015461078f670de0b6b3a76400006107898688600001546112ba90919063ffffffff16565b979650505050505050565b60036020908152600092835260408084209091529082529020805460019091015482565b6000546001600160a01b03163314610dd35760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b610ddc8361141b565b8115610dea57610dea610bd3565b600554421015610e165780610e025750600554610e11565b600554811015610e1157506005545b610e2a565b801580610e2257504281105b15610e2a5750425b600060055482111580610e3d5750428211155b6040805160a0810182526001600160a01b03878116825260208201898152928201868152600060608401818152861580156080870190815260028054600181018255945295517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600590940293840180546001600160a01b031916919096161790945594517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf82015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad082015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2909201805460ff191692151592909217909155909150610f8057600454610f7c9086611260565b6004555b5050505050565b60068181548110610f9457fe5b600091825260209091200154905081565b6000546001600160a01b03163314610fee5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60078160038110610c0357fe5b6001546001600160a01b031681565b600033905060006002848154811061104057fe5b600091825260208083208784526003825260408085206001600160a01b038816865290925292206005909102909101915061107a8561087c565b8054156111065760006110b2826001015461078f670de0b6b3a7640000610789876003015487600001546112ba90919063ffffffff16565b90508015611104576110c48482611313565b6040805182815290516001600160a01b038616917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505b8315611132578154611123906001600160a01b03168430876114b5565b805461112f9085611260565b81555b6003820154815461115091670de0b6b3a764000091610789916112ba565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008082116111f2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816111fb57fe5b049392505050565b60008282111561125a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106b6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000826112c9575060006106b9565b828202828482816112d657fe5b04146106b65760405162461bcd60e51b815260040180806020018281038252602181526020018061182b6021913960400191505060405180910390fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561135e57600080fd5b505afa158015611372573d6000803e3d6000fd5b505050506040513d602081101561138857600080fd5b505190508015610bb957808211156113b6576001546113b1906001600160a01b031684836113c9565b610bb9565b600154610bb9906001600160a01b031684845b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bb9908490611515565b60025460005b81811015610bb957826001600160a01b03166002828154811061144057fe5b60009182526020909120600590910201546001600160a01b031614156114ad576040805162461bcd60e51b815260206004820152601e60248201527f546f6d62526577617264506f6f6c3a206578697374696e6720706f6f6c3f0000604482015290519081900360640190fd5b600101611421565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261150f908590611515565b50505050565b606061156a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115c69092919063ffffffff16565b805190915015610bb95780806020019051602081101561158957600080fd5b5051610bb95760405162461bcd60e51b815260040180806020018281038252602a81526020018061184c602a913960400191505060405180910390fd5b60606115d584846000856115df565b90505b9392505050565b6060824710156116205760405162461bcd60e51b81526004018080602001828103825260268152602001806118056026913960400191505060405180910390fd5b61162985611730565b61167a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106116b95780518252601f19909201916020918201910161169a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461171b576040519150601f19603f3d011682016040523d82523d6000602084013e611720565b606091505b5091509150610d5b828286611736565b3b151590565b606083156117455750816115d8565b8251156117555782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561179f578181015183820152602001611787565b50505050905090810190601f1680156117cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe546f6d62526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bbb8d0c4148d234ab60a81704fc77639b49ff849021a392e19460bd4ff654fa164736f6c634300060c0033",
							"opcodes": "PUSH1 0x0 PUSH1 0x4 SSTORE PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH10 0x10F0CF064DD592000000 PUSH1 0x80 SWAP1 DUP2 MSTORE PUSH10 0xCB49B44BA602D800000 PUSH1 0xA0 MSTORE PUSH3 0x37 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x2 PUSH3 0x1D2 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH3 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1AFF CODESIZE SUB DUP1 PUSH3 0x1AFF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD TIMESTAMP DUP2 GT PUSH3 0xB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH4 0x6C617465 PUSH1 0xE0 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH3 0xDE JUMPI PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH3 0x54600 DUP1 DUP3 ADD PUSH1 0x7 SSTORE PUSH3 0xBDD80 DUP3 ADD PUSH1 0x8 SSTORE PUSH1 0x6 DUP1 SLOAD PUSH3 0x12A SWAP3 SWAP2 SWAP1 PUSH1 0x0 SWAP1 PUSH3 0x10B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH3 0x169 PUSH1 0x20 SHL PUSH3 0x119C OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA SSTORE PUSH1 0x6 DUP1 SLOAD PUSH3 0x147 SWAP2 PUSH3 0x69780 SWAP2 PUSH1 0x1 SWAP1 DUP2 LT PUSH3 0x10B JUMPI INVALID JUMPDEST PUSH1 0xB SSTORE POP POP PUSH1 0x0 PUSH1 0xC DUP2 SWAP1 SSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x244 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH3 0x1C0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH3 0x1CA JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH3 0x21B JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x21B JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x1F3 JUMP JUMPDEST POP PUSH3 0x229 SWAP3 SWAP2 POP PUSH3 0x22D JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x229 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x22E JUMP JUMPDEST PUSH2 0x18AB DUP1 PUSH3 0x254 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9A25CEFC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9A25CEFC EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xB89E73C1 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xC040F23A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3DE JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x7704D44E EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x89744BB4 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x33C JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x29E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x500 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x282 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x102C JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x40E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A3 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x4F9 JUMPI PUSH2 0x4F5 DUP3 PUSH2 0x4EF DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1203 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND LT PUSH2 0x6A4 JUMPI PUSH1 0x7 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x523 JUMPI INVALID JUMPDEST ADD SLOAD DUP4 LT PUSH2 0x69B JUMPI PUSH1 0x7 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x53E JUMPI INVALID JUMPDEST ADD SLOAD DUP5 LT PUSH2 0x573 JUMPI PUSH2 0x56B PUSH1 0xA DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x559 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 DUP6 DUP8 PUSH2 0x1203 JUMP JUMPDEST SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 PUSH1 0xA DUP4 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x588 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 PUSH1 0x7 PUSH1 0x1 DUP7 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5A0 JUMPI INVALID JUMPDEST ADD SLOAD DUP8 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA PUSH1 0x0 JUMPDEST ADD SLOAD PUSH2 0x565 DUP9 PUSH1 0x7 PUSH1 0x0 JUMPDEST ADD SLOAD SWAP1 PUSH2 0x1203 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1260 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND LT PUSH2 0x68C JUMPI PUSH1 0x7 PUSH1 0x1 DUP4 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x60A JUMPI INVALID JUMPDEST ADD SLOAD DUP6 LT PUSH2 0x63E JUMPI PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x628 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 DUP9 PUSH1 0x7 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5CD JUMPI INVALID JUMPDEST PUSH2 0x67E PUSH2 0x5D5 PUSH1 0xA DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x654 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 PUSH1 0x7 PUSH1 0x1 DUP8 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x66C JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x7 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5CD JUMPI INVALID JUMPDEST PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA PUSH1 0x0 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x565 DUP5 DUP7 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6D3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x795 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x7A7 DUP5 DUP3 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST DUP5 ISZERO PUSH2 0x811 JUMPI DUP2 SLOAD PUSH2 0x7F9 SWAP1 DUP7 PUSH2 0x1203 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x811 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x82F SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x789 SWAP2 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD DUP8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x88B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x8AC JUMPI POP PUSH2 0x9D7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x936 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x967 JUMPI PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 ADD SLOAD SWAP1 SLOAD PUSH2 0x963 SWAP2 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x4 SLOAD ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 PUSH2 0x97F DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x500 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A0 PUSH1 0x4 SLOAD PUSH2 0x789 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9C6 PUSH2 0x9BB DUP5 PUSH2 0x789 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP JUMPDEST POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0xA39 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH3 0x278D00 ADD TIMESTAMP LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xB19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x10BA37B6B1 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB36 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B837B7B6173A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB1F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xBB9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x13C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0xBEA DUP2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBD9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xC03 JUMPI INVALID JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 PUSH1 0x5 SWAP1 SWAP7 MUL SWAP1 SWAP4 ADD SWAP2 DUP3 ADD SLOAD DUP3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP4 SWAP9 POP SWAP6 SWAP7 SWAP1 SWAP6 SWAP1 SWAP5 SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP TIMESTAMP GT DUP1 ISZERO PUSH2 0xCD3 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 PUSH2 0xCE8 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x500 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD09 PUSH1 0x4 SLOAD PUSH2 0x789 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B PUSH2 0xD24 DUP5 PUSH2 0x789 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x12BA JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1260 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD5B DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDC DUP4 PUSH2 0x141B JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0xE16 JUMPI DUP1 PUSH2 0xE02 JUMPI POP PUSH1 0x5 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xE11 JUMPI POP PUSH1 0x5 SLOAD JUMPDEST PUSH2 0xE2A JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xE22 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0xE2A JUMPI POP TIMESTAMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0xE3D JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 MSTORE SWAP6 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP5 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0xF80 JUMPI PUSH1 0x4 SLOAD PUSH2 0xF7C SWAP1 DUP7 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF94 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xC03 JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1040 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x107A DUP6 PUSH2 0x87C JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 PUSH2 0x10B2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1104 JUMPI PUSH2 0x10C4 DUP5 DUP3 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP4 ISZERO PUSH2 0x1132 JUMPI DUP2 SLOAD PUSH2 0x1123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 ADDRESS DUP8 PUSH2 0x14B5 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x112F SWAP1 DUP6 PUSH2 0x1260 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1150 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x789 SWAP2 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x11F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x11FB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x125A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12C9 JUMPI POP PUSH1 0x0 PUSH2 0x6B9 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x12D6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x182B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x1 SLOAD PUSH2 0x13B1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBB9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBB9 SWAP1 DUP5 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1440 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x14AD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6D62526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x150F SWAP1 DUP6 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x156A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x15D5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1805 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1629 DUP6 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16B9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x169A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x171B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD5B DUP3 DUP3 DUP7 PUSH2 0x1736 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1745 JUMPI POP DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1755 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1787 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17CC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID SLOAD PUSH16 0x6D62526577617264506F6F6C3A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F70657261 PUSH21 0x6F72416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220BBB8D0C4 EQ DUP14 0x23 0x4A 0xB6 EXP DUP2 PUSH17 0x4FC77639B49FF849021A392E19460BD4FF PUSH6 0x4FA164736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "1566:1:4:-:0;1533:34;;1655:63;431:11308;1655:63;1693:11;431:11308;1655:63;;;1706:11;1655:63;;;;;;;;:::i;:::-;;2245:563;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2245:563:4;;;;;;;2322:15;:32;-1:-1:-1;2314:49:4;;;;;-1:-1:-1;;;2314:49:4;;;;;;;;;;;;;;;-1:-1:-1;;;2314:49:4;;;;;;;;;;;;;;;-1:-1:-1;;;;;2378:19:4;;;2374:45;;2399:4;:20;;-1:-1:-1;;;;;;2399:20:4;-1:-1:-1;;;;;2399:20:4;;;;;2374:45;2432:13;:30;;;2510:6;2494:22;;;2475:13;:41;2557:25;;;2538:16;:44;2631:17;:20;;:32;;2510:6;2631:17;2489:1;;2631:20;;;;;;;;;;;;:24;;;;;;:32;;;;:::i;:::-;2607:18;:56;2698:17;:20;;:32;;2723:6;;2716:1;;2698:20;;;;;:32;2674:21;:56;-1:-1:-1;;2767:1:4;2743:21;:25;;;2779:21;;-1:-1:-1;;;;;;2779:21:4;2790:10;2779:21;;;431:11308;;4217:150:3;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;431:11308:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;431:11308:4;;;;;;;;;;;;;;-1:-1:-1;431:11308:4;;;-1:-1:-1;431:11308:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061012c5760003560e01c8063630b5ba1116100ad5780639a25cefc116100715780639a25cefc14610376578063b3ab15fb14610393578063b89e73c1146103b9578063c040f23a146103d6578063e2bbb158146103de5761012c565b8063630b5ba1146102a65780637704d44e146102ae57806389744bb4146102cb57806393f1a40b146102f757806396805e541461033c5761012c565b806351eb05a6116100f457806351eb05a61461020a5780635312ea8e1461022757806354575af414610244578063570ca7351461027a5780635f96dc111461029e5761012c565b80631526fe271461013157806317caf6f1146101855780631ab06ee51461019f578063231f0c6a146101c4578063441a3e70146101e7575b600080fd5b61014e6004803603602081101561014757600080fd5b5035610401565b604080516001600160a01b039096168652602086019490945284840192909252606084015215156080830152519081900360a00190f35b61018d61044c565b60408051918252519081900360200190f35b6101c2600480360360408110156101b557600080fd5b5080359060200135610452565b005b61018d600480360360408110156101da57600080fd5b5080359060200135610500565b6101c2600480360360408110156101fd57600080fd5b50803590602001356106bf565b6101c26004803603602081101561022057600080fd5b503561087c565b6101c26004803603602081101561023d57600080fd5b50356109da565b6101c26004803603606081101561025a57600080fd5b506001600160a01b03813581169160208101359160409091013516610a76565b610282610bbe565b604080516001600160a01b039092168252519081900360200190f35b61018d610bcd565b6101c2610bd3565b61018d600480360360208110156102c457600080fd5b5035610bf6565b61018d600480360360408110156102e157600080fd5b50803590602001356001600160a01b0316610c0a565b6103236004803603604081101561030d57600080fd5b50803590602001356001600160a01b0316610d66565b6040805192835260208301919091528051918290030190f35b6101c26004803603608081101561035257600080fd5b508035906001600160a01b0360208201351690604081013515159060600135610d8a565b61018d6004803603602081101561038c57600080fd5b5035610f87565b6101c2600480360360208110156103a957600080fd5b50356001600160a01b0316610fa5565b61018d600480360360208110156103cf57600080fd5b5035611010565b61028261101d565b6101c2600480360360408110156103f457600080fd5b508035906020013561102c565b6002818154811061040e57fe5b6000918252602090912060059091020180546001820154600283015460038401546004909401546001600160a01b0390931694509092909160ff1685565b60045481565b6000546001600160a01b0316331461049b5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b6104a3610bd3565b6000600283815481106104b257fe5b60009182526020909120600590910201600481015490915060ff16156104f9576104f5826104ef836001015460045461120390919063ffffffff16565b90611260565b6004555b6001015550565b600060025b60018160ff16106106a45760076001820360ff166003811061052357fe5b0154831061069b5760076001820360ff166003811061053e57fe5b015484106105735761056b600a8260ff166003811061055957fe5b01546105658587611203565b906112ba565b9150506106b9565b60006105a9600a8360ff166003811061058857fe5b015461056560076001860360ff16600381106105a057fe5b01548790611203565b90508160ff16600114156105e5576105dc6105d5600a60005b015461056588600760005b015490611203565b8290611260565b925050506106b9565b6001820391505b60018260ff161061068c5760076001830360ff166003811061060a57fe5b0154851061063e576105dc6105d5600a8460ff166003811061062857fe5b01546105658860078760ff16600381106105cd57fe5b61067e6105d5600a8460ff166003811061065457fe5b015461056560076001870360ff166003811061066c57fe5b015460078760ff16600381106105cd57fe5b6000199092019190506105ec565b6105dc6105d5600a60006105c2565b60001901610505565b50600a546106b6906105658486611203565b90505b92915050565b60003390506000600284815481106106d357fe5b600091825260208083208784526003825260408085206001600160a01b0388168652909252922080546005909202909201925084111561074f576040805162461bcd60e51b81526020600482015260126024820152711dda5d1a191c985dce881b9bdd0819dbdbd960721b604482015290519081900360640190fd5b6107588561087c565b6000610795826001015461078f670de0b6b3a7640000610789876003015487600001546112ba90919063ffffffff16565b9061119c565b90611203565b905080156107e7576107a78482611313565b6040805182815290516001600160a01b038616917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b84156108115781546107f99086611203565b82558254610811906001600160a01b031685876113c9565b6003830154825461082f91670de0b6b3a764000091610789916112ba565b600183015560408051868152905187916001600160a01b038716917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689181900360200190a3505050505050565b60006002828154811061088b57fe5b90600052602060002090600502019050806002015442116108ac57506109d7565b8054604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d602081101561092057600080fd5b50519050806109365750426002909101556109d7565b600482015460ff16610967576004808301805460ff19166001908117909155830154905461096391611260565b6004555b600454156109ce57600061097f836002015442610500565b905060006109a06004546107898660010154856112ba90919063ffffffff16565b90506109c66109bb8461078984670de0b6b3a76400006112ba565b600386015490611260565b600385015550505b50426002909101555b50565b6000600282815481106109e957fe5b600091825260208083208584526003825260408085203380875293528420805485825560018201959095556005909302018054909450919291610a39916001600160a01b039190911690836113c9565b604080518281529051859133917fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae05959181900360200190a350505050565b6000546001600160a01b03163314610abf5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b60085462278d0001421015610ba5576001546001600160a01b0384811691161415610b19576040805162461bcd60e51b815260206004820152600560248201526410ba37b6b160d91b604482015290519081900360640190fd5b60025460005b81811015610ba257600060028281548110610b3657fe5b6000918252602090912060059091020180549091506001600160a01b0387811691161415610b99576040805162461bcd60e51b815260206004820152600b60248201526a10b837b7b6173a37b5b2b760a91b604482015290519081900360640190fd5b50600101610b1f565b50505b610bb96001600160a01b03841682846113c9565b505050565b6000546001600160a01b031681565b60055481565b60025460005b81811015610bf257610bea8161087c565b600101610bd9565b5050565b600a8160038110610c0357fe5b0154905081565b60008060028481548110610c1a57fe5b60009182526020808320878452600380835260408086206001600160a01b03808b168852908552818720600590960290930191820154825482516370a0823160e01b815230600482015292519398509596909590949316926370a0823192602480840193829003018186803b158015610c9257600080fd5b505afa158015610ca6573d6000803e3d6000fd5b505050506040513d6020811015610cbc57600080fd5b5051600285015490915042118015610cd357508015155b15610d30576000610ce8856002015442610500565b90506000610d096004546107898860010154856112ba90919063ffffffff16565b9050610d2b610d248461078984670de0b6b3a76400006112ba565b8590611260565b935050505b610d5b836001015461078f670de0b6b3a76400006107898688600001546112ba90919063ffffffff16565b979650505050505050565b60036020908152600092835260408084209091529082529020805460019091015482565b6000546001600160a01b03163314610dd35760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b610ddc8361141b565b8115610dea57610dea610bd3565b600554421015610e165780610e025750600554610e11565b600554811015610e1157506005545b610e2a565b801580610e2257504281105b15610e2a5750425b600060055482111580610e3d5750428211155b6040805160a0810182526001600160a01b03878116825260208201898152928201868152600060608401818152861580156080870190815260028054600181018255945295517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace600590940293840180546001600160a01b031916919096161790945594517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf82015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad082015592517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad184015590517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2909201805460ff191692151592909217909155909150610f8057600454610f7c9086611260565b6004555b5050505050565b60068181548110610f9457fe5b600091825260209091200154905081565b6000546001600160a01b03163314610fee5760405162461bcd60e51b815260040180806020018281038252602a8152602001806117db602a913960400191505060405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b60078160038110610c0357fe5b6001546001600160a01b031681565b600033905060006002848154811061104057fe5b600091825260208083208784526003825260408085206001600160a01b038816865290925292206005909102909101915061107a8561087c565b8054156111065760006110b2826001015461078f670de0b6b3a7640000610789876003015487600001546112ba90919063ffffffff16565b90508015611104576110c48482611313565b6040805182815290516001600160a01b038616917fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486919081900360200190a25b505b8315611132578154611123906001600160a01b03168430876114b5565b805461112f9085611260565b81555b6003820154815461115091670de0b6b3a764000091610789916112ba565b600182015560408051858152905186916001600160a01b038616917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159181900360200190a35050505050565b60008082116111f2576040805162461bcd60e51b815260206004820152601a60248201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604482015290519081900360640190fd5b8183816111fb57fe5b049392505050565b60008282111561125a576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156106b6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6000826112c9575060006106b9565b828202828482816112d657fe5b04146106b65760405162461bcd60e51b815260040180806020018281038252602181526020018061182b6021913960400191505060405180910390fd5b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561135e57600080fd5b505afa158015611372573d6000803e3d6000fd5b505050506040513d602081101561138857600080fd5b505190508015610bb957808211156113b6576001546113b1906001600160a01b031684836113c9565b610bb9565b600154610bb9906001600160a01b031684845b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610bb9908490611515565b60025460005b81811015610bb957826001600160a01b03166002828154811061144057fe5b60009182526020909120600590910201546001600160a01b031614156114ad576040805162461bcd60e51b815260206004820152601e60248201527f546f6d62526577617264506f6f6c3a206578697374696e6720706f6f6c3f0000604482015290519081900360640190fd5b600101611421565b604080516001600160a01b0380861660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261150f908590611515565b50505050565b606061156a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166115c69092919063ffffffff16565b805190915015610bb95780806020019051602081101561158957600080fd5b5051610bb95760405162461bcd60e51b815260040180806020018281038252602a81526020018061184c602a913960400191505060405180910390fd5b60606115d584846000856115df565b90505b9392505050565b6060824710156116205760405162461bcd60e51b81526004018080602001828103825260268152602001806118056026913960400191505060405180910390fd5b61162985611730565b61167a576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106116b95780518252601f19909201916020918201910161169a565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d806000811461171b576040519150601f19603f3d011682016040523d82523d6000602084013e611720565b606091505b5091509150610d5b828286611736565b3b151590565b606083156117455750816115d8565b8251156117555782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561179f578181015183820152602001611787565b50505050905090810190601f1680156117cc5780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe546f6d62526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220bbb8d0c4148d234ab60a81704fc77639b49ff849021a392e19460bd4ff654fa164736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0x9A25CEFC GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x9A25CEFC EQ PUSH2 0x376 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x393 JUMPI DUP1 PUSH4 0xB89E73C1 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xC040F23A EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x3DE JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x7704D44E EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x89744BB4 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x96805E54 EQ PUSH2 0x33C JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x51EB05A6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x29E JUMPI PUSH2 0x12C JUMP JUMPDEST DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x1C4 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x1E7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x147 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x401 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP5 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0xA0 ADD SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0x44C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x452 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x500 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x6BF JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x220 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x87C JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 PUSH1 0x40 SWAP1 SWAP2 ADD CALLDATALOAD AND PUSH2 0xA76 JUMP JUMPDEST PUSH2 0x282 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x18D PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0xBD3 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xBF6 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0A JUMP JUMPDEST PUSH2 0x323 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB ADD SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x60 ADD CALLDATALOAD PUSH2 0xD8A JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xF87 JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xFA5 JUMP JUMPDEST PUSH2 0x18D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x1010 JUMP JUMPDEST PUSH2 0x282 PUSH2 0x101D JUMP JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x3F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x102C JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x40E JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 SWAP1 SWAP5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x49B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4A3 PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD PUSH1 0x4 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x4F9 JUMPI PUSH2 0x4F5 DUP3 PUSH2 0x4EF DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x4 SLOAD PUSH2 0x1203 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x1 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 JUMPDEST PUSH1 0x1 DUP2 PUSH1 0xFF AND LT PUSH2 0x6A4 JUMPI PUSH1 0x7 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x523 JUMPI INVALID JUMPDEST ADD SLOAD DUP4 LT PUSH2 0x69B JUMPI PUSH1 0x7 PUSH1 0x1 DUP3 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x53E JUMPI INVALID JUMPDEST ADD SLOAD DUP5 LT PUSH2 0x573 JUMPI PUSH2 0x56B PUSH1 0xA DUP3 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x559 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 DUP6 DUP8 PUSH2 0x1203 JUMP JUMPDEST SWAP1 PUSH2 0x12BA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A9 PUSH1 0xA DUP4 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x588 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 PUSH1 0x7 PUSH1 0x1 DUP7 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5A0 JUMPI INVALID JUMPDEST ADD SLOAD DUP8 SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0xFF AND PUSH1 0x1 EQ ISZERO PUSH2 0x5E5 JUMPI PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA PUSH1 0x0 JUMPDEST ADD SLOAD PUSH2 0x565 DUP9 PUSH1 0x7 PUSH1 0x0 JUMPDEST ADD SLOAD SWAP1 PUSH2 0x1203 JUMP JUMPDEST DUP3 SWAP1 PUSH2 0x1260 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x1 DUP3 SUB SWAP2 POP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0xFF AND LT PUSH2 0x68C JUMPI PUSH1 0x7 PUSH1 0x1 DUP4 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x60A JUMPI INVALID JUMPDEST ADD SLOAD DUP6 LT PUSH2 0x63E JUMPI PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x628 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 DUP9 PUSH1 0x7 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5CD JUMPI INVALID JUMPDEST PUSH2 0x67E PUSH2 0x5D5 PUSH1 0xA DUP5 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x654 JUMPI INVALID JUMPDEST ADD SLOAD PUSH2 0x565 PUSH1 0x7 PUSH1 0x1 DUP8 SUB PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x66C JUMPI INVALID JUMPDEST ADD SLOAD PUSH1 0x7 DUP8 PUSH1 0xFF AND PUSH1 0x3 DUP2 LT PUSH2 0x5CD JUMPI INVALID JUMPDEST PUSH1 0x0 NOT SWAP1 SWAP3 ADD SWAP2 SWAP1 POP PUSH2 0x5EC JUMP JUMPDEST PUSH2 0x5DC PUSH2 0x5D5 PUSH1 0xA PUSH1 0x0 PUSH2 0x5C2 JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0x505 JUMP JUMPDEST POP PUSH1 0xA SLOAD PUSH2 0x6B6 SWAP1 PUSH2 0x565 DUP5 DUP7 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x6D3 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 DUP1 SLOAD PUSH1 0x5 SWAP1 SWAP3 MUL SWAP1 SWAP3 ADD SWAP3 POP DUP5 GT ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x1DDA5D1A191C985DCE881B9BDD0819DBDBD9 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x758 DUP6 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x795 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x119C JUMP JUMPDEST SWAP1 PUSH2 0x1203 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x7E7 JUMPI PUSH2 0x7A7 DUP5 DUP3 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST DUP5 ISZERO PUSH2 0x811 JUMPI DUP2 SLOAD PUSH2 0x7F9 SWAP1 DUP7 PUSH2 0x1203 JUMP JUMPDEST DUP3 SSTORE DUP3 SLOAD PUSH2 0x811 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x3 DUP4 ADD SLOAD DUP3 SLOAD PUSH2 0x82F SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x789 SWAP2 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE SWAP1 MLOAD DUP8 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x88B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0x8AC JUMPI POP PUSH2 0x9D7 JUMP JUMPDEST DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x920 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x936 JUMPI POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE PUSH2 0x9D7 JUMP JUMPDEST PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF AND PUSH2 0x967 JUMPI PUSH1 0x4 DUP1 DUP4 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 ADD SLOAD SWAP1 SLOAD PUSH2 0x963 SWAP2 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x4 SLOAD ISZERO PUSH2 0x9CE JUMPI PUSH1 0x0 PUSH2 0x97F DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x500 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x9A0 PUSH1 0x4 SLOAD PUSH2 0x789 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x9C6 PUSH2 0x9BB DUP5 PUSH2 0x789 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SLOAD SWAP1 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x3 DUP6 ADD SSTORE POP POP JUMPDEST POP TIMESTAMP PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x9E9 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP1 DUP8 MSTORE SWAP4 MSTORE DUP5 KECCAK256 DUP1 SLOAD DUP6 DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP6 SWAP1 SWAP6 SSTORE PUSH1 0x5 SWAP1 SWAP4 MUL ADD DUP1 SLOAD SWAP1 SWAP5 POP SWAP2 SWAP3 SWAP2 PUSH2 0xA39 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD DUP6 SWAP2 CALLER SWAP2 PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xABF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x8 SLOAD PUSH3 0x278D00 ADD TIMESTAMP LT ISZERO PUSH2 0xBA5 JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xB19 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x10BA37B6B1 PUSH1 0xD9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBA2 JUMPI PUSH1 0x0 PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB36 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND SWAP2 AND EQ ISZERO PUSH2 0xB99 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x10B837B7B6173A37B5B2B7 PUSH1 0xA9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xB1F JUMP JUMPDEST POP POP JUMPDEST PUSH2 0xBB9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x13C9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBF2 JUMPI PUSH2 0xBEA DUP2 PUSH2 0x87C JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xBD9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xC03 JUMPI INVALID JUMPDEST ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC1A JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP9 MSTORE SWAP1 DUP6 MSTORE DUP2 DUP8 KECCAK256 PUSH1 0x5 SWAP1 SWAP7 MUL SWAP1 SWAP4 ADD SWAP2 DUP3 ADD SLOAD DUP3 SLOAD DUP3 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP3 MLOAD SWAP4 SWAP9 POP SWAP6 SWAP7 SWAP1 SWAP6 SWAP1 SWAP5 SWAP4 AND SWAP3 PUSH4 0x70A08231 SWAP3 PUSH1 0x24 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCA6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x2 DUP6 ADD SLOAD SWAP1 SWAP2 POP TIMESTAMP GT DUP1 ISZERO PUSH2 0xCD3 JUMPI POP DUP1 ISZERO ISZERO JUMPDEST ISZERO PUSH2 0xD30 JUMPI PUSH1 0x0 PUSH2 0xCE8 DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x500 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD09 PUSH1 0x4 SLOAD PUSH2 0x789 DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xD2B PUSH2 0xD24 DUP5 PUSH2 0x789 DUP5 PUSH8 0xDE0B6B3A7640000 PUSH2 0x12BA JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x1260 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0xD5B DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDDC DUP4 PUSH2 0x141B JUMP JUMPDEST DUP2 ISZERO PUSH2 0xDEA JUMPI PUSH2 0xDEA PUSH2 0xBD3 JUMP JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0xE16 JUMPI DUP1 PUSH2 0xE02 JUMPI POP PUSH1 0x5 SLOAD PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 LT ISZERO PUSH2 0xE11 JUMPI POP PUSH1 0x5 SLOAD JUMPDEST PUSH2 0xE2A JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0xE22 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0xE2A JUMPI POP TIMESTAMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0xE3D JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH1 0x0 PUSH1 0x60 DUP5 ADD DUP2 DUP2 MSTORE DUP7 ISZERO DUP1 ISZERO PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP5 MSTORE SWAP6 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE PUSH1 0x5 SWAP1 SWAP5 MUL SWAP4 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP5 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF DUP3 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 DUP3 ADD SSTORE SWAP3 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1 DUP5 ADD SSTORE SWAP1 MLOAD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP3 ISZERO ISZERO SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE SWAP1 SWAP2 POP PUSH2 0xF80 JUMPI PUSH1 0x4 SLOAD PUSH2 0xF7C SWAP1 DUP7 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF94 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x17DB PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xC03 JUMPI INVALID JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1040 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x3 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH2 0x107A DUP6 PUSH2 0x87C JUMP JUMPDEST DUP1 SLOAD ISZERO PUSH2 0x1106 JUMPI PUSH1 0x0 PUSH2 0x10B2 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x78F PUSH8 0xDE0B6B3A7640000 PUSH2 0x789 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x12BA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1104 JUMPI PUSH2 0x10C4 DUP5 DUP3 PUSH2 0x1313 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP2 SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG2 JUMPDEST POP JUMPDEST DUP4 ISZERO PUSH2 0x1132 JUMPI DUP2 SLOAD PUSH2 0x1123 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 ADDRESS DUP8 PUSH2 0x14B5 JUMP JUMPDEST DUP1 SLOAD PUSH2 0x112F SWAP1 DUP6 PUSH2 0x1260 JUMP JUMPDEST DUP2 SSTORE JUMPDEST PUSH1 0x3 DUP3 ADD SLOAD DUP2 SLOAD PUSH2 0x1150 SWAP2 PUSH8 0xDE0B6B3A7640000 SWAP2 PUSH2 0x789 SWAP2 PUSH2 0x12BA JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD DUP7 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x11F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x11FB JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x125A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x6B6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12C9 JUMPI POP PUSH1 0x0 PUSH2 0x6B9 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x12D6 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x6B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x182B PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x135E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x13B6 JUMPI PUSH1 0x1 SLOAD PUSH2 0x13B1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 PUSH2 0x13C9 JUMP JUMPDEST PUSH2 0xBB9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0xBB9 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP5 JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0xBB9 SWAP1 DUP5 SWAP1 PUSH2 0x1515 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBB9 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x2 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1440 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x14AD JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6D62526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 ADD PUSH2 0x1421 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x150F SWAP1 DUP6 SWAP1 PUSH2 0x1515 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x156A DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x15C6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0xBB9 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1589 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0xBB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x184C PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 PUSH2 0x15D5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x15DF JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x1620 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1805 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1629 DUP6 PUSH2 0x1730 JUMP JUMPDEST PUSH2 0x167A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x16B9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x169A JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x171B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1720 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0xD5B DUP3 DUP3 DUP7 PUSH2 0x1736 JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x1745 JUMPI POP DUP2 PUSH2 0x15D8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x1755 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x179F JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1787 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x17CC JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID SLOAD PUSH16 0x6D62526577617264506F6F6C3A206361 PUSH13 0x6C6572206973206E6F74207468 PUSH6 0x206F70657261 PUSH21 0x6F72416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F77536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220BBB8D0C4 EQ DUP14 0x23 0x4A 0xB6 EXP DUP2 PUSH17 0x4FC77639B49FF849021A392E19460BD4FF PUSH6 0x4FA164736F6C PUSH4 0x4300060C STOP CALLER ",
							"sourceMap": "431:11308:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1288:26;;;;;;;;;;;;;;;;-1:-1:-1;1288:26:4;;:::i;:::-;;;;-1:-1:-1;;;;;1288:26:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:34;;;:::i;:::-;;;;;;;;;;;;;;;;4563:321;;;;;;;;;;;;;;;;-1:-1:-1;4563:321:4;;;;;;;:::i;:::-;;4963:1332;;;;;;;;;;;;;;;;-1:-1:-1;4963:1332:4;;;;;;;:::i;9274:810::-;;;;;;;;;;;;;;;;-1:-1:-1;9274:810:4;;;;;;;:::i;7469:908::-;;;;;;;;;;;;;;;;-1:-1:-1;7469:908:4;;:::i;10155:377::-;;;;;;;;;;;;;;;;-1:-1:-1;10155:377:4;;:::i;11112:624::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;11112:624:4;;;;;;;;;;;;;;;;;:::i;549:23::-;;;:::i;:::-;;;;-1:-1:-1;;;;;549:23:4;;;;;;;;;;;;;;1618:28;;;:::i;7213:180::-;;;:::i;1889:36::-;;;;;;;;;;;;;;;;-1:-1:-1;1889:36:4;;:::i;6359:771::-;;;;;;;;;;;;;;;;-1:-1:-1;6359:771:4;;;;;;-1:-1:-1;;;;;6359:771:4;;:::i;1372:64::-;;;;;;;;;;;;;;;;-1:-1:-1;1372:64:4;;;;;;-1:-1:-1;;;;;1372:64:4;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3294:1173;;;;;;;;;;;;;;;;-1:-1:-1;3294:1173:4;;;-1:-1:-1;;;;;3294:1173:4;;;;;;;;;;;;;;;;;:::i;1655:63::-;;;;;;;;;;;;;;;;-1:-1:-1;1655:63:4;;:::i;11003:101::-;;;;;;;;;;;;;;;;-1:-1:-1;11003:101:4;-1:-1:-1;;;;;11003:101:4;;:::i;1762:31::-;;;;;;;;;;;;;;;;-1:-1:-1;1762:31:4;;:::i;1234:18::-;;;:::i;8412:826::-;;;;;;;;;;;;;;;;-1:-1:-1;8412:826:4;;;;;;;:::i;1288:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1288:26:4;;;;-1:-1:-1;1288:26:4;;;;;;;:::o;1533:34::-;;;;:::o;4563:321::-;2859:8;;-1:-1:-1;;;;;2859:8:4;2871:10;2859:22;2851:77;;;;-1:-1:-1;;;2851:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4642:17:::1;:15;:17::i;:::-;4670:21;4694:8;4703:4;4694:14;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;4723;::::0;::::1;::::0;4694;;-1:-1:-1;4723:14:4::1;;4719:118;;;4772:53;4813:11;4772:36;4792:4;:15;;;4772;;:19;;:36;;;;:::i;:::-;:40:::0;::::1;:53::i;:::-;4754:15;:71:::0;4719:118:::1;4847:15;;:29:::0;-1:-1:-1;4563:321:4:o;4963:1332::-;5048:7;5089:1;5068:1153;5103:1;5092:7;:12;;;5068:1153;;5147:13;5171:1;5161:7;:11;5147:26;;;;;;;;;;;5136:7;:37;5132:1078;;5211:13;5235:1;5225:7;:11;5211:26;;;;;;;;;;;5198:9;:39;5194:150;;5269:55;5296:18;5315:7;5296:27;;;;;;;;;;;5269:22;:7;5281:9;5269:11;:22::i;:::-;:26;;:55::i;:::-;5262:62;;;;;5194:150;5364:24;5391:72;5435:18;5454:7;5435:27;;;;;;;;;;;5391:39;5403:13;5427:1;5417:7;:11;5403:26;;;;;;;;;;;5391:7;;:11;:39::i;:72::-;5364:99;;5486:7;:12;;5497:1;5486:12;5482:148;;;5530:80;5551:58;5587:18;5606:1;5587:21;;;5551:31;5572:9;5551:13;5565:1;5551:16;;;;:20;:31::i;:58::-;5530:16;;:20;:80::i;:::-;5523:87;;;;;;5482:148;5673:1;5663:7;:11;5653:21;;5648:441;5687:1;5676:7;:12;;;5648:441;;5741:13;5765:1;5755:7;:11;5741:26;;;;;;;;;;;5728:9;:39;5724:195;;5803:92;5824:70;5866:18;5885:7;5866:27;;;;;;;;;;;5824:37;5851:9;5824:13;5838:7;5824:22;;;;;;;;5724:195;5960:109;5981:87;6040:18;6059:7;6040:27;;;;;;;;;;;5981:54;6008:13;6032:1;6022:7;:11;6008:26;;;;;;;;;;;5981:13;5995:7;5981:22;;;;;;;;5960:109;-1:-1:-1;;5690:9:4;;;;5941:128;-1:-1:-1;5648:441:4;;;6114:80;6135:58;6171:18;6190:1;6171:21;;5132:1078;-1:-1:-1;;5106:9:4;5068:1153;;;-1:-1:-1;6265:18:4;:21;6238:49;;:22;:7;6250:9;6238:11;:22::i;:49::-;6231:56;;4963:1332;;;;;:::o;9274:810::-;9341:15;9359:10;9341:28;;9380:21;9404:8;9413:4;9404:14;;;;;;;;;;;;;;;;9453;;;:8;:14;;;;;;-1:-1:-1;;;;;9453:23:4;;;;;;;;;9495:11;;9404:14;;;;;;;;-1:-1:-1;9495:22:4;-1:-1:-1;9495:22:4;9487:53;;;;;-1:-1:-1;;;9487:53:4;;;;;;;;;;;;-1:-1:-1;;;9487:53:4;;;;;;;;;;;;;;;9551:16;9562:4;9551:10;:16::i;:::-;9578;9597:68;9649:4;:15;;;9597:47;9639:4;9597:37;9613:4;:20;;;9597:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47::i;:::-;:51;;:68::i;:::-;9578:87;-1:-1:-1;9680:12:4;;9676:129;;9709:35;9726:7;9735:8;9709:16;:35::i;:::-;9764:29;;;;;;;;-1:-1:-1;;;;;9764:29:4;;;;;;;;;;;;;9676:129;9819:11;;9815:138;;9861:11;;:24;;9877:7;9861:15;:24::i;:::-;9847:38;;9900:10;;:41;;-1:-1:-1;;;;;9900:10:4;9924:7;9933;9900:23;:41::i;:::-;9997:20;;;;9981:11;;:47;;10023:4;;9981:37;;:15;:37::i;:47::-;9963:15;;;:65;10044:32;;;;;;;;10062:4;;-1:-1:-1;;;;;10044:32:4;;;;;;;;;;;;9274:810;;;;;;:::o;7469:908::-;7521:21;7545:8;7554:4;7545:14;;;;;;;;;;;;;;;;;;7521:38;;7593:4;:19;;;7574:15;:38;7570:77;;7629:7;;;7570:77;7679:10;;:35;;;-1:-1:-1;;;7679:35:4;;7708:4;7679:35;;;;;;7657:19;;-1:-1:-1;;;;;7679:10:4;;:20;;:35;;;;;;;;;;;;;;:10;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7679:35:4;;-1:-1:-1;7729:16:4;7725:107;;-1:-1:-1;7784:15:4;7762:19;;;;:37;7814:7;;7725:107;7847:14;;;;;;7842:138;;7878:14;;;;:21;;-1:-1:-1;;7878:21:4;7895:4;7878:21;;;;;;7952:15;;;7932;;:36;;:19;:36::i;:::-;7914:15;:54;7842:138;7994:15;;:19;7990:332;;8030:24;8057:56;8076:4;:19;;;8097:15;8057:18;:56::i;:::-;8030:83;;8128:19;8150:58;8192:15;;8150:37;8171:4;:15;;;8150:16;:20;;:37;;;;:::i;:58::-;8128:80;-1:-1:-1;8246:64:4;8271:38;8297:11;8271:21;8128:80;8287:4;8271:15;:21::i;:38::-;8246:20;;;;;:24;:64::i;:::-;8223:20;;;:87;-1:-1:-1;;7990:332:4;-1:-1:-1;8354:15:4;8332:19;;;;:37;7469:908;;:::o;10155:377::-;10214:21;10238:8;10247:4;10238:14;;;;;;;;;;;;;;;;10287;;;:8;:14;;;;;;10302:10;10287:26;;;;;;;10342:11;;10364:15;;;-1:-1:-1;10390:15:4;;:19;;;;10238:14;;;;;10420:10;;10238:14;;-1:-1:-1;10287:26:4;;10342:11;10420:44;;-1:-1:-1;;;;;10420:10:4;;;;;10342:11;10420:23;:44::i;:::-;10480;;;;;;;;10510:4;;10498:10;;10480:44;;;;;;;;;10155:377;;;;:::o;11112:624::-;2859:8;;-1:-1:-1;;;;;2859:8:4;2871:10;2859:22;2851:77;;;;-1:-1:-1;;;2851:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11282:16;;11301:7:::1;11282:26;11264:15;:44;11260:427;;;11422:4;::::0;-1:-1:-1;;;;;11412:14:4;;::::1;11422:4:::0;::::1;11412:14;;11404:32;;;::::0;;-1:-1:-1;;;11404:32:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;11404:32:4;;;;;;;;;;;;;::::1;;11468:8;:15:::0;11451:14:::1;11498:178;11526:6;11520:3;:12;11498:178;;;11560:21;11584:8;11593:3;11584:13;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;11634:10:::0;;11584:13;;-1:-1:-1;;;;;;11624:20:4;;::::1;11634:10:::0;::::1;11624:20;;11616:44;;;::::0;;-1:-1:-1;;;11616:44:4;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;11616:44:4;;;;;;;;;;;;;::::1;;-1:-1:-1::0;11534:5:4::1;;11498:178;;;;11260:427;;11697:31;-1:-1:-1::0;;;;;11697:19:4;::::1;11717:2:::0;11721:6;11697:19:::1;:31::i;:::-;11112:624:::0;;;:::o;549:23::-;;;-1:-1:-1;;;;;549:23:4;;:::o;1618:28::-;;;;:::o;7213:180::-;7275:8;:15;7258:14;7301:85;7329:6;7323:3;:12;7301:85;;;7359:15;7370:3;7359:10;:15::i;:::-;7337:5;;7301:85;;;;7213:180;:::o;1889:36::-;;;;;;;;;;;;;-1:-1:-1;1889:36:4;:::o;6359:771::-;6432:7;6452:21;6476:8;6485:4;6476:14;;;;;;;;;;;;;;;;6525;;;:8;:14;;;;;;;-1:-1:-1;;;;;6525:21:4;;;;;;;;;;;6476:14;;;;;;;6583:20;;;;6636:10;;:35;;-1:-1:-1;;;6636:35:4;;6665:4;6636:35;;;;;;6476:14;;-1:-1:-1;6525:21:4;;6583:20;;6476:14;;6636:10;;;:20;;:35;;;;;;;;;;:10;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6636:35:4;6704:19;;;;6636:35;;-1:-1:-1;6686:15:4;:37;:57;;;;-1:-1:-1;6727:16:4;;;6686:57;6682:360;;;6760:24;6787:56;6806:4;:19;;;6827:15;6787:18;:56::i;:::-;6760:83;;6858:19;6880:58;6922:15;;6880:37;6901:4;:15;;;6880:16;:20;;:37;;;;:::i;:58::-;6858:80;-1:-1:-1;6971:59:4;6991:38;7017:11;6991:21;6858:80;7007:4;6991:15;:21::i;:38::-;6971:15;;:19;:59::i;:::-;6953:77;;6682:360;;;7059:63;7106:4;:15;;;7059:42;7096:4;7059:32;7075:15;7059:4;:11;;;:15;;:32;;;;:::i;:63::-;7052:70;6359:771;-1:-1:-1;;;;;;;6359:771:4:o;1372:64::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3294:1173::-;2859:8;;-1:-1:-1;;;;;2859:8:4;2871:10;2859:22;2851:77;;;;-1:-1:-1;;;2851:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3460:26:::1;3479:6;3460:18;:26::i;:::-;3501:11;3497:61;;;3529:17;:15;:17::i;:::-;3590:13;;3572:15;:31;3568:534;;;3657:20:::0;3653:243:::1;;-1:-1:-1::0;3716:13:4::1;::::0;3653:243:::1;;;3792:13;;3774:15;:31;3770:111;;;-1:-1:-1::0;3848:13:4::1;::::0;3770:111:::1;3568:534;;;3964:20:::0;;;:57:::1;;;4006:15;3988;:33;3964:57;3960:131;;;-1:-1:-1::0;4060:15:4::1;3960:131;4112:15;4150:13;;4131:15;:32;;4130:74;;;;4188:15;4169;:34;;4130:74;4229:126;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;4229:126:4;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;4229:126:4;;;;;;;::::1;::::0;::::1;::::0;;;;;;4215:8:::1;:141:::0;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;4215:141:4::1;::::0;;;::::1;;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4215:141:4::1;::::0;::::1;;::::0;;;::::1;::::0;;;4229:126;;-1:-1:-1;4367:93:4::1;;4416:15;::::0;:32:::1;::::0;4436:11;4416:19:::1;:32::i;:::-;4398:15;:50:::0;4367:93:::1;2939:1;3294:1173:::0;;;;:::o;1655:63::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1655:63:4;:::o;11003:101::-;2859:8;;-1:-1:-1;;;;;2859:8:4;2871:10;2859:22;2851:77;;;;-1:-1:-1;;;2851:77:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11076:8:::1;:20:::0;;-1:-1:-1;;;;;;11076:20:4::1;-1:-1:-1::0;;;;;11076:20:4;;;::::1;::::0;;;::::1;::::0;;11003:101::o;1762:31::-;;;;;;;;;1234:18;;;-1:-1:-1;;;;;1234:18:4;;:::o;8412:826::-;8478:15;8496:10;8478:28;;8517:21;8541:8;8550:4;8541:14;;;;;;;;;;;;;;;;8590;;;:8;:14;;;;;;-1:-1:-1;;;;;8590:23:4;;;;;;;;;8541:14;;;;;;;;-1:-1:-1;8624:16:4;8599:4;8624:10;:16::i;:::-;8655:11;;:15;8651:290;;8687:16;8706:68;8758:4;:15;;;8706:47;8748:4;8706:37;8722:4;:20;;;8706:4;:11;;;:15;;:37;;;;:::i;:68::-;8687:87;-1:-1:-1;8793:12:4;;8789:141;;8826:35;8843:7;8852:8;8826:16;:35::i;:::-;8885:29;;;;;;;;-1:-1:-1;;;;;8885:29:4;;;;;;;;;;;;;8789:141;8651:290;;8955:11;;8951:157;;8983:10;;:60;;-1:-1:-1;;;;;8983:10:4;9011:7;9028:4;9035:7;8983:27;:60::i;:::-;9072:11;;:24;;9088:7;9072:15;:24::i;:::-;9058:38;;8951:157;9152:20;;;;9136:11;;:47;;9178:4;;9136:37;;:15;:37::i;:47::-;9118:15;;;:65;9199:31;;;;;;;;9216:4;;-1:-1:-1;;;;;9199:31:4;;;;;;;;;;;;8412:826;;;;;:::o;4217:150:3:-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:3:o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:3;;;3136:155::o;2690:175::-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:3;;;;;;;;;;;;;;;;;;;;;;;;;;;3538:215;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:3;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10646:349:4;10741:4;;:29;;;-1:-1:-1;;;10741:29:4;;10764:4;10741:29;;;;;;10722:16;;-1:-1:-1;;;;;10741:4:4;;:14;;:29;;;;;;;;;;;;;;:4;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10741:29:4;;-1:-1:-1;10785:12:4;;10781:207;;10828:8;10818:7;:18;10814:163;;;10857:4;;:32;;-1:-1:-1;;;;;10857:4:4;10875:3;10880:8;10857:17;:32::i;:::-;10814:163;;;10930:4;;:31;;-1:-1:-1;;;;;10930:4:4;10948:3;10953:7;717:175:1;826:58;;;-1:-1:-1;;;;;826:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;826:58:1;-1:-1:-1;;;826:58:1;;;799:86;;819:5;;799:19;:86::i;2956:260:4:-;3041:8;:15;3024:14;3067:142;3095:6;3089:3;:12;3067:142;;;3156:6;-1:-1:-1;;;;;3133:29:4;:8;3142:3;3133:13;;;;;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;;;;3133:19:4;:29;;3125:72;;;;;-1:-1:-1;;;3125:72:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;3103:5;;3067:142;;898:203:1;1025:68;;;-1:-1:-1;;;;;1025:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1025:68:1;-1:-1:-1;;;1025:68:1;;;998:96;;1018:5;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;-1:-1:-1;;;;;3425:27:1;;;:69;;;;;:::i;:::-;3508:17;;3399:95;;-1:-1:-1;3508:21:1;3504:221;;3648:10;3637:30;;;;;;;;;;;;;;;-1:-1:-1;3637:30:1;3629:85;;;;-1:-1:-1;;;3629:85:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3470:223:2;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;-1:-1:-1;;;4746:81:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;-1:-1:-1;;;4837:60:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;-1:-1:-1;;;;;4950:11:2;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4950:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;727:377::-;1043:20;1089:8;;;727:377::o;7170:692::-;7316:12;7344:7;7340:516;;;-1:-1:-1;7374:10:2;7367:17;;7340:516;7485:17;;:21;7481:365;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;-1:-1:-1;;;7811:20:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1263000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"epochEndTimes(uint256)": "1140",
								"epochTombPerSecond(uint256)": "1119",
								"epochTotalRewards(uint256)": "1953",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"massUpdatePools()": "infinite",
								"operator()": "1126",
								"pendingTOMB(uint256,address)": "infinite",
								"poolInfo(uint256)": "5358",
								"poolStartTime()": "1109",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "infinite",
								"tomb()": "1125",
								"totalAllocPoint()": "1044",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2139",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safeTombTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1566,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1533,
									"end": 1567,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1533,
									"end": 1567,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH",
									"source": 4,
									"value": "C0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1693,
									"end": 1704,
									"name": "PUSH",
									"source": 4,
									"value": "10F0CF064DD592000000"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1706,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "CB49B44BA602D800000"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH",
									"source": 4,
									"value": "A0"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1655,
									"end": 1718,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2245,
									"end": 2808,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2322,
									"end": 2337,
									"name": "TIMESTAMP",
									"source": 4
								},
								{
									"begin": 2322,
									"end": 2354,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "GT",
									"source": -1
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6C617465"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "PUSH",
									"source": 4,
									"value": "64"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2314,
									"end": 2363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2378,
									"end": 2397,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2378,
									"end": 2397,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2378,
									"end": 2397,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2374,
									"end": 2419,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2374,
									"end": 2419,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2403,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "AND",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2399,
									"end": 2419,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2374,
									"end": 2419,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2374,
									"end": 2419,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2445,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2432,
									"end": 2462,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2462,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2432,
									"end": 2462,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "PUSH",
									"source": 4,
									"value": "54600"
								},
								{
									"begin": 2494,
									"end": 2516,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2494,
									"end": 2516,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2494,
									"end": 2516,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2475,
									"end": 2488,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2475,
									"end": 2516,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2557,
									"end": 2582,
									"name": "PUSH",
									"source": 4,
									"value": "BDD80"
								},
								{
									"begin": 2557,
									"end": 2582,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2557,
									"end": 2582,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2538,
									"end": 2554,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 2538,
									"end": 2582,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2648,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2510,
									"end": 2516,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2648,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2489,
									"end": 2490,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2489,
									"end": 2490,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2651,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18446744073709551697"
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2655,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2631,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2607,
									"end": 2625,
									"name": "PUSH",
									"source": 4,
									"value": "A"
								},
								{
									"begin": 2607,
									"end": 2663,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2715,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2730,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2698,
									"end": 2730,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2723,
									"end": 2729,
									"name": "PUSH",
									"source": 4,
									"value": "69780"
								},
								{
									"begin": 2723,
									"end": 2729,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2716,
									"end": 2717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2716,
									"end": 2717,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2718,
									"name": "INVALID",
									"source": 4
								},
								{
									"begin": 2698,
									"end": 2730,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 2698,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2674,
									"end": 2695,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 2674,
									"end": 2730,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2767,
									"end": 2768,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2743,
									"end": 2764,
									"name": "PUSH",
									"source": 4,
									"value": "C"
								},
								{
									"begin": 2743,
									"end": 2768,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2743,
									"end": 2768,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2743,
									"end": 2768,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2790,
									"end": 2800,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2779,
									"end": 2800,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "tag",
									"source": 3,
									"value": "18"
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4275,
									"end": 4282,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 4306,
									"end": 4307,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4303,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4302,
									"end": 4307,
									"name": "GT",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "1A"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "24"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "44"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "PUSH",
									"source": 3,
									"value": "64"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "tag",
									"source": 3,
									"value": "30"
								},
								{
									"begin": 4294,
									"end": 4338,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4359,
									"end": 4360,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4356,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "DIV",
									"source": 3
								},
								{
									"begin": 4355,
									"end": 4360,
									"name": "SWAP4",
									"source": 3
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "SWAP3",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4217,
									"end": 4367,
									"name": "JUMP",
									"source": 3,
									"value": "[out]"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "50"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 431,
									"end": 11739,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbb8d0c4148d234ab60a81704fc77639b49ff849021a392e19460bd4ff654fa164736f6c634300060c0033",
									".code": [
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "630B5BA1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "9A25CEFC"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "9A25CEFC"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "B3AB15FB"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "B89E73C1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "C040F23A"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "E2BBB158"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "630B5BA1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "7704D44E"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "89744BB4"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "93F1A40B"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "96805E54"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "51EB05A6"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "51EB05A6"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "5312EA8E"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "54575AF4"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "570CA735"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "5F96DC11"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "1526FE27"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "17CAF6F1"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "1AB06EE5"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "231F0C6A"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "441A3E70"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 431,
											"end": 11739,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1288,
											"end": 1314,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1567,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH data",
											"source": 4,
											"value": "23C2B75188D7D13D903B5CB4EC62AE0213436B5445C9258E5023F1D0545361CD"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "tag",
											"source": 4,
											"value": "85"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4659,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4657,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4642,
											"end": 4659,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4642,
											"end": 4659,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 4642,
											"end": 4659,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4691,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4702,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4703,
											"end": 4707,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4694,
											"end": 4708,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4723,
											"end": 4737,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4719,
											"end": 4837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4813,
											"end": 4824,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4792,
											"end": 4796,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4792,
											"end": 4807,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4787,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4772,
											"end": 4787,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 4772,
											"end": 4791,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 4772,
											"end": 4808,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4772,
											"end": 4812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4772,
											"end": 4825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4772,
											"end": 4825,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 4772,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4769,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4754,
											"end": 4825,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4719,
											"end": 4837,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 4719,
											"end": 4837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4847,
											"end": 4862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4876,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4563,
											"end": 4884,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5048,
											"end": 5055,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5103,
											"end": 5104,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5092,
											"end": 5099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5104,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5092,
											"end": 5104,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5092,
											"end": 5104,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5160,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5161,
											"end": 5168,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5161,
											"end": 5172,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5147,
											"end": 5173,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5136,
											"end": 5173,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5132,
											"end": 6210,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5224,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5235,
											"end": 5236,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5225,
											"end": 5232,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5225,
											"end": 5236,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5211,
											"end": 5237,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5198,
											"end": 5237,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5194,
											"end": 5344,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5296,
											"end": 5314,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5315,
											"end": 5322,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5296,
											"end": 5323,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5269,
											"end": 5276,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5281,
											"end": 5290,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5269,
											"end": 5291,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5291,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5269,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5295,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5269,
											"end": 5295,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 5269,
											"end": 5324,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5269,
											"end": 5324,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 5269,
											"end": 5324,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5324,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5324,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5262,
											"end": 5324,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5262,
											"end": 5324,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5194,
											"end": 5344,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 5194,
											"end": 5344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5435,
											"end": 5453,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5454,
											"end": 5461,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5435,
											"end": 5462,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5391,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5403,
											"end": 5416,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5427,
											"end": 5428,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5417,
											"end": 5424,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5417,
											"end": 5428,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5429,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5391,
											"end": 5398,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5391,
											"end": 5398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5391,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5391,
											"end": 5430,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5391,
											"end": 5463,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 5391,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5463,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5364,
											"end": 5463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5486,
											"end": 5498,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5486,
											"end": 5498,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5497,
											"end": 5498,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5486,
											"end": 5498,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5630,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5482,
											"end": 5630,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5551,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5587,
											"end": 5605,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5587,
											"end": 5608,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 5587,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5587,
											"end": 5608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5582,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5572,
											"end": 5581,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5564,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5565,
											"end": 5566,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5567,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5551,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 5551,
											"end": 5582,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5551,
											"end": 5609,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5551,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5530,
											"end": 5610,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5530,
											"end": 5610,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5530,
											"end": 5610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 5523,
											"end": 5610,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5482,
											"end": 5630,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 5482,
											"end": 5630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5673,
											"end": 5674,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5663,
											"end": 5670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5663,
											"end": 5674,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 5674,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5653,
											"end": 5674,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5687,
											"end": 5688,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5676,
											"end": 5683,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5688,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5754,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5765,
											"end": 5766,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5755,
											"end": 5762,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5766,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5767,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5737,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5728,
											"end": 5767,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5724,
											"end": 5919,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5803,
											"end": 5895,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 5824,
											"end": 5894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 5866,
											"end": 5884,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 5885,
											"end": 5892,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5866,
											"end": 5893,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 5851,
											"end": 5860,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5837,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5838,
											"end": 5845,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5824,
											"end": 5846,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5724,
											"end": 5919,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 5724,
											"end": 5919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5981,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6040,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6059,
											"end": 6066,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6035,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6008,
											"end": 6021,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 6032,
											"end": 6033,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6022,
											"end": 6029,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6022,
											"end": 6033,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6034,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 5994,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 5995,
											"end": 6002,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5981,
											"end": 6003,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 5960,
											"end": 6069,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5960,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5690,
											"end": 5699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5941,
											"end": 6069,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 5648,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6114,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 6135,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 6171,
											"end": 6189,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6190,
											"end": 6191,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 6171,
											"end": 6192,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5132,
											"end": 6210,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 5132,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5106,
											"end": 5115,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 5068,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 6265,
											"end": 6286,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6238,
											"end": 6287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 6238,
											"end": 6245,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6250,
											"end": 6259,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6238,
											"end": 6249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 6238,
											"end": 6260,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6238,
											"end": 6287,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 6238,
											"end": 6287,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6287,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6287,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4963,
											"end": 6295,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9359,
											"end": 9369,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9380,
											"end": 9401,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9412,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9413,
											"end": 9417,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9461,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9467,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9453,
											"end": 9476,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9495,
											"end": 9506,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9495,
											"end": 9506,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9404,
											"end": 9418,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9495,
											"end": 9517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 9495,
											"end": 9517,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DCE881B9BDD0819DBDBD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 9487,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9551,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9562,
											"end": 9566,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9551,
											"end": 9561,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 9551,
											"end": 9567,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9551,
											"end": 9567,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 9551,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9649,
											"end": 9653,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9649,
											"end": 9664,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9649,
											"end": 9664,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9649,
											"end": 9664,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9639,
											"end": 9643,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9613,
											"end": 9617,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9613,
											"end": 9633,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9613,
											"end": 9633,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9613,
											"end": 9633,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9601,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9597,
											"end": 9608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9608,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9612,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9597,
											"end": 9612,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9597,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9638,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 9597,
											"end": 9644,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9597,
											"end": 9644,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 9597,
											"end": 9644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9648,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9597,
											"end": 9648,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9597,
											"end": 9665,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9597,
											"end": 9665,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 9597,
											"end": 9665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9578,
											"end": 9665,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9680,
											"end": 9692,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9680,
											"end": 9692,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9676,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9676,
											"end": 9805,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9744,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9726,
											"end": 9733,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9735,
											"end": 9743,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9709,
											"end": 9725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 9709,
											"end": 9744,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9709,
											"end": 9744,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 9709,
											"end": 9744,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "PUSH",
											"source": 4,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9764,
											"end": 9793,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 9676,
											"end": 9805,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 9676,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9819,
											"end": 9830,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9819,
											"end": 9830,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9815,
											"end": 9953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 9815,
											"end": 9953,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9861,
											"end": 9872,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9861,
											"end": 9872,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9861,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9861,
											"end": 9885,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9877,
											"end": 9884,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9861,
											"end": 9876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 9861,
											"end": 9885,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9861,
											"end": 9885,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 9861,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9885,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9847,
											"end": 9885,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9910,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9910,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 9900,
											"end": 9941,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9900,
											"end": 9910,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9924,
											"end": 9931,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9933,
											"end": 9940,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9900,
											"end": 9923,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 9900,
											"end": 9941,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9900,
											"end": 9941,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 9900,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9997,
											"end": 10017,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 9992,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 9992,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 10028,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9981,
											"end": 10028,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10023,
											"end": 10027,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 10018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9981,
											"end": 10018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9981,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9981,
											"end": 10018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9981,
											"end": 10028,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 9981,
											"end": 10028,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 9978,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9963,
											"end": 9978,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 9978,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9963,
											"end": 10028,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10062,
											"end": 10066,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10062,
											"end": 10066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "PUSH",
											"source": 4,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10044,
											"end": 10076,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9274,
											"end": 10084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7542,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7553,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7554,
											"end": 7558,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 7545,
											"end": 7559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7521,
											"end": 7559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7612,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7593,
											"end": 7612,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7593,
											"end": 7612,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7589,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7574,
											"end": 7612,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7647,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7570,
											"end": 7647,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7629,
											"end": 7636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7629,
											"end": 7636,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7570,
											"end": 7647,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7570,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7708,
											"end": 7712,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7657,
											"end": 7676,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7657,
											"end": 7676,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7699,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 7679,
											"end": 7699,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7679,
											"end": 7714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7729,
											"end": 7745,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7725,
											"end": 7832,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7784,
											"end": 7799,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7781,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7762,
											"end": 7799,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7814,
											"end": 7821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7814,
											"end": 7821,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7725,
											"end": 7832,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 7725,
											"end": 7832,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 7847,
											"end": 7861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7842,
											"end": 7980,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7842,
											"end": 7980,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7892,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7878,
											"end": 7892,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7892,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7892,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7899,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7878,
											"end": 7899,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7952,
											"end": 7967,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7947,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7932,
											"end": 7968,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7932,
											"end": 7951,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 7932,
											"end": 7968,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7932,
											"end": 7968,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 7932,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7914,
											"end": 7929,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7914,
											"end": 7968,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7842,
											"end": 7980,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 7842,
											"end": 7980,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7994,
											"end": 8009,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7994,
											"end": 8009,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7994,
											"end": 8013,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7990,
											"end": 8322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7990,
											"end": 8322,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8076,
											"end": 8080,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8076,
											"end": 8095,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8076,
											"end": 8095,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8076,
											"end": 8095,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8097,
											"end": 8112,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8057,
											"end": 8075,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 8057,
											"end": 8113,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8057,
											"end": 8113,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 8057,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8030,
											"end": 8113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8147,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8150,
											"end": 8208,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8192,
											"end": 8207,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8192,
											"end": 8207,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8171,
											"end": 8175,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8186,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8171,
											"end": 8186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8171,
											"end": 8186,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8166,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8150,
											"end": 8170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8150,
											"end": 8187,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8150,
											"end": 8208,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 8150,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8128,
											"end": 8208,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8246,
											"end": 8310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8271,
											"end": 8309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8297,
											"end": 8308,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8271,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8128,
											"end": 8208,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8287,
											"end": 8291,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8271,
											"end": 8286,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8271,
											"end": 8292,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8309,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 8271,
											"end": 8309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8266,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8246,
											"end": 8266,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8266,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8266,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8246,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 8246,
											"end": 8310,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8246,
											"end": 8310,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 8246,
											"end": 8310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8243,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8223,
											"end": 8310,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7990,
											"end": 8322,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 7990,
											"end": 8322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8354,
											"end": 8369,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8351,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8332,
											"end": 8351,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8351,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8351,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8332,
											"end": 8369,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7469,
											"end": 8377,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10214,
											"end": 10235,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10246,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10247,
											"end": 10251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10295,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10301,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10302,
											"end": 10312,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10353,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10353,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10364,
											"end": 10379,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10364,
											"end": 10379,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10364,
											"end": 10379,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 10390,
											"end": 10405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10405,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 10390,
											"end": 10409,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10238,
											"end": 10252,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10287,
											"end": 10313,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10353,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10420,
											"end": 10464,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10342,
											"end": 10353,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10420,
											"end": 10443,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10420,
											"end": 10464,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10420,
											"end": 10464,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10420,
											"end": 10464,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10510,
											"end": 10514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10508,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 10498,
											"end": 10508,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "PUSH",
											"source": 4,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10480,
											"end": 10524,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10155,
											"end": 10532,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH data",
											"source": 4,
											"value": "23C2B75188D7D13D903B5CB4EC62AE0213436B5445C9258E5023F1D0545361CD"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11282,
											"end": 11298,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 11282,
											"end": 11298,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11301,
											"end": 11308,
											"name": "PUSH",
											"source": 4,
											"value": "278D00"
										},
										{
											"begin": 11282,
											"end": 11308,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11264,
											"end": 11279,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 11264,
											"end": 11308,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11422,
											"end": 11426,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11422,
											"end": 11426,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11412,
											"end": 11426,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11426,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11426,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11422,
											"end": 11426,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11422,
											"end": 11426,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11426,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11412,
											"end": 11426,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10BA37B6B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 11404,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11468,
											"end": 11476,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11468,
											"end": 11483,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11451,
											"end": 11465,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11526,
											"end": 11532,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11520,
											"end": 11532,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11560,
											"end": 11581,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11592,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 11593,
											"end": 11596,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11634,
											"end": 11644,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11634,
											"end": 11644,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11584,
											"end": 11597,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11634,
											"end": 11644,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11634,
											"end": 11644,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 11624,
											"end": 11644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "B"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "10B837B7B6173A37B5B2B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 11616,
											"end": 11660,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11534,
											"end": 11539,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 11534,
											"end": 11539,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11498,
											"end": 11676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 11260,
											"end": 11687,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11697,
											"end": 11716,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11716,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11717,
											"end": 11719,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11721,
											"end": 11727,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11697,
											"end": 11716,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 11697,
											"end": 11728,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 11697,
											"end": 11728,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 11697,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11112,
											"end": 11736,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 572,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 549,
											"end": 572,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 549,
											"end": 572,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1646,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7275,
											"end": 7283,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 7275,
											"end": 7290,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7258,
											"end": 7272,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7329,
											"end": 7335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7323,
											"end": 7335,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7374,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7370,
											"end": 7373,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7359,
											"end": 7369,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 7359,
											"end": 7374,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7359,
											"end": 7374,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 7359,
											"end": 7374,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7337,
											"end": 7342,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7337,
											"end": 7342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7301,
											"end": 7386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7213,
											"end": 7393,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "A"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "tag",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1889,
											"end": 1925,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6432,
											"end": 6439,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6452,
											"end": 6473,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6484,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6485,
											"end": 6489,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6533,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6539,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP12",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6669,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP9",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6525,
											"end": 6546,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6583,
											"end": 6603,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6476,
											"end": 6490,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6656,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 6636,
											"end": 6656,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6646,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6704,
											"end": 6723,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6636,
											"end": 6671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6686,
											"end": 6701,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 6723,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6727,
											"end": 6743,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6727,
											"end": 6743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6727,
											"end": 6743,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 6686,
											"end": 6743,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6760,
											"end": 6784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6787,
											"end": 6843,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6806,
											"end": 6810,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6825,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6806,
											"end": 6825,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6806,
											"end": 6825,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6842,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 6787,
											"end": 6805,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 6787,
											"end": 6843,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6787,
											"end": 6843,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 6787,
											"end": 6843,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6760,
											"end": 6843,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6760,
											"end": 6843,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6858,
											"end": 6877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6938,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6922,
											"end": 6937,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6922,
											"end": 6937,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6901,
											"end": 6905,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6916,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6901,
											"end": 6916,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6916,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6896,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6900,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6880,
											"end": 6900,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6880,
											"end": 6917,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6880,
											"end": 6938,
											"name": "tag",
											"source": 4,
											"value": "227"
										},
										{
											"begin": 6880,
											"end": 6938,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6858,
											"end": 6938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6971,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6991,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7017,
											"end": 7028,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6991,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 6858,
											"end": 6938,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7007,
											"end": 7011,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6991,
											"end": 7006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 6991,
											"end": 7012,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6991,
											"end": 7029,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 6991,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6971,
											"end": 6986,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6971,
											"end": 6986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6971,
											"end": 6990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 6971,
											"end": 7030,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6971,
											"end": 7030,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 6971,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 7030,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 7030,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 6682,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7106,
											"end": 7110,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7106,
											"end": 7121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 7096,
											"end": 7100,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 7075,
											"end": 7090,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7063,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7070,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 7059,
											"end": 7074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7059,
											"end": 7091,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "tag",
											"source": 4,
											"value": "232"
										},
										{
											"begin": 7059,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7052,
											"end": 7122,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6359,
											"end": 7130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1372,
											"end": 1436,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH data",
											"source": 4,
											"value": "23C2B75188D7D13D903B5CB4EC62AE0213436B5445C9258E5023F1D0545361CD"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "tag",
											"source": 4,
											"value": "236"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3479,
											"end": 3485,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3460,
											"end": 3478,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "tag",
											"source": 4,
											"value": "238"
										},
										{
											"begin": 3460,
											"end": 3486,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3501,
											"end": 3512,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3497,
											"end": 3558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3529,
											"end": 3544,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "tag",
											"source": 4,
											"value": "241"
										},
										{
											"begin": 3529,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3590,
											"end": 3603,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3590,
											"end": 3603,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3587,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3572,
											"end": 3603,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3677,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3716,
											"end": 3729,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 3653,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3792,
											"end": 3805,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3792,
											"end": 3805,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3789,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 3805,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3848,
											"end": 3861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 3770,
											"end": 3881,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 3568,
											"end": 4102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 3984,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4006,
											"end": 4021,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4003,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3988,
											"end": 4021,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3964,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 3960,
											"end": 4091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4112,
											"end": 4127,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4163,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4150,
											"end": 4163,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4131,
											"end": 4163,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4188,
											"end": 4203,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4184,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4169,
											"end": 4203,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 4130,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "A0"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4223,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACF"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD1"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "PUSH",
											"source": 4,
											"value": "405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD2"
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4215,
											"end": 4356,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4355,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4367,
											"end": 4460,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4367,
											"end": 4460,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4431,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4416,
											"end": 4431,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4447,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4416,
											"end": 4435,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 4416,
											"end": 4448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4398,
											"end": 4413,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4398,
											"end": 4448,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 4367,
											"end": 4460,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 4367,
											"end": 4460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3294,
											"end": 4467,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1655,
											"end": 1718,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2859,
											"end": 2867,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2871,
											"end": 2881,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2859,
											"end": 2881,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH data",
											"source": 4,
											"value": "23C2B75188D7D13D903B5CB4EC62AE0213436B5445C9258E5023F1D0545361CD"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "2A"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "CODECOPY",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2851,
											"end": 2928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11084,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11076,
											"end": 11096,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 11003,
											"end": 11104,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "215"
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1762,
											"end": 1793,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1252,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8496,
											"end": 8506,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8506,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8478,
											"end": 8506,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8517,
											"end": 8538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8549,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 8550,
											"end": 8554,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8598,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8590,
											"end": 8613,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8541,
											"end": 8555,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 8599,
											"end": 8603,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8624,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 8624,
											"end": 8640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8655,
											"end": 8666,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8655,
											"end": 8666,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8655,
											"end": 8670,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8651,
											"end": 8941,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 8651,
											"end": 8941,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8703,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8758,
											"end": 8762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8773,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8758,
											"end": 8773,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8758,
											"end": 8773,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 8748,
											"end": 8752,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 8722,
											"end": 8726,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8722,
											"end": 8742,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8710,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8717,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 8706,
											"end": 8721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8706,
											"end": 8743,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8706,
											"end": 8774,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 8706,
											"end": 8774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8687,
											"end": 8774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8793,
											"end": 8805,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8789,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8789,
											"end": 8930,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8843,
											"end": 8850,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8852,
											"end": 8860,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 8826,
											"end": 8861,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8826,
											"end": 8861,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 8826,
											"end": 8861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "PUSH",
											"source": 4,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8885,
											"end": 8914,
											"name": "LOG2",
											"source": 4
										},
										{
											"begin": 8789,
											"end": 8930,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8789,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8651,
											"end": 8941,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8651,
											"end": 8941,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 8651,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8955,
											"end": 8966,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8951,
											"end": 9108,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8983,
											"end": 9043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8993,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9011,
											"end": 9018,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9028,
											"end": 9032,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9042,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 8983,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8983,
											"end": 9043,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8983,
											"end": 9043,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8983,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9072,
											"end": 9083,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9072,
											"end": 9083,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9072,
											"end": 9096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9072,
											"end": 9096,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9088,
											"end": 9095,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9072,
											"end": 9087,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 9072,
											"end": 9096,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9072,
											"end": 9096,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9072,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9058,
											"end": 9096,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 8951,
											"end": 9108,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 8951,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9152,
											"end": 9172,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9152,
											"end": 9172,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9152,
											"end": 9172,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9152,
											"end": 9172,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9147,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9136,
											"end": 9183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "PUSH",
											"source": 4,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9178,
											"end": 9182,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9173,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 9136,
											"end": 9173,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9136,
											"end": 9151,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 9136,
											"end": 9173,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9136,
											"end": 9183,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9136,
											"end": 9183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9133,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9118,
											"end": 9183,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9216,
											"end": 9220,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9216,
											"end": 9220,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"source": 4,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9199,
											"end": 9230,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8412,
											"end": 9238,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 3,
											"value": "81"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 3,
											"value": "277"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 3,
											"value": "278"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 3,
											"value": "280"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 3,
											"value": "94"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 3,
											"value": "109"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "95"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 3,
											"value": "284"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "153"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 3,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10646,
											"end": 10995,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 10646,
											"end": 10995,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10764,
											"end": 10768,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10722,
											"end": 10738,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10722,
											"end": 10738,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10755,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 10741,
											"end": 10755,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10745,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10741,
											"end": 10770,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10785,
											"end": 10797,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10785,
											"end": 10797,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10781,
											"end": 10988,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10781,
											"end": 10988,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10828,
											"end": 10836,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10825,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10818,
											"end": 10836,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10857,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10857,
											"end": 10889,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10857,
											"end": 10861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10875,
											"end": 10878,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10880,
											"end": 10888,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10857,
											"end": 10874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 10857,
											"end": 10889,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 10857,
											"end": 10889,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 10857,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 10814,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 10930,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 10930,
											"end": 10961,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10930,
											"end": 10934,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10948,
											"end": 10951,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10953,
											"end": 10960,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 819,
											"end": 824,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2956,
											"end": 3216,
											"name": "tag",
											"source": 4,
											"value": "239"
										},
										{
											"begin": 2956,
											"end": 3216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3049,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3041,
											"end": 3056,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3024,
											"end": 3038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3092,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3089,
											"end": 3101,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3141,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3142,
											"end": 3145,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "INVALID",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3146,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3152,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3133,
											"end": 3152,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "1E"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "546F6D62526577617264506F6F6C3A206578697374696E6720706F6F6C3F0000"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "PUSH",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 3125,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3103,
											"end": 3108,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 3067,
											"end": 3209,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 1,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 2,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 2,
											"value": "320"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 2,
											"value": "322"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "323"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "328"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 2,
											"value": "327"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 2,
											"value": "321"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "315"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 2,
											"value": "333"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 2,
											"value": "335"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 2
										}
									],
									".data": {
										"23C2B75188D7D13D903B5CB4EC62AE0213436B5445C9258E5023F1D0545361CD": "546f6d62526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"epochEndTimes(uint256)": "b89e73c1",
							"epochTombPerSecond(uint256)": "7704d44e",
							"epochTotalRewards(uint256)": "9a25cefc",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"pendingTOMB(uint256,address)": "89744bb4",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"tomb()": "c040f23a",
							"totalAllocPoint()": "17caf6f1",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tomb\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochEndTimes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochTombPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"epochTotalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingTOMB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accTombPerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tomb\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TombRewardPool.sol\":\"TombRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TombRewardPool.sol\":{\"keccak256\":\"0x4eb201b31fc7f1806403f27422920fe78c68a2b1c7f1d6b531914ba678fdc1cb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://707a826644a3f33083b411969d1acc9ac5b3d0fbf1288c1185bb9a0a0c1cdb2c\",\"dweb:/ipfs/QmeQoamFAf49J3xJju9RDyEA1oJPmWqe4s6rb7uYvN8HqH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 987,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "operator",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1005,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "tomb",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)77"
							},
							{
								"astId": 1008,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "2",
								"type": "t_array(t_struct(PoolInfo)1003_storage)dyn_storage"
							},
							{
								"astId": 1014,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)992_storage))"
							},
							{
								"astId": 1017,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1019,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1025,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "epochTotalRewards",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)dyn_storage"
							},
							{
								"astId": 1029,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "epochEndTimes",
								"offset": 0,
								"slot": "7",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 1033,
								"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
								"label": "epochTombPerSecond",
								"offset": 0,
								"slot": "10",
								"type": "t_array(t_uint256)3_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1003_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1003_storage",
								"encoding": "dynamic_array",
								"label": "struct TombRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)3_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[3]",
								"numberOfBytes": "96"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)77": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)992_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct TombRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)992_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)992_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)992_storage)"
							},
							"t_struct(PoolInfo)1003_storage": {
								"encoding": "inplace",
								"label": "struct TombRewardPool.PoolInfo",
								"members": [
									{
										"astId": 994,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)77"
									},
									{
										"astId": 996,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 998,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1000,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "accTombPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1002,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)992_storage": {
								"encoding": "inplace",
								"label": "struct TombRewardPool.UserInfo",
								"members": [
									{
										"astId": 989,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 991,
										"contract": "contracts/distribution/TombRewardPool.sol:TombRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 8,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 8,
												"src": "278:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:9:0"
									},
									"scope": 77,
									"src": "232:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "389:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:17:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "429:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:9:0"
									},
									"scope": 77,
									"src": "370:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "676:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:35:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 26,
												"src": "729:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 23,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:6:0"
									},
									"scope": 77,
									"src": "658:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1044:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:32:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 36,
												"src": "1084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:9:0"
									},
									"scope": 77,
									"src": "1010:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 46,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1780:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:33:0"
									},
									"returnParameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 46,
												"src": "1814:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 43,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1813:6:0"
									},
									"scope": 77,
									"src": "1746:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2158:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2182:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2209:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2148:81:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 58,
												"src": "2248:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2247:6:0"
									},
									"scope": 77,
									"src": "2127:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 67,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2438:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2460:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2480:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2437:57:0"
									},
									"src": "2423:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 76,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2669:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2692:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 74,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 76,
												"src": "2717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2668:63:0"
									},
									"src": "2654:78:0"
								}
							],
							"scope": 78,
							"src": "138:2596:0"
						}
					],
					"src": "33:2702:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							290
						]
					},
					"id": 291,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 80,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 78,
							"src": "66:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 81,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 588,
							"src": "90:36:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 82,
							"nodeType": "ImportDirective",
							"scope": 291,
							"sourceUnit": 975,
							"src": "127:42:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 83,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:1",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 290,
							"linearizedBaseContracts": [
								290
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 86,
									"libraryName": {
										"contractScope": null,
										"id": 84,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 974,
										"src": "659:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$974",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:1",
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 89,
									"libraryName": {
										"contractScope": null,
										"id": 87,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 587,
										"src": "691:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$587",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:1",
									"typeName": {
										"id": 88,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "789:103:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "819:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 102,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "849:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 26,
																		"src": "849:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "849:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 105,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "874:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 106,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 95,
																	"src": "878:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "826:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "826:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 98,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "799:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "799:86:1"
											}
										]
									},
									"documentation": null,
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "739:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 90,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "739:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "753:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 111,
												"src": "765:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:41:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:1"
									},
									"scope": 290,
									"src": "717:175:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "988:113:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 123,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 113,
															"src": "1018:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 126,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 113,
																			"src": "1048:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 58,
																		"src": "1048:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1048:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 129,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 115,
																	"src": "1077:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 130,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 117,
																	"src": "1083:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 131,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 119,
																	"src": "1087:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1025:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1025:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 122,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "998:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "998:96:1"
											}
										]
									},
									"documentation": null,
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "924:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 112,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "924:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "938:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "952:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "964:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "923:55:1"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:1"
									},
									"scope": 290,
									"src": "898:203:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 178,
										"nodeType": "Block",
										"src": "1437:537:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 147,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 143,
																			"src": "1726:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 148,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 155,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1766:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$290",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$290",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 153,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 156,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 157,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 141,
																					"src": "1773:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 151,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 139,
																					"src": "1742:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 152,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 36,
																				"src": "1742:15:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 146,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1717:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "1897:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 170,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 139,
																			"src": "1927:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "1927:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1927:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 173,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "1951:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 174,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 143,
																	"src": "1960:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 168,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1904:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 169,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1904:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 166,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1877:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:1"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:1",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 179,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1382:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 138,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "1382:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1396:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 179,
												"src": "1413:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1381:46:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:1"
									},
									"scope": 290,
									"src": "1361:613:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2066:197:1",
										"statements": [
											{
												"assignments": [
													189
												],
												"declarations": [
													{
														"constant": false,
														"id": 189,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 214,
														"src": "2076:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 188,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 201,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 199,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "2143:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 194,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2123:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 192,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 196,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2130:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 190,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 181,
																	"src": "2099:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2099:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 769,
														"src": "2099:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 203,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "2179:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 206,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 181,
																			"src": "2209:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2209:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2209:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 209,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "2233:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 210,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 189,
																	"src": "2242:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 204,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2186:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2186:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 202,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2159:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:1"
											}
										]
									},
									"documentation": null,
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2011:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 180,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2011:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 215,
												"src": "2042:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2010:46:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:1"
									},
									"scope": 290,
									"src": "1980:283:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 251,
										"nodeType": "Block",
										"src": "2355:242:1",
										"statements": [
											{
												"assignments": [
													225
												],
												"declarations": [
													{
														"constant": false,
														"id": 225,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 251,
														"src": "2365:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 224,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "2432:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 230,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2412:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$290",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 228,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 232,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2419:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 226,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "2388:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 36,
																"src": "2388:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 893,
														"src": "2388:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 240,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "2513:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 243,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 217,
																			"src": "2543:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 46,
																		"src": "2543:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2543:22:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 246,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "2567:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 247,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "2576:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 241,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2520:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2520:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 239,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "2493:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:1"
											}
										]
									},
									"documentation": null,
									"id": 252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2300:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 216,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2314:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 252,
												"src": "2331:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:46:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:1"
									},
									"scope": 290,
									"src": "2269:328:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3050:681:1",
										"statements": [
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 288,
														"src": "3399:23:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 260,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 270,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 267,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 257,
															"src": "3453:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 264,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "3433:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 263,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 262,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 381,
														"src": "3425:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:1"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 271,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "3508:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3508:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 287,
												"nodeType": "IfStatement",
												"src": "3504:221:1",
												"trueBody": {
													"id": 286,
													"nodeType": "Block",
													"src": "3531:194:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 278,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "3648:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 280,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 279,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 281,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 276,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3637:3:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 277,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3637:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:1",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 275,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3629:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:1",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "3009:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 254,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "3023:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:33:1"
									},
									"returnParameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:1"
									},
									"scope": 290,
									"src": "2980:751:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 291,
							"src": "629:3104:1"
						}
					],
					"src": "33:3700:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							587
						]
					},
					"id": 588,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 292,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 293,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:2",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 587,
							"linearizedBaseContracts": [
								587
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "793:311:2",
										"statements": [
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 309,
														"src": "990:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 301,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 303,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:2"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 296,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:2",
														"valueSize": 1
													},
													{
														"declaration": 302,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:2",
														"valueSize": 1
													}
												],
												"id": 304,
												"nodeType": "InlineAssembly",
												"src": "1012:61:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 305,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1089:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 306,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 300,
												"id": 308,
												"nodeType": "Return",
												"src": "1082:15:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:2",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "747:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 310,
												"src": "787:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:6:2"
									},
									"scope": 587,
									"src": "727:377:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "2092:241:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 321,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2118:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		],
																		"id": 320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 319,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2110:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 324,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2135:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 318,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2102:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:2"
											},
											{
												"assignments": [
													330,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 330,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 343,
														"src": "2187:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 329,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 337,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 331,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "2205:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2205:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 333,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 315,
																"src": "2227:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 339,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "2256:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2248:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:2"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:2",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "2040:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:2",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "2067:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2039:43:2"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:2"
									},
									"scope": 587,
									"src": "2021:312:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "3164:84:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 355,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "3194:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 356,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "3202:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 354,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															381
														],
														"referencedDeclaration": 381,
														"src": "3181:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 353,
												"id": 359,
												"nodeType": "Return",
												"src": "3174:67:2"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:2",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3097:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3113:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 348,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:35:2"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 361,
												"src": "3150:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3149:14:2"
									},
									"scope": 587,
									"src": "3075:173:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "3617:76:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 374,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "3656:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3664:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 377,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "3673:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 373,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															451
														],
														"referencedDeclaration": 451,
														"src": "3634:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 372,
												"id": 379,
												"nodeType": "Return",
												"src": "3627:59:2"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3501:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3525:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3552:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:93:2"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 381,
												"src": "3603:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 370,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:14:2"
									},
									"scope": 587,
									"src": "3470:223:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "4198:111:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 394,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "4237:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "4245:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 396,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "4251:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 393,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															401,
															451
														],
														"referencedDeclaration": 451,
														"src": "4215:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 392,
												"id": 399,
												"nodeType": "Return",
												"src": "4208:94:2"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4095:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4119:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 385,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4146:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4085:80:2"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 401,
												"src": "4184:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 390,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4183:14:2"
									},
									"scope": 587,
									"src": "4055:254:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 450,
										"nodeType": "Block",
										"src": "4736:320:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 418,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4762:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$587",
																				"typeString": "library Address"
																			}
																		],
																		"id": 417,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 416,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 419,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4754:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 421,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "4779:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 415,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4746:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 428,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 404,
																	"src": "4856:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 427,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "4845:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 430,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 426,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4837:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 432,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:2"
											},
											{
												"assignments": [
													434,
													436
												],
												"declarations": [
													{
														"constant": false,
														"id": 434,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "4909:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 433,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 436,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 450,
														"src": "4923:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 435,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "4976:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 437,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 404,
																"src": "4950:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4950:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 439,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 408,
																"src": "4969:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 445,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 434,
															"src": "5015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 446,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "5024:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 447,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "5036:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 444,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "4998:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 414,
												"id": 449,
												"nodeType": "Return",
												"src": "4991:58:2"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:2",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4597:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4621:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4648:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4671:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4587:116:2"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "4722:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4721:14:2"
									},
									"scope": 587,
									"src": "4557:499:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 467,
										"nodeType": "Block",
										"src": "5333:97:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 462,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 454,
															"src": "5369:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "5377:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 464,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 461,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															468,
															503
														],
														"referencedDeclaration": 503,
														"src": "5350:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 460,
												"id": 466,
												"nodeType": "Return",
												"src": "5343:80:2"
											}
										]
									},
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5277:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 455,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5260:35:2"
									},
									"returnParameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 468,
												"src": "5319:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:14:2"
									},
									"scope": 587,
									"src": "5233:197:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "5772:228:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 482,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 471,
																	"src": "5801:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 481,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "5790:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5782:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 486,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:2"
											},
											{
												"assignments": [
													488,
													490
												],
												"declarations": [
													{
														"constant": false,
														"id": 488,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 502,
														"src": "5861:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 487,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 490,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 502,
														"src": "5875:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 489,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 495,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 493,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "5920:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 491,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 471,
															"src": "5902:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 492,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5902:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 497,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "5959:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 498,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "5968:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 499,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5980:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 496,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "5942:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 479,
												"id": 501,
												"nodeType": "Return",
												"src": "5935:58:2"
											}
										]
									},
									"documentation": {
										"id": 469,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5651:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5675:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 472,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5702:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 474,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:93:2"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 503,
												"src": "5758:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 477,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5757:14:2"
									},
									"scope": 587,
									"src": "5614:386:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 519,
										"nodeType": "Block",
										"src": "6276:101:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 514,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "6314:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 515,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "6322:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 513,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															520,
															555
														],
														"referencedDeclaration": 555,
														"src": "6293:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 512,
												"id": 518,
												"nodeType": "Return",
												"src": "6286:84:2"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6209:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6225:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6208:35:2"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 520,
												"src": "6262:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 510,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6261:14:2"
									},
									"scope": 587,
									"src": "6179:198:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6718:232:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 534,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "6747:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 533,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "6736:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 532,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6728:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:2"
											},
											{
												"assignments": [
													540,
													542
												],
												"declarations": [
													{
														"constant": false,
														"id": 540,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 554,
														"src": "6809:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 539,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 542,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 554,
														"src": "6823:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 541,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 545,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "6870:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 543,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 523,
															"src": "6850:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6850:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 549,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "6909:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 550,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "6918:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 551,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "6930:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 548,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 586,
														"src": "6892:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 531,
												"id": 553,
												"nodeType": "Return",
												"src": "6885:58:2"
											}
										]
									},
									"documentation": {
										"id": 521,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:2",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6602:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6626:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6653:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 526,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6592:93:2"
									},
									"returnParameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 555,
												"src": "6704:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 529,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6703:14:2"
									},
									"scope": 587,
									"src": "6563:387:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 585,
										"nodeType": "Block",
										"src": "7330:532:2",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 567,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 558,
													"src": "7344:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 583,
													"nodeType": "Block",
													"src": "7401:455:2",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 571,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "7485:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7485:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 581,
																"nodeType": "Block",
																"src": "7793:53:2",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 578,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 562,
																					"src": "7818:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 577,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7811:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 580,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:2"
																	}
																]
															},
															"id": 582,
															"nodeType": "IfStatement",
															"src": "7481:365:2",
															"trueBody": {
																"id": 576,
																"nodeType": "Block",
																"src": "7508:279:2",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:2",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:2",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:2"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:2"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:2",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:2",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:2"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:2"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:2"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:2"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:2"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:2",
																				"valueSize": 1
																			},
																			{
																				"declaration": 560,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:2",
																				"valueSize": 1
																			}
																		],
																		"id": 575,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:2"
																	}
																]
															}
														}
													]
												},
												"id": 584,
												"nodeType": "IfStatement",
												"src": "7340:516:2",
												"trueBody": {
													"id": 570,
													"nodeType": "Block",
													"src": "7353:42:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 568,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 560,
																"src": "7374:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 566,
															"id": 569,
															"nodeType": "Return",
															"src": "7367:17:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:2",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7205:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 557,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7227:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7260:26:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7195:97:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 586,
												"src": "7316:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7315:14:2"
									},
									"scope": 587,
									"src": "7170:692:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 588,
							"src": "135:7729:2"
						}
					],
					"src": "33:7832:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							974
						]
					},
					"id": 975,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 589,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 590,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:3",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 974,
							"linearizedBaseContracts": [
								974
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 620,
										"nodeType": "Block",
										"src": "865:98:3",
										"statements": [
											{
												"assignments": [
													603
												],
												"declarations": [
													{
														"constant": false,
														"id": 603,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 620,
														"src": "875:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 607,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 604,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "887:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 605,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 595,
														"src": "891:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 608,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 603,
														"src": "906:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 609,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 593,
														"src": "910:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 615,
												"nodeType": "IfStatement",
												"src": "902:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 611,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 613,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 601,
													"id": 614,
													"nodeType": "Return",
													"src": "913:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 617,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "954:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 618,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 601,
												"id": 619,
												"nodeType": "Return",
												"src": "940:16:3"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:3",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "805:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "816:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:3"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "850:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 597,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "856:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:3"
									},
									"scope": 974,
									"src": "789:174:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "1185:75:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 633,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 626,
														"src": "1199:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 634,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "1203:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 640,
												"nodeType": "IfStatement",
												"src": "1195:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 638,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 632,
													"id": 639,
													"nodeType": "Return",
													"src": "1206:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 642,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 624,
																"src": "1247:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 643,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 626,
																"src": "1251:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 645,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 632,
												"id": 646,
												"nodeType": "Return",
												"src": "1233:20:3"
											}
										]
									},
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:3",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1125:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:3"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1170:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 648,
												"src": "1176:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:3"
									},
									"scope": 974,
									"src": "1109:151:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "1484:359:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 660,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1716:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 661,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 667,
												"nodeType": "IfStatement",
												"src": "1712:28:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 663,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 665,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 659,
													"id": 666,
													"nodeType": "Return",
													"src": "1724:16:3"
												}
											},
											{
												"assignments": [
													669
												],
												"declarations": [
													{
														"constant": false,
														"id": 669,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 688,
														"src": "1750:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 668,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 673,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 670,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "1762:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 671,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1766:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:3"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 674,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1781:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 675,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "1785:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "1790:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 683,
												"nodeType": "IfStatement",
												"src": "1777:33:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 681,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 659,
													"id": 682,
													"nodeType": "Return",
													"src": "1793:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 685,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "1834:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 686,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 659,
												"id": 687,
												"nodeType": "Return",
												"src": "1820:16:3"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:3",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1424:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1435:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:3"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1469:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 689,
												"src": "1475:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:3"
									},
									"scope": 974,
									"src": "1408:435:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "2068:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 701,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "2082:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 708,
												"nodeType": "IfStatement",
												"src": "2078:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 706,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 700,
													"id": 707,
													"nodeType": "Return",
													"src": "2090:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 709,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 710,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "2131:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 711,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "2135:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 713,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 700,
												"id": 714,
												"nodeType": "Return",
												"src": "2117:20:3"
											}
										]
									},
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:3",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2008:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2019:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:3"
									},
									"returnParameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2053:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 716,
												"src": "2059:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:3"
									},
									"scope": 974,
									"src": "1992:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 742,
										"nodeType": "Block",
										"src": "2379:76:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 728,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 721,
														"src": "2393:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 735,
												"nodeType": "IfStatement",
												"src": "2389:29:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 733,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 727,
													"id": 734,
													"nodeType": "Return",
													"src": "2401:17:3"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 737,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2442:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 738,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "2446:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 740,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 727,
												"id": 741,
												"nodeType": "Return",
												"src": "2428:20:3"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2319:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2330:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:3"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2364:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 743,
												"src": "2370:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:3"
									},
									"scope": 974,
									"src": "2303:152:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 768,
										"nodeType": "Block",
										"src": "2757:108:3",
										"statements": [
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 768,
														"src": "2767:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 758,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 755,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2779:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 756,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 748,
														"src": "2783:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 760,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "2802:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 761,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "2807:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 763,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 759,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 766,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 754,
													"src": "2857:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 752,
												"id": 767,
												"nodeType": "Return",
												"src": "2850:8:3"
											}
										]
									},
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:3",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 769,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2703:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2714:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:3"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 769,
												"src": "2748:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:3"
									},
									"scope": 974,
									"src": "2690:175:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "3203:88:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 780,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "3221:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 781,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "3226:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 786,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "3279:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 787,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "3283:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 778,
												"id": 789,
												"nodeType": "Return",
												"src": "3272:12:3"
											}
										]
									},
									"documentation": {
										"id": 770,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3149:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3160:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:3"
									},
									"returnParameters": {
										"id": 778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 791,
												"src": "3194:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:3"
									},
									"scope": 974,
									"src": "3136:155:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "3605:148:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 801,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3619:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 802,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 806,
												"nodeType": "IfStatement",
												"src": "3615:20:3",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 800,
													"id": 805,
													"nodeType": "Return",
													"src": "3627:8:3"
												}
											},
											{
												"assignments": [
													808
												],
												"declarations": [
													{
														"constant": false,
														"id": 808,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 824,
														"src": "3645:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 807,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 812,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 794,
														"src": "3657:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 810,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "3661:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 814,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "3680:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 815,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "3684:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 817,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 796,
																"src": "3689:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 813,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 821,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 822,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 808,
													"src": "3745:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 800,
												"id": 823,
												"nodeType": "Return",
												"src": "3738:8:3"
											}
										]
									},
									"documentation": {
										"id": 792,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:3",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3551:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3562:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:3"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 825,
												"src": "3596:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:3"
									},
									"scope": 974,
									"src": "3538:215:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "4284:83:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 836,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 830,
																"src": "4302:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 835,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 841,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 842,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "4355:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 843,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4359:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 834,
												"id": 845,
												"nodeType": "Return",
												"src": "4348:12:3"
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4230:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4241:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 847,
												"src": "4275:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:3"
									},
									"scope": 974,
									"src": "4217:150:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 868,
										"nodeType": "Block",
										"src": "4887:81:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 860,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 858,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 852,
																"src": "4905:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 857,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 863,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 866,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 864,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 850,
														"src": "4956:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 865,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 852,
														"src": "4960:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 856,
												"id": 867,
												"nodeType": "Return",
												"src": "4949:12:3"
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 869,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4833:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4844:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:3"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 869,
												"src": "4878:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:3"
									},
									"scope": 974,
									"src": "4820:148:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 892,
										"nodeType": "Block",
										"src": "5527:68:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 882,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "5545:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 883,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "5550:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 885,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "5553:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 887,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 890,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 888,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 872,
														"src": "5583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 889,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "5587:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 880,
												"id": 891,
												"nodeType": "Return",
												"src": "5576:12:3"
											}
										]
									},
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:3",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 893,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5445:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5456:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 873,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5467:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 875,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 893,
												"src": "5518:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:3"
									},
									"scope": 974,
									"src": "5432:163:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 924,
										"nodeType": "Block",
										"src": "5669:103:3",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 924,
														"src": "5679:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 908,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 905,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 895,
															"src": "5695:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 906,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "5698:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 904,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "5691:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:3"
											},
											{
												"assignments": [
													910
												],
												"declarations": [
													{
														"constant": false,
														"id": 910,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 924,
														"src": "5710:9:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 909,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 912,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5726:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 911,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															791,
															893
														],
														"referencedDeclaration": 791,
														"src": "5722:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 918,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "5756:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 919,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 897,
																	"src": "5759:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 917,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	847,
																	949
																],
																"referencedDeclaration": 847,
																"src": "5752:3:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 921,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 897,
															"src": "5763:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 916,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "5748:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 901,
												"id": 923,
												"nodeType": "Return",
												"src": "5741:24:3"
											}
										]
									},
									"documentation": null,
									"id": 925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5615:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5626:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5614:22:3"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 925,
												"src": "5660:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 899,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5659:9:3"
									},
									"scope": 974,
									"src": "5601:171:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "6524:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 938,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 930,
																"src": "6542:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 941,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "6549:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 937,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6534:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 944,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "6579:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 945,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "6583:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 936,
												"id": 947,
												"nodeType": "Return",
												"src": "6572:12:3"
											}
										]
									},
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:3",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6442:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6453:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6464:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 931,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:50:3"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 949,
												"src": "6515:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6514:9:3"
									},
									"scope": 974,
									"src": "6429:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 972,
										"nodeType": "Block",
										"src": "7332:67:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 962,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 954,
																"src": "7350:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 963,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:3",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 965,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 956,
															"src": "7357:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7342:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 968,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "7387:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 969,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 954,
														"src": "7391:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 960,
												"id": 971,
												"nodeType": "Return",
												"src": "7380:12:3"
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:3",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 973,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7250:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7261:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7272:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 955,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7249:50:3"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 973,
												"src": "7323:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:9:3"
									},
									"scope": 974,
									"src": "7237:162:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 975,
							"src": "630:6771:3"
						}
					],
					"src": "33:7368:3"
				},
				"id": 3
			},
			"contracts/distribution/TombRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TombRewardPool.sol",
					"exportedSymbols": {
						"TombRewardPool": [
							2143
						]
					},
					"id": 2144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 976,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 977,
							"nodeType": "ImportDirective",
							"scope": 2144,
							"sourceUnit": 78,
							"src": "70:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 978,
							"nodeType": "ImportDirective",
							"scope": 2144,
							"sourceUnit": 291,
							"src": "128:65:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 979,
							"nodeType": "ImportDirective",
							"scope": 2144,
							"sourceUnit": 975,
							"src": "195:57:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2143,
							"linearizedBaseContracts": [
								2143
							],
							"name": "TombRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 982,
									"libraryName": {
										"contractScope": null,
										"id": 980,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 974,
										"src": "468:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$974",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "462:27:4",
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 985,
									"libraryName": {
										"contractScope": null,
										"id": 983,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 290,
										"src": "501:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$290",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "495:27:4",
									"typeName": {
										"contractScope": null,
										"id": 984,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "515:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 987,
									"mutability": "mutable",
									"name": "operator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "549:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 986,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "549:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "TombRewardPool.UserInfo",
									"id": 992,
									"members": [
										{
											"constant": false,
											"id": 989,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 992,
											"src": "635:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 988,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "635:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 991,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 992,
											"src": "705:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 990,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "705:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2143,
									"src": "608:162:4",
									"visibility": "public"
								},
								{
									"canonicalName": "TombRewardPool.PoolInfo",
									"id": 1003,
									"members": [
										{
											"constant": false,
											"id": 994,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "832:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$77",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"contractScope": null,
												"id": 993,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 77,
												"src": "832:6:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 996,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "888:18:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 995,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "888:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 998,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1003:22:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 997,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1003:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1000,
											"mutability": "mutable",
											"name": "accTombPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1083:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 999,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1083:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1002,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1003,
											"src": "1172:14:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1001,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1172:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2143,
									"src": "805:421:4",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c040f23a",
									"id": 1005,
									"mutability": "mutable",
									"name": "tomb",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1234:18:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$77",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1004,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 77,
										"src": "1234:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$77",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1008,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1288:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
										"typeString": "struct TombRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 1006,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1003,
											"src": "1288:8:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
												"typeString": "struct TombRewardPool.PoolInfo"
											}
										},
										"id": 1007,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1288:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage_ptr",
											"typeString": "struct TombRewardPool.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1014,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1372:64:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1013,
										"keyType": {
											"id": 1009,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1380:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1372:48:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1012,
											"keyType": {
												"id": 1010,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1399:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1391:28:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
												"typeString": "mapping(address => struct TombRewardPool.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1011,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 992,
												"src": "1410:8:4",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
													"typeString": "struct TombRewardPool.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1017,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1533:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1015,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1533:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1566:1:4",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1019,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1618:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1018,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1618:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9a25cefc",
									"id": 1025,
									"mutability": "mutable",
									"name": "epochTotalRewards",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1655:63:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 1020,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1655:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1021,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1655:9:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"value": {
										"argumentTypes": null,
										"components": [
											{
												"argumentTypes": null,
												"hexValue": "3830303030",
												"id": 1022,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1693:11:4",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_80000000000000000000000_by_1",
													"typeString": "int_const 80000000000000000000000"
												},
												"value": "80000"
											},
											{
												"argumentTypes": null,
												"hexValue": "3630303030",
												"id": 1023,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1706:11:4",
												"subdenomination": "ether",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_60000000000000000000000_by_1",
													"typeString": "int_const 60000000000000000000000"
												},
												"value": "60000"
											}
										],
										"id": 1024,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "1692:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint80_$2_memory_ptr",
											"typeString": "uint80[2] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b89e73c1",
									"id": 1029,
									"mutability": "mutable",
									"name": "epochEndTimes",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1762:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 1026,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1762:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1028,
										"length": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 1027,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1770:1:4",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "1762:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7704d44e",
									"id": 1033,
									"mutability": "mutable",
									"name": "epochTombPerSecond",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2143,
									"src": "1889:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 1030,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1889:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1032,
										"length": {
											"argumentTypes": null,
											"hexValue": "33",
											"id": 1031,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1897:1:4",
											"subdenomination": null,
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "1889:10:4",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1041,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "1948:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "1970:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1970:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1041,
												"src": "1991:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1947:59:4"
									},
									"src": "1934:73:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1049,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "2028:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2028:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "2050:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1049,
												"src": "2071:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2071:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2027:59:4"
									},
									"src": "2013:74:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1057,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2117:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2139:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2139:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "2160:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2160:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2116:59:4"
									},
									"src": "2093:83:4"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1063,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1063,
												"src": "2199:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2199:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1061,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1063,
												"src": "2221:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2221:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2198:38:4"
									},
									"src": "2182:55:4"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "2303:505:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1071,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2322:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1072,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2322:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1073,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "2340:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2322:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c617465",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2356:6:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2314:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "2314:49:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1078,
														"name": "_tomb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1065,
														"src": "2378:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2395:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2387:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1079,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2387:7:4",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2387:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2378:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1090,
												"nodeType": "IfStatement",
												"src": "2374:45:4",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1084,
															"name": "tomb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "2399:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1086,
																	"name": "_tomb",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1065,
																	"src": "2413:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1085,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "2406:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2406:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"src": "2399:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$77",
															"typeString": "contract IERC20"
														}
													},
													"id": 1089,
													"nodeType": "ExpressionStatement",
													"src": "2399:20:4"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1091,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2432:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1092,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "2448:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2432:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2432:30:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1095,
															"name": "epochEndTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2475:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1097,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2475:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1098,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1019,
															"src": "2494:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "34",
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2510:6:4",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_345600_by_1",
																"typeString": "int_const 345600"
															},
															"value": "4"
														},
														"src": "2494:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2475:41:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1102,
												"nodeType": "ExpressionStatement",
												"src": "2475:41:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1103,
															"name": "epochEndTimes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "2538:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1105,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2552:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2538:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1106,
																"name": "epochEndTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "2557:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 1108,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2571:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2557:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "35",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2576:6:4",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_432000_by_1",
																"typeString": "int_const 432000"
															},
															"value": "5"
														},
														"src": "2557:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2538:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1112,
												"nodeType": "ExpressionStatement",
												"src": "2538:44:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1113,
															"name": "epochTombPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "2607:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1115,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2607:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "34",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2656:6:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_345600_by_1",
																	"typeString": "int_const 345600"
																},
																"value": "4"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_345600_by_1",
																	"typeString": "int_const 345600"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1116,
																	"name": "epochTotalRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "2631:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1118,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2649:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2631:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "2631:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2631:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2607:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1123,
												"nodeType": "ExpressionStatement",
												"src": "2607:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1124,
															"name": "epochTombPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "2674:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1126,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2693:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2674:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "35",
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2723:6:4",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_432000_by_1",
																	"typeString": "int_const 432000"
																},
																"value": "5"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_432000_by_1",
																	"typeString": "int_const 432000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 1127,
																	"name": "epochTotalRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1025,
																	"src": "2698:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																		"typeString": "uint256[] storage ref"
																	}
																},
																"id": 1129,
																"indexExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2716:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2698:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "2698:24:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1132,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2698:32:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2674:56:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1134,
												"nodeType": "ExpressionStatement",
												"src": "2674:56:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1135,
															"name": "epochTombPerSecond",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "2743:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1137,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "32",
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2762:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2743:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1138,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2767:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2743:25:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "2743:25:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1141,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "2779:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1142,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2790:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2790:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2779:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "2779:21:4"
											}
										]
									},
									"documentation": null,
									"id": 1147,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "_tomb",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1147,
												"src": "2257:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1147,
												"src": "2272:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2256:39:4"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:0:4"
									},
									"scope": 2143,
									"src": "2245:563:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2840:108:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1150,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "2859:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1151,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "2871:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2871:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2859:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "546f6d62526577617264506f6f6c3a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2883:44:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd",
																"typeString": "literal_string \"TombRewardPool: caller is not the operator\""
															},
															"value": "TombRewardPool: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23c2b75188d7d13d903b5cb4ec62ae0213436b5445c9258e5023f1d0545361cd",
																"typeString": "literal_string \"TombRewardPool: caller is not the operator\""
															}
														],
														"id": 1149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2851:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "2851:77:4"
											},
											{
												"id": 1157,
												"nodeType": "PlaceholderStatement",
												"src": "2939:1:4"
											}
										]
									},
									"documentation": null,
									"id": 1159,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2837:2:4"
									},
									"src": "2816:132:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "3013:203:4",
										"statements": [
											{
												"assignments": [
													1165
												],
												"declarations": [
													{
														"constant": false,
														"id": 1165,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1191,
														"src": "3024:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1164,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3024:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1168,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1166,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "3041:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3041:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3024:32:4"
											},
											{
												"body": {
													"id": 1189,
													"nodeType": "Block",
													"src": "3110:99:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1180,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1008,
																					"src": "3133:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																						"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1182,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1181,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "3142:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3133:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
																					"typeString": "struct TombRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1183,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 994,
																			"src": "3133:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1184,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1161,
																			"src": "3156:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "3133:29:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "546f6d62526577617264506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1186,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3164:32:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_1fb613078085abd20cdf7f113cf73a3fe258433e217ad0609df0ae603c7083e6",
																			"typeString": "literal_string \"TombRewardPool: existing pool?\""
																		},
																		"value": "TombRewardPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_1fb613078085abd20cdf7f113cf73a3fe258433e217ad0609df0ae603c7083e6",
																			"typeString": "literal_string \"TombRewardPool: existing pool?\""
																		}
																	],
																	"id": 1179,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3125:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3125:72:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1188,
															"nodeType": "ExpressionStatement",
															"src": "3125:72:4"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1173,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "3089:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1174,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "3095:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3089:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"initializationExpression": {
													"assignments": [
														1170
													],
													"declarations": [
														{
															"constant": false,
															"id": 1170,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1190,
															"src": "3072:11:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1169,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3072:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1172,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3086:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3072:15:4"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3103:5:4",
														"subExpression": {
															"argumentTypes": null,
															"id": 1176,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "3105:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1178,
													"nodeType": "ExpressionStatement",
													"src": "3103:5:4"
												},
												"nodeType": "ForStatement",
												"src": "3067:142:4"
											}
										]
									},
									"documentation": null,
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1192,
												"src": "2984:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1160,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "2984:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2983:15:4"
									},
									"returnParameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3013:0:4"
									},
									"scope": 2143,
									"src": "2956:260:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3449:1018:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1206,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3479:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														],
														"id": 1205,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1192,
														"src": "3460:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$77_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1208,
												"nodeType": "ExpressionStatement",
												"src": "3460:26:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1209,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1198,
													"src": "3501:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "3497:61:4",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "3514:44:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1210,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "3529:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3529:17:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1212,
															"nodeType": "ExpressionStatement",
															"src": "3529:17:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1215,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3572:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3572:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1217,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "3590:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3572:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1254,
													"nodeType": "Block",
													"src": "3913:189:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1239,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "3964:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3983:1:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "3964:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1242,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "3988:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1243,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "4006:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4006:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3988:33:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3964:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "3960:131:4",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "4023:68:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1247,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "4042:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1248,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "4060:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1249,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4060:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4042:33:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1251,
																		"nodeType": "ExpressionStatement",
																		"src": "4042:33:4"
																	}
																]
															}
														}
													]
												},
												"id": 1255,
												"nodeType": "IfStatement",
												"src": "3568:534:4",
												"trueBody": {
													"id": 1238,
													"nodeType": "Block",
													"src": "3605:302:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1219,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "3657:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3676:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3657:20:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1236,
																"nodeType": "Block",
																"src": "3751:145:4",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1227,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "3774:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1228,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "3792:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3774:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1235,
																		"nodeType": "IfStatement",
																		"src": "3770:111:4",
																		"trueBody": {
																			"id": 1234,
																			"nodeType": "Block",
																			"src": "3807:74:4",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1232,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1230,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1200,
																							"src": "3830:15:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 1231,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1019,
																							"src": "3848:13:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3830:31:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1233,
																					"nodeType": "ExpressionStatement",
																					"src": "3830:31:4"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1237,
															"nodeType": "IfStatement",
															"src": "3653:243:4",
															"trueBody": {
																"id": 1226,
																"nodeType": "Block",
																"src": "3679:66:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1224,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1222,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "3698:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1223,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1019,
																				"src": "3716:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3698:31:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1225,
																		"nodeType": "ExpressionStatement",
																		"src": "3698:31:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1257
												],
												"declarations": [
													{
														"constant": false,
														"id": 1257,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1291,
														"src": "4112:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1256,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4112:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1268,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1258,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "4131:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1259,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1019,
																	"src": "4150:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4131:32:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1261,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4130:34:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1262,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "4169:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1263,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "4188:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4188:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4169:34:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1266,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4168:36:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4130:74:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4112:92:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1273,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "4246:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1274,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "4266:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1275,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "4295:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4329:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 1277,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1257,
																	"src": "4343:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$77",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1272,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1003,
																"src": "4229:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1003_storage_ptr_$",
																	"typeString": "type(struct TombRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accTombPerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4229:126:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_memory_ptr",
																"typeString": "struct TombRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1003_memory_ptr",
																"typeString": "struct TombRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1269,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "4215:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4215:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1003_storage_$returns$__$",
															"typeString": "function (struct TombRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:141:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1280,
												"nodeType": "ExpressionStatement",
												"src": "4215:141:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1281,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1257,
													"src": "4371:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1290,
												"nodeType": "IfStatement",
												"src": "4367:93:4",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "4383:77:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1282,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "4398:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1285,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1194,
																			"src": "4436:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1283,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "4416:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "4416:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4416:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4398:50:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "4398:50:4"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "96805e54",
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1203,
											"modifierName": {
												"argumentTypes": null,
												"id": 1202,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "3436:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3436:12:4"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1292,
												"src": "3317:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3317:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1292,
												"src": "3347:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1195,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "3347:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1292,
												"src": "3371:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1197,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3371:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1292,
												"src": "3398:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3398:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3306:122:4"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3449:0:4"
									},
									"scope": 2143,
									"src": "3294:1173:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "4631:253:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1301,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1624,
														"src": "4642:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4642:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "4642:17:4"
											},
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1331,
														"src": "4670:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1304,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "4670:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1309,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1306,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "4694:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1308,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1307,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1294,
														"src": "4703:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4694:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4670:38:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1310,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1305,
														"src": "4723:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1002,
													"src": "4723:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1324,
												"nodeType": "IfStatement",
												"src": "4719:118:4",
												"trueBody": {
													"id": 1323,
													"nodeType": "Block",
													"src": "4739:98:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1312,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "4754:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1319,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1296,
																			"src": "4813:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1315,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1305,
																						"src": "4792:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																							"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1316,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 996,
																					"src": "4792:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1313,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1017,
																					"src": "4772:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 791,
																				"src": "4772:19:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4772:36:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "4772:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4772:53:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4754:71:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "4754:71:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1325,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "4847:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 996,
														"src": "4847:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1328,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1296,
														"src": "4865:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4847:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "4847:29:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1ab06ee5",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1299,
											"modifierName": {
												"argumentTypes": null,
												"id": 1298,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "4618:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4618:12:4"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1332,
												"src": "4576:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1332,
												"src": "4590:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4590:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4575:35:4"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4631:0:4"
									},
									"scope": 2143,
									"src": "4563:321:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "5057:1238:4",
										"statements": [
											{
												"body": {
													"id": 1489,
													"nodeType": "Block",
													"src": "5117:1104:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1351,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "5136:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 1352,
																		"name": "epochEndTimes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "5147:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$3_storage",
																			"typeString": "uint256[3] storage ref"
																		}
																	},
																	"id": 1356,
																	"indexExpression": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1353,
																			"name": "epochId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1342,
																			"src": "5161:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5171:1:4",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "5161:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5147:26:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5136:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1488,
															"nodeType": "IfStatement",
															"src": "5132:1078:4",
															"trueBody": {
																"id": 1487,
																"nodeType": "Block",
																"src": "5175:1035:4",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1364,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1358,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1334,
																				"src": "5198:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1359,
																					"name": "epochEndTimes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1029,
																					"src": "5211:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$3_storage",
																						"typeString": "uint256[3] storage ref"
																					}
																				},
																				"id": 1363,
																				"indexExpression": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1362,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1360,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1342,
																						"src": "5225:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1361,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5235:1:4",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5225:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5211:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5198:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1376,
																		"nodeType": "IfStatement",
																		"src": "5194:150:4",
																		"trueBody": {
																			"id": 1375,
																			"nodeType": "Block",
																			"src": "5239:105:4",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 1370,
																									"name": "epochTombPerSecond",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1033,
																									"src": "5296:18:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_uint256_$3_storage",
																										"typeString": "uint256[3] storage ref"
																									}
																								},
																								"id": 1372,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 1371,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1342,
																									"src": "5315:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "5296:27:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"id": 1367,
																										"name": "_fromTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1334,
																										"src": "5281:9:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"id": 1365,
																										"name": "_toTime",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1336,
																										"src": "5269:7:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1366,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sub",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 791,
																									"src": "5269:11:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1368,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5269:22:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1369,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 825,
																							"src": "5269:26:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1373,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5269:55:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1340,
																					"id": 1374,
																					"nodeType": "Return",
																					"src": "5262:62:4"
																				}
																			]
																		}
																	},
																	{
																		"assignments": [
																			1378
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1378,
																				"mutability": "mutable",
																				"name": "_generatedReward",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 1487,
																				"src": "5364:24:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1377,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "5364:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 1392,
																		"initialValue": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"baseExpression": {
																						"argumentTypes": null,
																						"id": 1388,
																						"name": "epochTombPerSecond",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1033,
																						"src": "5435:18:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_uint256_$3_storage",
																							"typeString": "uint256[3] storage ref"
																						}
																					},
																					"id": 1390,
																					"indexExpression": {
																						"argumentTypes": null,
																						"id": 1389,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1342,
																						"src": "5454:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5435:27:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 1381,
																								"name": "epochEndTimes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1029,
																								"src": "5403:13:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1385,
																							"indexExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1384,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 1382,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1342,
																									"src": "5417:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1383,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5427:1:4",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5417:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5403:26:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1379,
																							"name": "_toTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1336,
																							"src": "5391:7:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1380,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 791,
																						"src": "5391:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1386,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5391:39:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 825,
																				"src": "5391:43:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1391,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5391:72:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "5364:99:4"
																	},
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1393,
																				"name": "epochId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "5486:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1394,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5497:1:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5486:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1412,
																		"nodeType": "IfStatement",
																		"src": "5482:148:4",
																		"trueBody": {
																			"id": 1411,
																			"nodeType": "Block",
																			"src": "5500:130:4",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"arguments": [
																									{
																										"argumentTypes": null,
																										"baseExpression": {
																											"argumentTypes": null,
																											"id": 1405,
																											"name": "epochTombPerSecond",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1033,
																											"src": "5587:18:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_uint256_$3_storage",
																												"typeString": "uint256[3] storage ref"
																											}
																										},
																										"id": 1407,
																										"indexExpression": {
																											"argumentTypes": null,
																											"hexValue": "30",
																											"id": 1406,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "5606:1:4",
																											"subdenomination": null,
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_0_by_1",
																												"typeString": "int_const 0"
																											},
																											"value": "0"
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "IndexAccess",
																										"src": "5587:21:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									],
																									"expression": {
																										"argumentTypes": null,
																										"arguments": [
																											{
																												"argumentTypes": null,
																												"id": 1402,
																												"name": "_fromTime",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1334,
																												"src": "5572:9:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"argumentTypes": null,
																												"baseExpression": {
																													"argumentTypes": null,
																													"id": 1398,
																													"name": "epochEndTimes",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1029,
																													"src": "5551:13:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_array$_t_uint256_$3_storage",
																														"typeString": "uint256[3] storage ref"
																													}
																												},
																												"id": 1400,
																												"indexExpression": {
																													"argumentTypes": null,
																													"hexValue": "30",
																													"id": 1399,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": true,
																													"kind": "number",
																													"lValueRequested": false,
																													"nodeType": "Literal",
																													"src": "5565:1:4",
																													"subdenomination": null,
																													"typeDescriptions": {
																														"typeIdentifier": "t_rational_0_by_1",
																														"typeString": "int_const 0"
																													},
																													"value": "0"
																												},
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"nodeType": "IndexAccess",
																												"src": "5551:16:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1401,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberName": "sub",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 791,
																											"src": "5551:20:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1403,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "5551:31:4",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1404,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 825,
																									"src": "5551:35:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1408,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "5551:58:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 1396,
																								"name": "_generatedReward",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1378,
																								"src": "5530:16:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1397,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "add",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 769,
																							"src": "5530:20:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1409,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "5530:80:4",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"functionReturnParameters": 1340,
																					"id": 1410,
																					"nodeType": "Return",
																					"src": "5523:87:4"
																				}
																			]
																		}
																	},
																	{
																		"body": {
																			"id": 1470,
																			"nodeType": "Block",
																			"src": "5701:388:4",
																			"statements": [
																				{
																					"condition": {
																						"argumentTypes": null,
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1431,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"argumentTypes": null,
																							"id": 1425,
																							"name": "_fromTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1334,
																							"src": "5728:9:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": ">=",
																						"rightExpression": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 1426,
																								"name": "epochEndTimes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1029,
																								"src": "5741:13:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1430,
																							"indexExpression": {
																								"argumentTypes": null,
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1429,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"argumentTypes": null,
																									"id": 1427,
																									"name": "epochId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1342,
																									"src": "5755:7:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"argumentTypes": null,
																									"hexValue": "31",
																									"id": 1428,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "5765:1:4",
																									"subdenomination": null,
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "5755:11:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "5741:26:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5728:39:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": null,
																					"id": 1448,
																					"nodeType": "IfStatement",
																					"src": "5724:195:4",
																					"trueBody": {
																						"id": 1447,
																						"nodeType": "Block",
																						"src": "5769:150:4",
																						"statements": [
																							{
																								"expression": {
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"arguments": [
																												{
																													"argumentTypes": null,
																													"baseExpression": {
																														"argumentTypes": null,
																														"id": 1441,
																														"name": "epochTombPerSecond",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1033,
																														"src": "5866:18:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1443,
																													"indexExpression": {
																														"argumentTypes": null,
																														"id": 1442,
																														"name": "epochId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1342,
																														"src": "5885:7:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "5866:27:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"argumentTypes": null,
																													"arguments": [
																														{
																															"argumentTypes": null,
																															"id": 1438,
																															"name": "_fromTime",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1334,
																															"src": "5851:9:4",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														}
																													],
																													"expression": {
																														"argumentTypes": [
																															{
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														],
																														"expression": {
																															"argumentTypes": null,
																															"baseExpression": {
																																"argumentTypes": null,
																																"id": 1434,
																																"name": "epochEndTimes",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1029,
																																"src": "5824:13:4",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																																	"typeString": "uint256[3] storage ref"
																																}
																															},
																															"id": 1436,
																															"indexExpression": {
																																"argumentTypes": null,
																																"id": 1435,
																																"name": "epochId",
																																"nodeType": "Identifier",
																																"overloadedDeclarations": [],
																																"referencedDeclaration": 1342,
																																"src": "5838:7:4",
																																"typeDescriptions": {
																																	"typeIdentifier": "t_uint8",
																																	"typeString": "uint8"
																																}
																															},
																															"isConstant": false,
																															"isLValue": true,
																															"isPure": false,
																															"lValueRequested": false,
																															"nodeType": "IndexAccess",
																															"src": "5824:22:4",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint256",
																																"typeString": "uint256"
																															}
																														},
																														"id": 1437,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberName": "sub",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 791,
																														"src": "5824:26:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																															"typeString": "function (uint256,uint256) pure returns (uint256)"
																														}
																													},
																													"id": 1439,
																													"isConstant": false,
																													"isLValue": false,
																													"isPure": false,
																													"kind": "functionCall",
																													"lValueRequested": false,
																													"names": [],
																													"nodeType": "FunctionCall",
																													"src": "5824:37:4",
																													"tryCall": false,
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 1440,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "mul",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 825,
																												"src": "5824:41:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 1444,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5824:70:4",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"id": 1432,
																											"name": "_generatedReward",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1378,
																											"src": "5803:16:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1433,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "add",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 769,
																										"src": "5803:20:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1445,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5803:92:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"functionReturnParameters": 1340,
																								"id": 1446,
																								"nodeType": "Return",
																								"src": "5796:99:4"
																							}
																						]
																					}
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1468,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1449,
																							"name": "_generatedReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1378,
																							"src": "5941:16:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"arguments": [
																										{
																											"argumentTypes": null,
																											"baseExpression": {
																												"argumentTypes": null,
																												"id": 1463,
																												"name": "epochTombPerSecond",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1033,
																												"src": "6040:18:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_array$_t_uint256_$3_storage",
																													"typeString": "uint256[3] storage ref"
																												}
																											},
																											"id": 1465,
																											"indexExpression": {
																												"argumentTypes": null,
																												"id": 1464,
																												"name": "epochId",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1342,
																												"src": "6059:7:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint8",
																													"typeString": "uint8"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6040:27:4",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"argumentTypes": null,
																											"arguments": [
																												{
																													"argumentTypes": null,
																													"baseExpression": {
																														"argumentTypes": null,
																														"id": 1456,
																														"name": "epochEndTimes",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1029,
																														"src": "6008:13:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1460,
																													"indexExpression": {
																														"argumentTypes": null,
																														"commonType": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														},
																														"id": 1459,
																														"isConstant": false,
																														"isLValue": false,
																														"isPure": false,
																														"lValueRequested": false,
																														"leftExpression": {
																															"argumentTypes": null,
																															"id": 1457,
																															"name": "epochId",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1342,
																															"src": "6022:7:4",
																															"typeDescriptions": {
																																"typeIdentifier": "t_uint8",
																																"typeString": "uint8"
																															}
																														},
																														"nodeType": "BinaryOperation",
																														"operator": "-",
																														"rightExpression": {
																															"argumentTypes": null,
																															"hexValue": "31",
																															"id": 1458,
																															"isConstant": false,
																															"isLValue": false,
																															"isPure": true,
																															"kind": "number",
																															"lValueRequested": false,
																															"nodeType": "Literal",
																															"src": "6032:1:4",
																															"subdenomination": null,
																															"typeDescriptions": {
																																"typeIdentifier": "t_rational_1_by_1",
																																"typeString": "int_const 1"
																															},
																															"value": "1"
																														},
																														"src": "6022:11:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "6008:26:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												}
																											],
																											"expression": {
																												"argumentTypes": [
																													{
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												],
																												"expression": {
																													"argumentTypes": null,
																													"baseExpression": {
																														"argumentTypes": null,
																														"id": 1452,
																														"name": "epochEndTimes",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1029,
																														"src": "5981:13:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_array$_t_uint256_$3_storage",
																															"typeString": "uint256[3] storage ref"
																														}
																													},
																													"id": 1454,
																													"indexExpression": {
																														"argumentTypes": null,
																														"id": 1453,
																														"name": "epochId",
																														"nodeType": "Identifier",
																														"overloadedDeclarations": [],
																														"referencedDeclaration": 1342,
																														"src": "5995:7:4",
																														"typeDescriptions": {
																															"typeIdentifier": "t_uint8",
																															"typeString": "uint8"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "5981:22:4",
																													"typeDescriptions": {
																														"typeIdentifier": "t_uint256",
																														"typeString": "uint256"
																													}
																												},
																												"id": 1455,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberName": "sub",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 791,
																												"src": "5981:26:4",
																												"typeDescriptions": {
																													"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																													"typeString": "function (uint256,uint256) pure returns (uint256)"
																												}
																											},
																											"id": 1461,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"kind": "functionCall",
																											"lValueRequested": false,
																											"names": [],
																											"nodeType": "FunctionCall",
																											"src": "5981:54:4",
																											"tryCall": false,
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"id": 1462,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mul",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 825,
																										"src": "5981:58:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																											"typeString": "function (uint256,uint256) pure returns (uint256)"
																										}
																									},
																									"id": 1466,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "5981:87:4",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 1450,
																									"name": "_generatedReward",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1378,
																									"src": "5960:16:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1451,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "add",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 769,
																								"src": "5960:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1467,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "5960:109:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "5941:128:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1469,
																					"nodeType": "ExpressionStatement",
																					"src": "5941:128:4"
																				}
																			]
																		},
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1421,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1419,
																				"name": "epochId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1342,
																				"src": "5676:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"argumentTypes": null,
																				"hexValue": "31",
																				"id": 1420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5687:1:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5676:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1471,
																		"initializationExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1417,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 1413,
																					"name": "epochId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "5653:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 1416,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 1414,
																						"name": "epochId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1342,
																						"src": "5663:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 1415,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5673:1:4",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "5663:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "5653:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 1418,
																			"nodeType": "ExpressionStatement",
																			"src": "5653:21:4"
																		},
																		"loopExpression": {
																			"expression": {
																				"argumentTypes": null,
																				"id": 1423,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "5690:9:4",
																				"subExpression": {
																					"argumentTypes": null,
																					"id": 1422,
																					"name": "epochId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1342,
																					"src": "5692:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"id": 1424,
																			"nodeType": "ExpressionStatement",
																			"src": "5690:9:4"
																		},
																		"nodeType": "ForStatement",
																		"src": "5648:441:4"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 1481,
																								"name": "epochTombPerSecond",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1033,
																								"src": "6171:18:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$3_storage",
																									"typeString": "uint256[3] storage ref"
																								}
																							},
																							"id": 1483,
																							"indexExpression": {
																								"argumentTypes": null,
																								"hexValue": "30",
																								"id": 1482,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "6190:1:4",
																								"subdenomination": null,
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_0_by_1",
																									"typeString": "int_const 0"
																								},
																								"value": "0"
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6171:21:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"id": 1478,
																									"name": "_fromTime",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1334,
																									"src": "6156:9:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"baseExpression": {
																										"argumentTypes": null,
																										"id": 1474,
																										"name": "epochEndTimes",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1029,
																										"src": "6135:13:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$3_storage",
																											"typeString": "uint256[3] storage ref"
																										}
																									},
																									"id": 1476,
																									"indexExpression": {
																										"argumentTypes": null,
																										"hexValue": "30",
																										"id": 1475,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "6149:1:4",
																										"subdenomination": null,
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6135:16:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1477,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 791,
																								"src": "6135:20:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1479,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "6135:31:4",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1480,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 825,
																						"src": "6135:35:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1484,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6135:58:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1472,
																					"name": "_generatedReward",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1378,
																					"src": "6114:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "add",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 769,
																				"src": "6114:20:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6114:80:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1340,
																		"id": 1486,
																		"nodeType": "Return",
																		"src": "6107:87:4"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1345,
														"name": "epochId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "5092:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5103:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "5092:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1490,
												"initializationExpression": {
													"assignments": [
														1342
													],
													"declarations": [
														{
															"constant": false,
															"id": 1342,
															"mutability": "mutable",
															"name": "epochId",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1490,
															"src": "5073:13:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1341,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "5073:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1344,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5089:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5073:17:4"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "5106:9:4",
														"subExpression": {
															"argumentTypes": null,
															"id": 1348,
															"name": "epochId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "5108:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1350,
													"nodeType": "ExpressionStatement",
													"src": "5106:9:4"
												},
												"nodeType": "ForStatement",
												"src": "5068:1153:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 1496,
																"name": "epochTombPerSecond",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1033,
																"src": "6265:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 1498,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6284:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6265:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1493,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "6250:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1491,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "6238:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1492,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 791,
																"src": "6238:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6238:22:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 825,
														"src": "6238:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6238:49:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1500,
												"nodeType": "Return",
												"src": "6231:56:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "231f0c6a",
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "4991:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4991:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "5010:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5010:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4990:36:4"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1502,
												"src": "5048:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5048:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5047:9:4"
									},
									"scope": 2143,
									"src": "4963:1332:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1598,
										"nodeType": "Block",
										"src": "6441:689:4",
										"statements": [
											{
												"assignments": [
													1512
												],
												"declarations": [
													{
														"constant": false,
														"id": 1512,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1598,
														"src": "6452:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1511,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "6452:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1516,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1513,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "6476:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1515,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1514,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1504,
														"src": "6485:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6476:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6452:38:4"
											},
											{
												"assignments": [
													1518
												],
												"declarations": [
													{
														"constant": false,
														"id": 1518,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1598,
														"src": "6501:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct TombRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1517,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "6501:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1524,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1519,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "6525:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1521,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1520,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1504,
															"src": "6534:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6525:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct TombRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1523,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1522,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1506,
														"src": "6540:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6525:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct TombRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6501:45:4"
											},
											{
												"assignments": [
													1526
												],
												"declarations": [
													{
														"constant": false,
														"id": 1526,
														"mutability": "mutable",
														"name": "accTombPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1598,
														"src": "6557:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1525,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1529,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1527,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1512,
														"src": "6583:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1528,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accTombPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1000,
													"src": "6583:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6557:46:4"
											},
											{
												"assignments": [
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1598,
														"src": "6614:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1530,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6614:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1540,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1537,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6665:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6657:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1535,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6657:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6657:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1532,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "6636:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "6636:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "6636:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6636:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6614:57:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1541,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6686:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6686:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1543,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "6704:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1544,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 998,
															"src": "6704:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6686:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1546,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1531,
															"src": "6727:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6742:1:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6727:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6686:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1584,
												"nodeType": "IfStatement",
												"src": "6682:360:4",
												"trueBody": {
													"id": 1583,
													"nodeType": "Block",
													"src": "6745:297:4",
													"statements": [
														{
															"assignments": [
																1551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1551,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1583,
																	"src": "6760:24:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6760:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1558,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1553,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1512,
																			"src": "6806:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 998,
																		"src": "6806:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1555,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "6827:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6827:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1552,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "6787:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6787:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6760:83:4"
														},
														{
															"assignments": [
																1560
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1560,
																	"mutability": "mutable",
																	"name": "_tombReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1583,
																	"src": "6858:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1559,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6858:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1569,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1567,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "6922:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1563,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "6901:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1564,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 996,
																				"src": "6901:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1561,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1551,
																				"src": "6880:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 825,
																			"src": "6880:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6880:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "6880:41:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1568,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6880:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6858:80:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1570,
																	"name": "accTombPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1526,
																	"src": "6953:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1578,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1531,
																					"src": "7017:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1575,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7007:4:4",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1573,
																							"name": "_tombReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1560,
																							"src": "6991:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1574,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 825,
																						"src": "6991:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6991:21:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1577,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 847,
																				"src": "6991:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6991:38:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1571,
																			"name": "accTombPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "6971:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1572,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "6971:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6971:59:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6953:77:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1582,
															"nodeType": "ExpressionStatement",
															"src": "6953:77:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1594,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1518,
																"src": "7106:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																	"typeString": "struct TombRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1595,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "7106:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7096:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1588,
																			"name": "accTombPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1526,
																			"src": "7075:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1585,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1518,
																				"src": "7059:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct TombRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "7059:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "7059:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1589,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7059:32:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1590,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 847,
																"src": "7059:36:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7059:42:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "7059:46:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7059:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1510,
												"id": 1597,
												"nodeType": "Return",
												"src": "7052:70:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "89744bb4",
									"id": 1599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingTOMB",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "6380:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6380:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "6394:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6394:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6379:29:4"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1599,
												"src": "6432:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6432:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6431:9:4"
									},
									"scope": 2143,
									"src": "6359:771:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "7247:146:4",
										"statements": [
											{
												"assignments": [
													1603
												],
												"declarations": [
													{
														"constant": false,
														"id": 1603,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1623,
														"src": "7258:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1602,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7258:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1606,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1604,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "7275:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "7275:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7258:32:4"
											},
											{
												"body": {
													"id": 1621,
													"nodeType": "Block",
													"src": "7344:42:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1618,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1608,
																		"src": "7370:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1617,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "7359:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1619,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7359:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1620,
															"nodeType": "ExpressionStatement",
															"src": "7359:15:4"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1611,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "7323:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1612,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "7329:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7323:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1622,
												"initializationExpression": {
													"assignments": [
														1608
													],
													"declarations": [
														{
															"constant": false,
															"id": 1608,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1622,
															"src": "7306:11:4",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1607,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "7306:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1610,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7320:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "7306:15:4"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "7337:5:4",
														"subExpression": {
															"argumentTypes": null,
															"id": 1614,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "7339:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1616,
													"nodeType": "ExpressionStatement",
													"src": "7337:5:4"
												},
												"nodeType": "ForStatement",
												"src": "7301:85:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "630b5ba1",
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7237:2:4"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7247:0:4"
									},
									"scope": 2143,
									"src": "7213:180:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "7510:867:4",
										"statements": [
											{
												"assignments": [
													1630
												],
												"declarations": [
													{
														"constant": false,
														"id": 1630,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1734,
														"src": "7521:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1629,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "7521:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1631,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "7545:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1633,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1632,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "7554:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7545:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7521:38:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1635,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7574:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1636,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7574:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1637,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "7593:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 998,
														"src": "7593:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7574:38:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1642,
												"nodeType": "IfStatement",
												"src": "7570:77:4",
												"trueBody": {
													"id": 1641,
													"nodeType": "Block",
													"src": "7614:33:4",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1628,
															"id": 1640,
															"nodeType": "Return",
															"src": "7629:7:4"
														}
													]
												}
											},
											{
												"assignments": [
													1644
												],
												"declarations": [
													{
														"constant": false,
														"id": 1644,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1734,
														"src": "7657:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1643,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1650,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7708:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																],
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7700:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1648,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7700:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7700:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1645,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "7679:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "7679:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 1647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "7679:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7679:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7657:57:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1654,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1644,
														"src": "7729:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7744:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7729:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "7725:107:4",
												"trueBody": {
													"id": 1665,
													"nodeType": "Block",
													"src": "7747:85:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1657,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "7762:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 998,
																	"src": "7762:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1660,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "7784:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1661,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7784:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7762:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1663,
															"nodeType": "ExpressionStatement",
															"src": "7762:37:4"
														},
														{
															"expression": null,
															"functionReturnParameters": 1628,
															"id": 1664,
															"nodeType": "Return",
															"src": "7814:7:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7846:15:4",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1667,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "7847:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1002,
														"src": "7847:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "7842:138:4",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "7863:117:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1674,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1670,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "7878:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1002,
																	"src": "7878:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1673,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7895:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7878:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1675,
															"nodeType": "ExpressionStatement",
															"src": "7878:21:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1682,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1676,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1017,
																	"src": "7914:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1679,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1630,
																				"src": "7952:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 996,
																			"src": "7952:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1677,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1017,
																			"src": "7932:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "7932:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7932:36:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7914:54:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1683,
															"nodeType": "ExpressionStatement",
															"src": "7914:54:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1686,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1017,
														"src": "7994:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8012:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7994:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1726,
												"nodeType": "IfStatement",
												"src": "7990:332:4",
												"trueBody": {
													"id": 1725,
													"nodeType": "Block",
													"src": "8015:307:4",
													"statements": [
														{
															"assignments": [
																1690
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1690,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1725,
																	"src": "8030:24:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1689,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8030:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1697,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1692,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1630,
																			"src": "8076:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 998,
																		"src": "8076:19:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1694,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "8097:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1695,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "8097:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1691,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1502,
																	"src": "8057:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8057:56:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8030:83:4"
														},
														{
															"assignments": [
																1699
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1699,
																	"mutability": "mutable",
																	"name": "_tombReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1725,
																	"src": "8128:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1698,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8128:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1708,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1706,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1017,
																		"src": "8192:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1702,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1630,
																					"src": "8171:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1703,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 996,
																				"src": "8171:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1700,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1690,
																				"src": "8150:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1701,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 825,
																			"src": "8150:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8150:37:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 847,
																	"src": "8150:41:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8150:58:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8128:80:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1709,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1630,
																		"src": "8223:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																			"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accTombPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1000,
																	"src": "8223:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1720,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1644,
																					"src": "8297:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1717,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "8287:4:4",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1715,
																							"name": "_tombReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1699,
																							"src": "8271:11:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 825,
																						"src": "8271:15:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1718,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8271:21:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 847,
																				"src": "8271:25:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8271:38:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1712,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1630,
																				"src": "8246:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accTombPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1000,
																			"src": "8246:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "8246:24:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1722,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8246:64:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8223:87:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1724,
															"nodeType": "ExpressionStatement",
															"src": "8223:87:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1727,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "8332:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 998,
														"src": "8332:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1730,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "8354:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "8354:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8332:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1733,
												"nodeType": "ExpressionStatement",
												"src": "8332:37:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "51eb05a6",
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1735,
												"src": "7489:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7489:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7488:14:4"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7510:0:4"
									},
									"scope": 2143,
									"src": "7469:908:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "8467:771:4",
										"statements": [
											{
												"assignments": [
													1743
												],
												"declarations": [
													{
														"constant": false,
														"id": 1743,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1850,
														"src": "8478:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1742,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1746,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1744,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8496:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "8496:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:28:4"
											},
											{
												"assignments": [
													1748
												],
												"declarations": [
													{
														"constant": false,
														"id": 1748,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1850,
														"src": "8517:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1747,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "8517:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1752,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1749,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "8541:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1751,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1750,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1737,
														"src": "8550:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8541:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8517:38:4"
											},
											{
												"assignments": [
													1754
												],
												"declarations": [
													{
														"constant": false,
														"id": 1754,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1850,
														"src": "8566:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct TombRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1753,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "8566:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1760,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1755,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "8590:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1757,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1756,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "8599:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8590:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct TombRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1759,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1758,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1743,
														"src": "8605:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8590:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct TombRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8566:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1762,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "8635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "8624:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8624:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "8624:16:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1765,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "8655:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "8655:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1767,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8669:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8655:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "8651:290:4",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "8672:269:4",
													"statements": [
														{
															"assignments": [
																1770
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1770,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1800,
																	"src": "8687:16:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8687:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1784,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1781,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "8758:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct TombRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1782,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 991,
																		"src": "8758:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 1778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8748:4:4",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1774,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1748,
																							"src": "8722:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																								"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1775,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accTombPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1000,
																						"src": "8722:20:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1771,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1754,
																							"src": "8706:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																								"typeString": "struct TombRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1772,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 989,
																						"src": "8706:11:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1773,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 825,
																					"src": "8706:15:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8706:37:4",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 847,
																			"src": "8706:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8706:47:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1780,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 791,
																	"src": "8706:51:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8706:68:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8687:87:4"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1785,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "8793:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1786,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8804:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8793:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1799,
															"nodeType": "IfStatement",
															"src": "8789:141:4",
															"trueBody": {
																"id": 1798,
																"nodeType": "Block",
																"src": "8807:123:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1789,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1743,
																					"src": "8843:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1790,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1770,
																					"src": "8852:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1788,
																				"name": "safeTombTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "8826:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8826:35:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1792,
																		"nodeType": "ExpressionStatement",
																		"src": "8826:35:4"
																	},
																	{
																		"eventCall": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1794,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1743,
																					"src": "8896:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1795,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1770,
																					"src": "8905:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1793,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1063,
																				"src": "8885:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1796,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8885:29:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1797,
																		"nodeType": "EmitStatement",
																		"src": "8880:34:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1802,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1739,
														"src": "8955:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8965:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8955:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1829,
												"nodeType": "IfStatement",
												"src": "8951:157:4",
												"trueBody": {
													"id": 1828,
													"nodeType": "Block",
													"src": "8968:140:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1810,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1743,
																		"src": "9011:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1813,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "9028:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																					"typeString": "contract TombRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																					"typeString": "contract TombRewardPool"
																				}
																			],
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9020:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1811,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9020:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1814,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9020:13:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1815,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1739,
																		"src": "9035:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1805,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "8983:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1808,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 994,
																		"src": "8983:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 136,
																	"src": "8983:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8983:60:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1817,
															"nodeType": "ExpressionStatement",
															"src": "8983:60:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1818,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1754,
																		"src": "9058:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																			"typeString": "struct TombRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1820,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "9058:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1824,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1739,
																			"src": "9088:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1821,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1754,
																				"src": "9072:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct TombRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "9072:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1823,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 769,
																		"src": "9072:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9072:24:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9058:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1827,
															"nodeType": "ExpressionStatement",
															"src": "9058:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1830,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1754,
															"src": "9118:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1832,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "9118:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9178:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1836,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1748,
																			"src": "9152:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1837,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accTombPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1000,
																		"src": "9152:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1833,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1754,
																			"src": "9136:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct TombRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1834,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "9136:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "9136:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9136:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "9136:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9136:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9118:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1843,
												"nodeType": "ExpressionStatement",
												"src": "9118:65:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1845,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1743,
															"src": "9207:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1846,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1737,
															"src": "9216:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1847,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1739,
															"src": "9222:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1844,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "9199:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9199:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "EmitStatement",
												"src": "9194:36:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "8429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8429:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "8443:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8443:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8428:31:4"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8467:0:4"
									},
									"scope": 2143,
									"src": "8412:826:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1964,
										"nodeType": "Block",
										"src": "9330:754:4",
										"statements": [
											{
												"assignments": [
													1859
												],
												"declarations": [
													{
														"constant": false,
														"id": 1859,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1964,
														"src": "9341:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1858,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9341:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1860,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "9359:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9359:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9341:28:4"
											},
											{
												"assignments": [
													1864
												],
												"declarations": [
													{
														"constant": false,
														"id": 1864,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1964,
														"src": "9380:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1863,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "9380:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1865,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "9404:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1867,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1866,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "9413:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9404:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9380:38:4"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1964,
														"src": "9429:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct TombRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1869,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "9429:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1871,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "9453:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1873,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1872,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "9462:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9453:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct TombRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1875,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1874,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1859,
														"src": "9468:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9453:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct TombRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9429:47:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1878,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1870,
																	"src": "9495:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																		"typeString": "struct TombRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1879,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 989,
																"src": "9495:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1880,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1855,
																"src": "9510:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9495:22:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9519:20:4",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1877,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9487:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9487:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "9487:53:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1886,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "9562:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1885,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1735,
														"src": "9551:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9551:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1888,
												"nodeType": "ExpressionStatement",
												"src": "9551:16:4"
											},
											{
												"assignments": [
													1890
												],
												"declarations": [
													{
														"constant": false,
														"id": 1890,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1964,
														"src": "9578:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1889,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9578:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1904,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1901,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "9649:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																	"typeString": "struct TombRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1902,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 991,
															"src": "9649:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9639:4:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1894,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1864,
																				"src": "9613:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1895,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accTombPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1000,
																			"src": "9613:20:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1891,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1870,
																				"src": "9597:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct TombRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1892,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "9597:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1893,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 825,
																		"src": "9597:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9597:37:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 847,
																"src": "9597:41:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9597:47:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 791,
														"src": "9597:51:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9597:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9578:87:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1905,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1890,
														"src": "9680:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9691:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9680:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1919,
												"nodeType": "IfStatement",
												"src": "9676:129:4",
												"trueBody": {
													"id": 1918,
													"nodeType": "Block",
													"src": "9694:111:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1909,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "9726:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1910,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "9735:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1908,
																	"name": "safeTombTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2063,
																	"src": "9709:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9709:35:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1912,
															"nodeType": "ExpressionStatement",
															"src": "9709:35:4"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1914,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "9775:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1915,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1890,
																		"src": "9784:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1913,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "9764:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1916,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9764:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1917,
															"nodeType": "EmitStatement",
															"src": "9759:34:4"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1920,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1855,
														"src": "9819:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9829:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9819:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1943,
												"nodeType": "IfStatement",
												"src": "9815:138:4",
												"trueBody": {
													"id": 1942,
													"nodeType": "Block",
													"src": "9832:121:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1923,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "9847:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																			"typeString": "struct TombRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1925,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 989,
																	"src": "9847:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1929,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1855,
																			"src": "9877:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1926,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1870,
																				"src": "9861:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																					"typeString": "struct TombRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1927,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 989,
																			"src": "9861:11:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 791,
																		"src": "9861:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9861:24:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9847:38:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1932,
															"nodeType": "ExpressionStatement",
															"src": "9847:38:4"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1938,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "9924:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1939,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1855,
																		"src": "9933:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1933,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "9900:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1936,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 994,
																		"src": "9900:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 111,
																	"src": "9900:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9900:41:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1941,
															"nodeType": "ExpressionStatement",
															"src": "9900:41:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1944,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "9963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "9963:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10023:4:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1950,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1864,
																			"src": "9997:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																				"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1951,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accTombPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1000,
																		"src": "9997:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1947,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1870,
																			"src": "9981:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																				"typeString": "struct TombRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1948,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 989,
																		"src": "9981:11:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 825,
																	"src": "9981:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9981:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 847,
															"src": "9981:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9981:47:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9963:65:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1957,
												"nodeType": "ExpressionStatement",
												"src": "9963:65:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1959,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1859,
															"src": "10053:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1960,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1853,
															"src": "10062:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1961,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1855,
															"src": "10068:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1958,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "10044:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10044:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1963,
												"nodeType": "EmitStatement",
												"src": "10039:37:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 1965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1965,
												"src": "9292:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9292:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1965,
												"src": "9306:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9306:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9291:31:4"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9330:0:4"
									},
									"scope": 2143,
									"src": "9274:810:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2019,
										"nodeType": "Block",
										"src": "10203:329:4",
										"statements": [
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2019,
														"src": "10214:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
															"typeString": "struct TombRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1970,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1003,
															"src": "10214:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																"typeString": "struct TombRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1975,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1972,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "10238:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
															"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1974,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1973,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1967,
														"src": "10247:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10238:14:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
														"typeString": "struct TombRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10214:38:4"
											},
											{
												"assignments": [
													1977
												],
												"declarations": [
													{
														"constant": false,
														"id": 1977,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2019,
														"src": "10263:21:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct TombRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1976,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 992,
															"src": "10263:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1978,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1014,
															"src": "10287:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct TombRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1980,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1979,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "10296:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10287:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$992_storage_$",
															"typeString": "mapping(address => struct TombRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1983,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1981,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "10302:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1982,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10302:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10287:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$992_storage",
														"typeString": "struct TombRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10263:50:4"
											},
											{
												"assignments": [
													1986
												],
												"declarations": [
													{
														"constant": false,
														"id": 1986,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2019,
														"src": "10324:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1985,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10324:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1989,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1987,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "10342:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
															"typeString": "struct TombRewardPool.UserInfo storage pointer"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 989,
													"src": "10342:11:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10324:29:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1990,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "10364:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1992,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 989,
														"src": "10364:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10378:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10364:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "10364:15:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1996,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "10390:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$992_storage_ptr",
																"typeString": "struct TombRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 991,
														"src": "10390:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10408:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10390:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2001,
												"nodeType": "ExpressionStatement",
												"src": "10390:19:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2007,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10444:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10444:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2009,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "10456:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2002,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1971,
																"src": "10420:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																	"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 994,
															"src": "10420:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "10420:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10420:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2011,
												"nodeType": "ExpressionStatement",
												"src": "10420:44:4"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2013,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10498:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10498:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2015,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1967,
															"src": "10510:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2016,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "10516:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2012,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "10480:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10480:44:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2018,
												"nodeType": "EmitStatement",
												"src": "10475:49:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 2020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2020,
												"src": "10182:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10182:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10181:14:4"
									},
									"returnParameters": {
										"id": 1969,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10203:0:4"
									},
									"scope": 2143,
									"src": "10155:377:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2062,
										"nodeType": "Block",
										"src": "10711:284:4",
										"statements": [
											{
												"assignments": [
													2028
												],
												"declarations": [
													{
														"constant": false,
														"id": 2028,
														"mutability": "mutable",
														"name": "_tombBal",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2062,
														"src": "10722:16:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2027,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10722:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2036,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2033,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10764:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TombRewardPool_$2143",
																		"typeString": "contract TombRewardPool"
																	}
																],
																"id": 2032,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10756:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2031,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10756:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10756:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2029,
															"name": "tomb",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1005,
															"src": "10741:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "10741:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10741:29:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10722:48:4"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2037,
														"name": "_tombBal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2028,
														"src": "10785:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10796:1:4",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10785:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2061,
												"nodeType": "IfStatement",
												"src": "10781:207:4",
												"trueBody": {
													"id": 2060,
													"nodeType": "Block",
													"src": "10799:189:4",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2040,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "10818:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2041,
																	"name": "_tombBal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2028,
																	"src": "10828:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10818:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2058,
																"nodeType": "Block",
																"src": "10911:66:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2054,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2022,
																					"src": "10948:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2055,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2024,
																					"src": "10953:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2051,
																					"name": "tomb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "10930:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2053,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 111,
																				"src": "10930:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10930:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2057,
																		"nodeType": "ExpressionStatement",
																		"src": "10930:31:4"
																	}
																]
															},
															"id": 2059,
															"nodeType": "IfStatement",
															"src": "10814:163:4",
															"trueBody": {
																"id": 2050,
																"nodeType": "Block",
																"src": "10838:67:4",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2046,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2022,
																					"src": "10875:3:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2047,
																					"name": "_tombBal",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2028,
																					"src": "10880:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2043,
																					"name": "tomb",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1005,
																					"src": "10857:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2045,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 111,
																				"src": "10857:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10857:32:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2049,
																		"nodeType": "ExpressionStatement",
																		"src": "10857:32:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2063,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTombTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2022,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2063,
												"src": "10672:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10672:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2063,
												"src": "10685:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10671:30:4"
									},
									"returnParameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10711:0:4"
									},
									"scope": 2143,
									"src": "10646:349:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "11065:39:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2070,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "11076:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2071,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2065,
														"src": "11087:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11076:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2073,
												"nodeType": "ExpressionStatement",
												"src": "11076:20:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b3ab15fb",
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2068,
											"modifierName": {
												"argumentTypes": null,
												"id": 2067,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "11052:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11052:12:4"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2065,
												"mutability": "mutable",
												"name": "_operator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2075,
												"src": "11024:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11024:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11023:19:4"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11065:0:4"
									},
									"scope": 2143,
									"src": "11003:101:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2141,
										"nodeType": "Block",
										"src": "11249:487:4",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2086,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11264:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11264:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 2088,
																"name": "epochEndTimes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "11282:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$3_storage",
																	"typeString": "uint256[3] storage ref"
																}
															},
															"id": 2090,
															"indexExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11296:1:4",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11282:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3330",
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11301:7:4",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2592000_by_1",
																"typeString": "int_const 2592000"
															},
															"value": "30"
														},
														"src": "11282:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11264:44:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2133,
												"nodeType": "IfStatement",
												"src": "11260:427:4",
												"trueBody": {
													"id": 2132,
													"nodeType": "Block",
													"src": "11310:377:4",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$77",
																			"typeString": "contract IERC20"
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2095,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2077,
																			"src": "11412:6:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2096,
																			"name": "tomb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1005,
																			"src": "11422:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$77",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "11412:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "21746f6d62",
																		"id": 2098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11428:7:4",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_0dc28b856180f50112ef8d41e66d61f57c36c215426a0636f7c2fbdac6deef5e",
																			"typeString": "literal_string \"!tomb\""
																		},
																		"value": "!tomb"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_0dc28b856180f50112ef8d41e66d61f57c36c215426a0636f7c2fbdac6deef5e",
																			"typeString": "literal_string \"!tomb\""
																		}
																	],
																	"id": 2094,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "11404:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11404:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2100,
															"nodeType": "ExpressionStatement",
															"src": "11404:32:4"
														},
														{
															"assignments": [
																2102
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2102,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2132,
																	"src": "11451:14:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2101,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11451:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2105,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2103,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1008,
																	"src": "11468:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																		"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11468:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11451:32:4"
														},
														{
															"body": {
																"id": 2130,
																"nodeType": "Block",
																"src": "11541:135:4",
																"statements": [
																	{
																		"assignments": [
																			2117
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2117,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2130,
																				"src": "11560:21:4",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																					"typeString": "struct TombRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"contractScope": null,
																					"id": 2116,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1003,
																					"src": "11560:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																						"typeString": "struct TombRewardPool.PoolInfo"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2121,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2118,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1008,
																				"src": "11584:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1003_storage_$dyn_storage",
																					"typeString": "struct TombRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2120,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2119,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2107,
																				"src": "11593:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11584:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1003_storage",
																				"typeString": "struct TombRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11560:37:4"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$77",
																						"typeString": "contract IERC20"
																					},
																					"id": 2126,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2123,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2077,
																						"src": "11624:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2124,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2117,
																							"src": "11634:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1003_storage_ptr",
																								"typeString": "struct TombRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2125,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 994,
																						"src": "11634:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$77",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "11624:20:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "21706f6f6c2e746f6b656e",
																					"id": 2127,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11646:13:4",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_03ff65f32cd9bef1f4aeab39889f5a34519148c6a4b1878bf42b20d46d3cac5e",
																						"typeString": "literal_string \"!pool.token\""
																					},
																					"value": "!pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_03ff65f32cd9bef1f4aeab39889f5a34519148c6a4b1878bf42b20d46d3cac5e",
																						"typeString": "literal_string \"!pool.token\""
																					}
																				],
																				"id": 2122,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "11616:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11616:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2129,
																		"nodeType": "ExpressionStatement",
																		"src": "11616:44:4"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2110,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2107,
																	"src": "11520:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2111,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2102,
																	"src": "11526:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11520:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2131,
															"initializationExpression": {
																"assignments": [
																	2107
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2107,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2131,
																		"src": "11503:11:4",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2106,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11503:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2109,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2108,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11517:1:4",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11503:15:4"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "11534:5:4",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2113,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "11536:3:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2115,
																"nodeType": "ExpressionStatement",
																"src": "11534:5:4"
															},
															"nodeType": "ForStatement",
															"src": "11498:178:4"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2137,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "11717:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2138,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "11721:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2134,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2077,
															"src": "11697:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 111,
														"src": "11697:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$77_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$77_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11697:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2140,
												"nodeType": "ExpressionStatement",
												"src": "11697:31:4"
											}
										]
									},
									"documentation": null,
									"functionSelector": "54575af4",
									"id": 2142,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2084,
											"modifierName": {
												"argumentTypes": null,
												"id": 2083,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1159,
												"src": "11236:12:4",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11236:12:4"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2142,
												"src": "11160:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$77",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2076,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 77,
													"src": "11160:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$77",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2142,
												"src": "11184:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11184:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2142,
												"src": "11209:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11209:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "11149:77:4"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11249:0:4"
									},
									"scope": 2143,
									"src": "11112:624:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2144,
							"src": "431:11308:4"
						}
					],
					"src": "35:11706:4"
				},
				"id": 4
			}
		}
	}
}