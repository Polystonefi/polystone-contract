{
	"id": "cd0d8e30b8446ccc495649cfea993a01",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../owner/Operator.sol\";\r\n// Note that this pool has no minter key of Poly (rewards).\r\n// Instead, the governance will call Poly distributeReward method and send reward to this pool at the beginning.\r\ncontract PolyGenesisRewardPool is Operator {\r\n    using SafeMath for uint256;\r\n    using SafeERC20 for IERC20;\r\n\r\n    // Info of each user.\r\n    struct UserInfo {\r\n        uint256 amount; // How many tokens the user has provided.\r\n        uint256 rewardDebt; // Reward debt. See explanation below.\r\n    }\r\n\r\n    // Info of each pool.\r\n    struct PoolInfo {\r\n        IERC20 token; // Address of LP token contract.\r\n        uint256 allocPoint; // How many allocation points assigned to this pool. Poly to distribute.\r\n        uint256 lastRewardTime; // Last time that Poly distribution occurs.\r\n        uint256 accPolyPerShare; // Accumulated Poly per share, times 1e18. See below.\r\n        bool isStarted; // if lastRewardBlock has passed\r\n    }\r\n\r\n    IERC20 public Poly;\r\n\r\n    //Fees\r\n    uint256 public _fees;\r\n    address public _feeColector;\r\n\r\n    // Info of each pool.\r\n    PoolInfo[] public poolInfo;\r\n\r\n    // flags\r\n    bool public initialized = false;\r\n\r\n    // Info of each user that stakes LP tokens.\r\n    mapping(uint256 => mapping(address => UserInfo)) public userInfo;\r\n\r\n    // Total allocation points. Must be the sum of all allocation points in all pools.\r\n    uint256 public totalAllocPoint = 0;\r\n\r\n    // The time when Poly mining starts.\r\n    uint256 public poolStartTime;\r\n\r\n    // The time when Poly mining ends.\r\n    uint256 public poolEndTime;\r\n\r\n    // MAINNET\r\n    uint256 public PolyPerSecond = 0.09645 ether; // 25000 Poly / (72h * 60min * 60s)\r\n    uint256 public runningTime = 3 days; // 1 days\r\n    uint256 public constant TOTAL_REWARDS = 25000 ether;\r\n    // END MAINNET\r\n\r\n    event Deposit(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event Withdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event EmergencyWithdraw(address indexed user, uint256 indexed pid, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 amount);\r\n\r\n    modifier notInitialized {\r\n        require(!initialized, \"Genesis: already initialized\");\r\n\r\n        _;\r\n    }\r\n\r\n    /* ========== VIEW FUNCTIONS ========== */\r\n\r\n    function isInitialized() public view returns (bool) {\r\n        return initialized;\r\n    }\r\n\r\n    function initialize (\r\n        address _Poly,\r\n        uint256 _poolStartTime\r\n    ) public notInitialized onlyOperator {\r\n        require(block.timestamp < _poolStartTime, \"late\");\r\n        if (_Poly != address(0)) Poly = IERC20(_Poly);\r\n        _feeColector = msg.sender;\r\n        poolStartTime = _poolStartTime;\r\n        poolEndTime = poolStartTime + runningTime;\r\n        _fees = 200;\r\n        initialized = true;\r\n    }\r\n\r\n\r\n    function checkPoolDuplicate(IERC20 _token) internal view {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\");\r\n        }\r\n    }\r\n\r\n    // Add a new token to the pool. Can only be called by the owner.\r\n    function add(\r\n        uint256 _allocPoint,\r\n        IERC20 _token,\r\n        bool _withUpdate,\r\n        uint256 _lastRewardTime\r\n    ) public onlyOperator {\r\n        checkPoolDuplicate(_token);\r\n        if (_withUpdate) {\r\n            massUpdatePools();\r\n        }\r\n        if (block.timestamp < poolStartTime) {\r\n            // chef is sleeping\r\n            if (_lastRewardTime == 0) {\r\n                _lastRewardTime = poolStartTime;\r\n            } else {\r\n                if (_lastRewardTime < poolStartTime) {\r\n                    _lastRewardTime = poolStartTime;\r\n                }\r\n            }\r\n        } else {\r\n            // chef is cooking\r\n            if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r\n                _lastRewardTime = block.timestamp;\r\n            }\r\n        }\r\n        bool _isStarted =\r\n        (_lastRewardTime <= poolStartTime) ||\r\n        (_lastRewardTime <= block.timestamp);\r\n        poolInfo.push(PoolInfo({\r\n            token : _token,\r\n            allocPoint : _allocPoint,\r\n            lastRewardTime : _lastRewardTime,\r\n            accPolyPerShare : 0,\r\n            isStarted : _isStarted\r\n            }));\r\n        if (_isStarted) {\r\n            totalAllocPoint = totalAllocPoint.add(_allocPoint);\r\n        }\r\n    }\r\n\r\n    // Update the given pool's Poly allocation point. Can only be called by the owner.\r\n    function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r\n        massUpdatePools();\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (pool.isStarted) {\r\n            totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r\n                _allocPoint\r\n            );\r\n        }\r\n        pool.allocPoint = _allocPoint;\r\n    }\r\n\r\n    // Return accumulate rewards over the given _from to _to block.\r\n    function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r\n        if (_fromTime >= _toTime) return 0;\r\n        if (_toTime >= poolEndTime) {\r\n            if (_fromTime >= poolEndTime) return 0;\r\n            if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return poolEndTime.sub(_fromTime).mul(PolyPerSecond);\r\n        } else {\r\n            if (_toTime <= poolStartTime) return 0;\r\n            if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond);\r\n            return _toTime.sub(_fromTime).mul(PolyPerSecond);\r\n        }\r\n    }\r\n\r\n    // View function to see pending Poly on frontend.\r\n    function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_user];\r\n        uint256 accPolyPerShare = pool.accPolyPerShare;\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            accPolyPerShare = accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        return user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n    }\r\n\r\n    // Update reward variables for all pools. Be careful of gas spending!\r\n    function massUpdatePools() public {\r\n        uint256 length = poolInfo.length;\r\n        for (uint256 pid = 0; pid < length; ++pid) {\r\n            updatePool(pid);\r\n        }\r\n    }\r\n\r\n    // Update reward variables of the given pool to be up-to-date.\r\n    function updatePool(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        if (block.timestamp <= pool.lastRewardTime) {\r\n            return;\r\n        }\r\n        uint256 tokenSupply = pool.token.balanceOf(address(this));\r\n        if (tokenSupply == 0) {\r\n            pool.lastRewardTime = block.timestamp;\r\n            return;\r\n        }\r\n        if (!pool.isStarted) {\r\n            pool.isStarted = true;\r\n            totalAllocPoint = totalAllocPoint.add(pool.allocPoint);\r\n        }\r\n        if (totalAllocPoint > 0) {\r\n            uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp);\r\n            uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint);\r\n            pool.accPolyPerShare = pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply));\r\n        }\r\n        pool.lastRewardTime = block.timestamp;\r\n    }\r\n\r\n\r\n    // Deposit LP tokens.\r\n    function deposit(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        uint256 _fee = _amount.ceil(_fees);\r\n        uint256 _new = _fee.mul(_fees).div(10000);\r\n        uint256 _newAmount = _amount.sub(_new);\r\n\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        updatePool(_pid);\r\n\r\n        if (user.amount > 0) {\r\n            uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n            if (_pending > 0) {\r\n                safePolyTransfer(_sender, _pending);\r\n                emit RewardPaid(_sender, _pending);\r\n            }\r\n        }\r\n        if (_amount > 0) {\r\n            pool.token.safeTransferFrom(_sender, address(this), _amount);\r\n            user.amount = user.amount.add(_newAmount);\r\n            pool.token.safeTransfer(_feeColector, _fee);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18);\r\n        emit Deposit(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw LP tokens.\r\n    function withdraw(uint256 _pid, uint256 _amount) public {\r\n        address _sender = msg.sender;\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][_sender];\r\n        require(user.amount >= _amount, \"withdraw: not good\");\r\n        updatePool(_pid);\r\n        uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt);\r\n        if (_pending > 0) {\r\n            safePolyTransfer(_sender, _pending);\r\n            emit RewardPaid(_sender, _pending);\r\n        }\r\n        if (_amount > 0) {\r\n            user.amount = user.amount.sub(_amount);\r\n            pool.token.safeTransfer(_sender, _amount);\r\n        }\r\n        user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18);\r\n        emit Withdraw(_sender, _pid, _amount);\r\n    }\r\n\r\n    // Withdraw without caring about rewards. EMERGENCY ONLY.\r\n    function emergencyWithdraw(uint256 _pid) public {\r\n        PoolInfo storage pool = poolInfo[_pid];\r\n        UserInfo storage user = userInfo[_pid][msg.sender];\r\n        uint256 _amount = user.amount;\r\n        user.amount = 0;\r\n        user.rewardDebt = 0;\r\n        pool.token.safeTransfer(msg.sender, _amount);\r\n        emit EmergencyWithdraw(msg.sender, _pid, _amount);\r\n    }\r\n\r\n    // Safe Poly transfer function, just encrypt in case if rounding error causes pool to not have enough Polys.\r\n    function safePolyTransfer(address _to, uint256 _amount) internal {\r\n        uint256 _PolyBalance = Poly.balanceOf(address(this));\r\n        if (_PolyBalance > 0) {\r\n            if (_amount > _PolyBalance) {\r\n                Poly.safeTransfer(_to, _PolyBalance);\r\n            } else {\r\n                Poly.safeTransfer(_to, _amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setOperator(address _Newoperator) external onlyOperator {\r\n        transferOperator(_Newoperator);\r\n    }\r\n\r\n    function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r\n        if (block.timestamp < poolEndTime + 90 days) {\r\n            // do not allow to drain core token (Poly or lps) if less than 90 days after pool ends\r\n            require(_token != Poly, \"Poly\");\r\n            uint256 length = poolInfo.length;\r\n            for (uint256 pid = 0; pid < length; ++pid) {\r\n                PoolInfo storage pool = poolInfo[pid];\r\n                require(_token != pool.token, \"pool.token\");\r\n            }\r\n        }\r\n        _token.safeTransfer(to, amount);\r\n    }\r\n}\r\n\r\n"
			},
			"contracts/owner/Operator.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.0 <0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Context.sol\";\r\n\r\nabstract contract Operator is Context, Ownable {\r\n    address private _operator;\r\n\r\n    event OperatorTransferred(\r\n        address indexed previousOperator,\r\n        address indexed newOperator\r\n    );\r\n\r\n    constructor() internal {\r\n        _operator = _msgSender();\r\n        emit OperatorTransferred(address(0), _operator);\r\n    }\r\n\r\n    function operator() public view returns (address) {\r\n        return _operator;\r\n    }\r\n\r\n    modifier onlyOperator() {\r\n        require(\r\n            _operator == msg.sender,\r\n            \"operator: caller is not the operator\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    function isOperator() public view returns (bool) {\r\n        return _msgSender() == _operator;\r\n    }\r\n\r\n    function transferOperator(address newOperator_) public onlyOwner {\r\n        _transferOperator(newOperator_);\r\n    }\r\n\r\n    function _transferOperator(address newOperator_) internal {\r\n        require(\r\n            newOperator_ != address(0),\r\n            \"operator: zero address given for new operator\"\r\n        );\r\n        emit OperatorTransferred(address(0), newOperator_);\r\n        Ownable.transferOwnership(newOperator_);\r\n        _operator = newOperator_;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {\n        uint256 c = add(a, m);\n        uint256 d = sub(c, 1);\n        return mul(div(d, m), m);\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\nimport \"../../../utils/math/SafeMath.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.12 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":629:3733  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB7 NUMBER DUP8 0xE9 0xB1 XOR 0x28 0xDA 0x5E 0xEF DUP10 DELEGATECALL PUSH16 0xE361EF212AB84898BFAFDB079A879C0E 0xA9 DUP5 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "629:3104:2:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "INVALID",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 629,
									"end": 3733,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb74387e9b11828da5eef89f46fe361ef212ab84898bfafdb079a879c0ea98464736f6c634300060c0033",
									".code": [
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 629,
											"end": 3733,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":135:7864  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE DUP12 DIV 0x22 PUSH5 0xC341000E3A GASLIMIT SWAP16 0xB1 0xB2 0x5E 0x5E PUSH16 0x7C0A332A2B272244935D98A1AD012D64 PUSH20 0x6F6C634300060C00330000000000000000000000 ",
							"sourceMap": "135:7729:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 135,
									"end": 7864,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220598b042264c341000e3a459fb1b25e5e6f7c0a332a2b272244935d98a1ad012d64736f6c634300060c0033",
									".code": [
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 135,
											"end": 7864,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":630:7401  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E PUSH25 0x9C7DC208C1CDAF180832363C00B8838A69482D3509FF06125B SWAP10 0xAA SWAP10 0x26 SELFDESTRUCT PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "630:6771:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"ceil(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 630,
									"end": 7401,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204e789c7dc208c1cdaf180832363c00b8838a69482d3509ff06125b99aa9926ff64736f6c634300060c0033",
									".code": [
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 630,
											"end": 7401,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"PolyGenesisRewardPool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "EmergencyWithdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "pid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "Poly",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PolyPerSecond",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_REWARDS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_feeColector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_fees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "_lastRewardTime",
									"type": "uint256"
								}
							],
							"name": "add",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_fromTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_toTime",
									"type": "uint256"
								}
							],
							"name": "getGeneratedReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "governanceRecoverUnsupported",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Poly",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_poolStartTime",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isInitialized",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingStone",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolEndTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "accPolyPerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isStarted",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "runningTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_Newoperator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/distribution/TombGenesisRewardPool.sol\":462:11552  contract PolyGenesisRewardPool is Operator {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1418:1423  false */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1392:1423  bool public initialized = false */\n  0x06\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1675:1676  0 */\n  0x00\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1642:1676  uint256 public totalAllocPoint = 0 */\n  0x08\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1886:1899  0.09645 ether */\n  0x0156a8c394962000\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1855:1899  uint256 public PolyPerSecond = 0.09645 ether */\n  0x0b\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1971:1977  3 days */\n  0x03f480\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":1942:1977  uint256 public runningTime = 3 days */\n  0x0c\n  sstore\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":462:11552  contract PolyGenesisRewardPool is Operator {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:955  address msgSender */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:968  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":958:970  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":938:970  address msgSender = _msgSender() */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":989:998  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:986  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":980:998  _owner = msgSender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1046:1055  msgSender */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1042:1043  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1013:1056  OwnershipTransferred(address(0), msgSender) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":904:1063  constructor () internal {... */\n  pop\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  tag_8\n    /* \"contracts/owner/Operator.sol\":435:445  _msgSender */\n  shl(0x20, tag_6)\n    /* \"contracts/owner/Operator.sol\":435:447  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"contracts/owner/Operator.sol\":423:432  _operator */\n  0x01\n  0x00\n    /* \"contracts/owner/Operator.sol\":423:447  _operator = _msgSender() */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/owner/Operator.sol\":495:504  _operator */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/owner/Operator.sol\":491:492  0 */\n  0x00\n    /* \"contracts/owner/Operator.sol\":463:505  OperatorTransferred(address(0), _operator) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":462:11552  contract PolyGenesisRewardPool is Operator {\r... */\n  jump(tag_9)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/distribution/TombGenesisRewardPool.sol\":462:11552  contract PolyGenesisRewardPool is Operator {\r... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":462:11552  contract PolyGenesisRewardPool is Operator {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x570ca735\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x96805e54\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe177bb38\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xe177bb38\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xecf4deb9\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x96805e54\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xcd6dc687\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xd212a69a\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x715018a6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x93f1a40b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x943f013d\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x570ca735\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x5f96dc11\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x630b5ba1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x6e271dd5\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x2bf8542c\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x4456eda2\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x4456eda2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5312ea8e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x54575af4\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x2bf8542c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x392e53cd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3f7caf52\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x17caf6f1\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1ab06ee5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x231f0c6a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x29605e77\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x09cf6091\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x158ef93e\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1994:2045  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_3:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1343:1369  PoolInfo[] public poolInfo */\n    tag_4:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_45\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      dup7\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup6\n      dup2\n      mstore\n      0x20\n      add\n      dup5\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1392:1423  bool public initialized = false */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1642:1676  uint256 public totalAllocPoint = 0 */\n    tag_6:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4795:5148  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_7:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5225:5878  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_8:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_9:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1280:1307  address public _feeColector */\n    tag_10:\n      tag_59\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2553:2642  function isInitialized() public view returns (bool) {\r... */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1855:1899  uint256 public PolyPerSecond = 0.09645 ether */\n    tag_12:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9070:9880  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_13:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_14:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7052:7960  function updatePool(uint256 _pid) public {\r... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_72\n      jump\t// in\n    tag_70:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9951:10328  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_16:\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10945:11549  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_17:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_78\n      jump\t// in\n    tag_76:\n      stop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1727:1755  uint256 public poolStartTime */\n    tag_19:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6796:6976  function massUpdatePools() public {\r... */\n    tag_20:\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1804:1830  uint256 public poolEndTime */\n    tag_21:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_22:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_23:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1481:1545  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_24:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_93\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1942:1977  uint256 public runningTime = 3 days */\n    tag_25:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3423:4699  function add(\r... */\n    tag_26:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      iszero\n      iszero\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10823:10937  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_27:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_101\n      jump\t// in\n    tag_99:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2650:3074  function initialize (\r... */\n    tag_28:\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_104\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1253:1273  uint256 public _fees */\n    tag_29:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1214:1232  IERC20 public Poly */\n    tag_30:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7997:9034  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_31:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_111\n      jump\t// in\n    tag_109:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5941:6713  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_32:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_114\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_33:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1994:2045  uint256 public constant TOTAL_REWARDS = 25000 ether */\n    tag_42:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2034:2045  25000 ether */\n      0x054b40b1f852bda00000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1994:2045  uint256 public constant TOTAL_REWARDS = 25000 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1343:1369  PoolInfo[] public poolInfo */\n    tag_45:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_118\n      jumpi\n      invalid\n    tag_118:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1392:1423  bool public initialized = false */\n    tag_47:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1642:1676  uint256 public totalAllocPoint = 0 */\n    tag_49:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4795:5148  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n    tag_52:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_121\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_121:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4874:4891  massUpdatePools() */\n      tag_123\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4874:4889  massUpdatePools */\n      tag_84\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4874:4891  massUpdatePools() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4902:4923  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4926:4934  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4935:4939  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4926:4940  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_124\n      jumpi\n      invalid\n    tag_124:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4902:4940  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4955:4959  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4955:4969  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4951:5101  if (pool.isStarted) {\r... */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5089  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      tag_127\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5063:5074  _allocPoint */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5040  totalAllocPoint.sub(pool.allocPoint) */\n      tag_128\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5024:5028  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5024:5039  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5019  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5023  totalAllocPoint.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5040  totalAllocPoint.sub(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_128:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5044  totalAllocPoint.sub(pool.allocPoint).add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5004:5089  totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_127:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4986:5001  totalAllocPoint */\n      0x08\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4986:5089  totalAllocPoint = totalAllocPoint.sub(pool.allocPoint).add(\r... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4951:5101  if (pool.isStarted) {\r... */\n    tag_126:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5129:5140  _allocPoint */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5111:5115  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5111:5126  pool.allocPoint */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5111:5140  pool.allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4795:5148  function set(uint256 _pid, uint256 _allocPoint) public onlyOperator {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5225:5878  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_55:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5310:5317  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5347:5354  _toTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5334:5343  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5334:5354  _fromTime >= _toTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5330:5364  if (_fromTime >= _toTime) return 0 */\n      tag_132\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5363:5364  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5356:5364  return 0 */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5330:5364  if (_fromTime >= _toTime) return 0 */\n    tag_132:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5390:5401  poolEndTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5379:5386  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5379:5401  _toTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5375:5871  if (_toTime >= poolEndTime) {\r... */\n      tag_133\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5435:5446  poolEndTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5422:5431  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5422:5446  _fromTime >= poolEndTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5418:5456  if (_fromTime >= poolEndTime) return 0 */\n      tag_134\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5455:5456  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5448:5456  return 0 */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5418:5456  if (_fromTime >= poolEndTime) return 0 */\n    tag_134:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5488:5501  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5475:5484  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5475:5501  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5471:5559  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_135\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5559  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_136\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5545:5558  PolyPerSecond */\n      sload(0x0b)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5540  poolEndTime.sub(poolStartTime) */\n      tag_137\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5526:5539  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5521  poolEndTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5525  poolEndTime.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5540  poolEndTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5544  poolEndTime.sub(poolStartTime).mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5510:5559  poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5503:5559  return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5471:5559  if (_fromTime <= poolStartTime) return poolEndTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_135:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5626  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_139\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5612:5625  PolyPerSecond */\n      sload(0x0b)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5607  poolEndTime.sub(_fromTime) */\n      tag_140\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5597:5606  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5592  poolEndTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5596  poolEndTime.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5607  poolEndTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_140:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5611  poolEndTime.sub(_fromTime).mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5581:5626  poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_139:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5574:5626  return poolEndTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5375:5871  if (_toTime >= poolEndTime) {\r... */\n    tag_133:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5674:5687  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5663:5670  _toTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5663:5687  _toTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5659:5697  if (_toTime <= poolStartTime) return 0 */\n      tag_142\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5696:5697  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5689:5697  return 0 */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5659:5697  if (_toTime <= poolStartTime) return 0 */\n    tag_142:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5729:5742  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5716:5725  _fromTime */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5716:5742  _fromTime <= poolStartTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5712:5796  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_143\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5796  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      tag_144\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5782:5795  PolyPerSecond */\n      sload(0x0b)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5777  _toTime.sub(poolStartTime) */\n      tag_145\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5763:5776  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5758  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5762  _toTime.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5777  _toTime.sub(poolStartTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_145:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5781  _toTime.sub(poolStartTime).mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5751:5796  _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_144:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5744:5796  return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n      swap1\n      pop\n      jump(tag_131)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5712:5796  if (_fromTime <= poolStartTime) return _toTime.sub(poolStartTime).mul(PolyPerSecond) */\n    tag_143:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5859  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      tag_146\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5845:5858  PolyPerSecond */\n      sload(0x0b)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5840  _toTime.sub(_fromTime) */\n      tag_147\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5830:5839  _fromTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5825  _toTime */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5829  _toTime.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5840  _toTime.sub(_fromTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_147:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5844  _toTime.sub(_fromTime).mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5818:5859  _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5811:5859  return _toTime.sub(_fromTime).mul(PolyPerSecond) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5225:5878  function getGeneratedReward(uint256 _fromTime, uint256 _toTime) public view returns (uint256) {\r... */\n    tag_131:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_149\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      tag_154\n        /* \"contracts/owner/Operator.sol\":988:1000  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":970:987  _transferOperator */\n      tag_155\n        /* \"contracts/owner/Operator.sol\":970:1001  _transferOperator(newOperator_) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/owner/Operator.sol\":894:1009  function transferOperator(address newOperator_) public onlyOwner {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1280:1307  address public _feeColector */\n    tag_60:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2553:2642  function isInitialized() public view returns (bool) {\r... */\n    tag_62:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2599:2603  bool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2623:2634  initialized */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2616:2634  return initialized */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2553:2642  function isInitialized() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1855:1899  uint256 public PolyPerSecond = 0.09645 ether */\n    tag_64:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9070:9880  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n    tag_67:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9137:9152  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9155:9165  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9137:9165  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9176:9197  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9200:9208  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9209:9213  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9200:9214  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_158\n      jumpi\n      invalid\n    tag_158:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9176:9214  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9225:9246  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9249:9257  userInfo */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9249:9263  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9258:9262  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9249:9263  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9249:9272  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9264:9271  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9249:9272  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9225:9272  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9306:9313  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9291:9295  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9291:9302  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9291:9313  user.amount >= _amount */\n      lt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9283:9336  require(user.amount >= _amount, \"withdraw: not good\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x77697468647261773a206e6f7420676f6f640000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9347:9363  updatePool(_pid) */\n      tag_161\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9358:9362  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9347:9357  updatePool */\n      tag_72\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9347:9363  updatePool(_pid) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9374:9390  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9461  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_162\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9445:9449  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9445:9460  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9440  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_163\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9435:9439  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9430  user.amount.mul(pool.accPolyPerShare) */\n      tag_164\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9409:9413  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9409:9429  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9397  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9404  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9408  user.amount.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9430  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_164:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9434  user.amount.mul(pool.accPolyPerShare).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9440  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_163:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9444  user.amount.mul(pool.accPolyPerShare).div(1e18).sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9393:9461  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_162:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9374:9461  uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9487:9488  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9476:9484  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9476:9488  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9472:9601  if (_pending > 0) {\r... */\n      iszero\n      tag_166\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9505:9540  safePolyTransfer(_sender, _pending) */\n      tag_167\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9522:9529  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9531:9539  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9505:9521  safePolyTransfer */\n      tag_168\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9505:9540  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_167:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9571:9578  _sender */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9560:9589  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9580:9588  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9560:9589  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9472:9601  if (_pending > 0) {\r... */\n    tag_166:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9625:9626  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9615:9622  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9615:9626  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9611:9749  if (_amount > 0) {\r... */\n      iszero\n      tag_169\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9657:9681  user.amount.sub(_amount) */\n      tag_170\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9673:9680  _amount */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9657:9661  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9657:9668  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9657:9672  user.amount.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9657:9681  user.amount.sub(_amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9643:9647  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9643:9654  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9643:9681  user.amount = user.amount.sub(_amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9696:9737  pool.token.safeTransfer(_sender, _amount) */\n      tag_171\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9720:9727  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9729:9736  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9696:9700  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9696:9706  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9696:9719  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9696:9737  pool.token.safeTransfer(_sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9611:9749  if (_amount > 0) {\r... */\n    tag_169:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9824  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_173\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9819:9823  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9814  user.amount.mul(pool.accPolyPerShare) */\n      tag_174\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9793:9797  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9793:9813  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9781  user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9788  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9792  user.amount.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9814  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_174:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9818  user.amount.mul(pool.accPolyPerShare).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9777:9824  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9759:9763  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9759:9774  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9759:9824  user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9858:9862  _pid */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9849:9856  _sender */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9840:9872  Withdraw(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9864:9871  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9840:9872  Withdraw(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9070:9880  function withdraw(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n    tag_69:\n        /* \"contracts/owner/Operator.sol\":829:833  bool */\n      0x00\n        /* \"contracts/owner/Operator.sol\":869:878  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      tag_176\n        /* \"contracts/owner/Operator.sol\":853:863  _msgSender */\n      tag_150\n        /* \"contracts/owner/Operator.sol\":853:865  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"contracts/owner/Operator.sol\":853:878  _msgSender() == _operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":846:878  return _msgSender() == _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":786:886  function isOperator() public view returns (bool) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7052:7960  function updatePool(uint256 _pid) public {\r... */\n    tag_72:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7104:7125  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7128:7136  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7137:7141  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7128:7142  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      invalid\n    tag_178:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7104:7142  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7176:7180  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7176:7195  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7157:7172  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7157:7195  block.timestamp <= pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7153:7230  if (block.timestamp <= pool.lastRewardTime) {\r... */\n      tag_180\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7212:7219  return; */\n      pop\n      jump(tag_177)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7153:7230  if (block.timestamp <= pool.lastRewardTime) {\r... */\n    tag_180:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7240:7259  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7262:7266  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7262:7272  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7262:7282  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7291:7295  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7262:7297  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_181\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_183\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_183:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7240:7297  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7327:7328  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7312:7323  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7312:7328  tokenSupply == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7308:7415  if (tokenSupply == 0) {\r... */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7367:7382  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7345:7349  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7345:7364  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7345:7382  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7397:7404  return; */\n      pop\n      pop\n      jump(tag_177)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7308:7415  if (tokenSupply == 0) {\r... */\n    tag_185:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7430:7434  pool */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7430:7444  pool.isStarted */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7425:7563  if (!pool.isStarted) {\r... */\n      tag_186\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7478:7482  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7461:7465  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7461:7475  pool.isStarted */\n      0x04\n      add\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7461:7482  pool.isStarted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7515:7551  totalAllocPoint.add(pool.allocPoint) */\n      tag_187\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7535:7539  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7535:7550  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7515:7530  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7515:7534  totalAllocPoint.add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7515:7551  totalAllocPoint.add(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_187:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7497:7512  totalAllocPoint */\n      0x08\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7497:7551  totalAllocPoint = totalAllocPoint.add(pool.allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7425:7563  if (!pool.isStarted) {\r... */\n    tag_186:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7595:7596  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7577:7592  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7577:7596  totalAllocPoint > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7573:7905  if (totalAllocPoint > 0) {\r... */\n      iszero\n      tag_188\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7613:7637  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7640:7696  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_189\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7659:7663  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7659:7678  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7680:7695  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7640:7658  getGeneratedReward */\n      tag_55\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7640:7696  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7613:7696  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7711:7730  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7791  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_190\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7775:7790  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7770  _generatedReward.mul(pool.allocPoint) */\n      tag_191\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7754:7758  pool */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7754:7769  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7749  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7753  _generatedReward.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7770  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_191:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7774  _generatedReward.mul(pool.allocPoint).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7733:7791  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_190:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7711:7791  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7829:7893  pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_192\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7892  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_193\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7880:7891  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7875  _PolyReward.mul(1e18) */\n      tag_194\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7870:7874  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7865  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7869  _PolyReward.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7875  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7879  _PolyReward.mul(1e18).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7854:7892  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7829:7833  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7829:7849  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7829:7853  pool.accPolyPerShare.add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7829:7893  pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7806:7810  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7806:7826  pool.accPolyPerShare */\n      0x03\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7806:7893  pool.accPolyPerShare = pool.accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7573:7905  if (totalAllocPoint > 0) {\r... */\n      pop\n      pop\n    tag_188:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7937:7952  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7915:7919  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7915:7934  pool.lastRewardTime */\n      0x02\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7915:7952  pool.lastRewardTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7052:7960  function updatePool(uint256 _pid) public {\r... */\n      pop\n      pop\n    tag_177:\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9951:10328  function emergencyWithdraw(uint256 _pid) public {\r... */\n    tag_75:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10010:10031  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10034:10042  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10043:10047  _pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10034:10048  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_196\n      jumpi\n      invalid\n    tag_196:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10010:10048  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10059:10080  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10083:10091  userInfo */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10083:10097  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10092:10096  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10083:10097  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10083:10109  userInfo[_pid][msg.sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10098:10108  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10083:10109  userInfo[_pid][msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10059:10109  UserInfo storage user = userInfo[_pid][msg.sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10120:10135  uint256 _amount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10138:10142  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10138:10149  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10120:10149  uint256 _amount = user.amount */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10174:10175  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10160:10164  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10160:10171  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10160:10175  user.amount = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10204:10205  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10186:10190  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10186:10201  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10186:10205  user.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10216:10260  pool.token.safeTransfer(msg.sender, _amount) */\n      tag_198\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10240:10250  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10252:10259  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10216:10220  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10216:10226  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10216:10239  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10216:10260  pool.token.safeTransfer(msg.sender, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10306:10310  _pid */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10294:10304  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10276:10320  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10312:10319  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10276:10320  EmergencyWithdraw(msg.sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9951:10328  function emergencyWithdraw(uint256 _pid) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10945:11549  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n    tag_78:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11095:11102  90 days */\n      0x76a700\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11081:11092  poolEndTime */\n      sload(0x0a)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11081:11102  poolEndTime + 90 days */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11063:11078  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11063:11102  block.timestamp < poolEndTime + 90 days */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11059:11500  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11237:11241  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11227:11241  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11227:11233  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11227:11241  _token != Poly */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11219:11250  require(_token != Poly, \"Poly\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11265:11279  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11282:11290  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11282:11297  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11265:11297  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11317:11328  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11312:11489  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_204:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11340:11346  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11334:11337  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11334:11346  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11312:11489  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11374:11395  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11398:11406  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11407:11410  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11398:11411  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_207\n      jumpi\n      invalid\n    tag_207:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11374:11411  PoolInfo storage pool = poolInfo[pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11448:11452  pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11448:11458  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11458  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11444  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11438:11458  _token != pool.token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11430:11473  require(_token != pool.token, \"pool.token\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x0a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x706f6f6c2e746f6b656e00000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11312:11489  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11348:11353  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11312:11489  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_204)\n    tag_205:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11059:11500  if (block.timestamp < poolEndTime + 90 days) {\r... */\n      pop\n    tag_202:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11510:11541  _token.safeTransfer(to, amount) */\n      tag_210\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11530:11532  to */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11534:11540  amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11510:11516  _token */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11510:11529  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":11510:11541  _token.safeTransfer(to, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10945:11549  function governanceRecoverUnsupported(IERC20 _token, uint256 amount, address to) external onlyOperator {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n    tag_80:\n        /* \"contracts/owner/Operator.sol\":562:569  address */\n      0x00\n        /* \"contracts/owner/Operator.sol\":589:598  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":582:598  return _operator */\n      swap1\n      pop\n        /* \"contracts/owner/Operator.sol\":521:606  function operator() public view returns (address) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1727:1755  uint256 public poolStartTime */\n    tag_82:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6796:6976  function massUpdatePools() public {\r... */\n    tag_84:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6841:6855  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6858:6866  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6858:6873  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6841:6873  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6889:6900  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6884:6969  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_213:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6912:6918  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6906:6909  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6906:6918  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6884:6969  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_214\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6942:6957  updatePool(pid) */\n      tag_216\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6953:6956  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6942:6952  updatePool */\n      tag_72\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6942:6957  updatePool(pid) */\n      jump\t// in\n    tag_216:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6920:6925  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6884:6969  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_213)\n    tag_214:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6796:6976  function massUpdatePools() public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1804:1830  uint256 public poolEndTime */\n    tag_86:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_219\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_219:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1877:1878  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1861:1867  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1840:1880  OwnershipTransferred(_owner, address(0)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1907:1908  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1896  _owner */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1890:1909  _owner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1771:1916  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1211:1217  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1204:1217  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1139:1224  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1481:1545  mapping(uint256 => mapping(address => UserInfo)) public userInfo */\n    tag_93:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1942:1977  uint256 public runningTime = 3 days */\n    tag_95:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3423:4699  function add(\r... */\n    tag_98:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_224\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_224:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3589:3615  checkPoolDuplicate(_token) */\n      tag_226\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3608:3614  _token */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3589:3607  checkPoolDuplicate */\n      tag_227\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3589:3615  checkPoolDuplicate(_token) */\n      jump\t// in\n    tag_226:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3630:3641  _withUpdate */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3626:3687  if (_withUpdate) {\r... */\n      iszero\n      tag_228\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3658:3675  massUpdatePools() */\n      tag_229\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3658:3673  massUpdatePools */\n      tag_84\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3658:3675  massUpdatePools() */\n      jump\t// in\n    tag_229:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3626:3687  if (_withUpdate) {\r... */\n    tag_228:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3719:3732  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3701:3716  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3701:3732  block.timestamp < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3697:4231  if (block.timestamp < poolStartTime) {\r... */\n      iszero\n      tag_230\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3805:3806  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3786:3801  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3786:3806  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3782:4025  if (_lastRewardTime == 0) {\r... */\n      iszero\n      tag_231\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3845:3858  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3827:3858  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3782:4025  if (_lastRewardTime == 0) {\r... */\n      jump(tag_232)\n    tag_231:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3921:3934  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3903:3918  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3903:3934  _lastRewardTime < poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3899:4010  if (_lastRewardTime < poolStartTime) {\r... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3977:3990  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3959:3990  _lastRewardTime = poolStartTime */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3899:4010  if (_lastRewardTime < poolStartTime) {\r... */\n    tag_233:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3782:4025  if (_lastRewardTime == 0) {\r... */\n    tag_232:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3697:4231  if (block.timestamp < poolStartTime) {\r... */\n      jump(tag_234)\n    tag_230:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4112:4113  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4093:4108  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4093:4113  _lastRewardTime == 0 */\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4093:4150  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n      dup1\n      tag_235\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4135:4150  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4117:4132  _lastRewardTime */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4117:4150  _lastRewardTime < block.timestamp */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4093:4150  _lastRewardTime == 0 || _lastRewardTime < block.timestamp */\n    tag_235:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4089:4220  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n      iszero\n      tag_236\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4189:4204  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4171:4204  _lastRewardTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4089:4220  if (_lastRewardTime == 0 || _lastRewardTime < block.timestamp) {\r... */\n    tag_236:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3697:4231  if (block.timestamp < poolStartTime) {\r... */\n    tag_234:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4241:4256  bool _isStarted */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4288:4301  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4269:4284  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4269:4301  _lastRewardTime <= poolStartTime */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4268:4351  (_lastRewardTime <= poolStartTime) ||\r... */\n      dup1\n      tag_237\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4335:4350  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4316:4331  _lastRewardTime */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4316:4350  _lastRewardTime <= block.timestamp */\n      gt\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4268:4351  (_lastRewardTime <= poolStartTime) ||\r... */\n    tag_237:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4241:4351  bool _isStarted =\r... */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4362:4370  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4408:4414  _token */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4442:4453  _allocPoint */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4485:4500  _lastRewardTime */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4533:4534  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4561:4571  _isStarted */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4376:4587  PoolInfo({\r... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4362:4588  poolInfo.push(PoolInfo({\r... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4603:4613  _isStarted */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4599:4692  if (_isStarted) {\r... */\n      iszero\n      tag_239\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4648:4680  totalAllocPoint.add(_allocPoint) */\n      tag_240\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4668:4679  _allocPoint */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4648:4663  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4648:4667  totalAllocPoint.add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4648:4680  totalAllocPoint.add(_allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4630:4645  totalAllocPoint */\n      0x08\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4630:4680  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":4599:4692  if (_isStarted) {\r... */\n    tag_239:\n        /* \"contracts/owner/Operator.sol\":769:770  _ */\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3423:4699  function add(\r... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10823:10937  function setOperator(address _Newoperator) external onlyOperator {\r... */\n    tag_101:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10899:10929  transferOperator(_Newoperator) */\n      tag_244\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10916:10928  _Newoperator */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10899:10915  transferOperator */\n      tag_58\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10899:10929  transferOperator(_Newoperator) */\n      jump\t// in\n    tag_244:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10823:10937  function setOperator(address _Newoperator) external onlyOperator {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2650:3074  function initialize (\r... */\n    tag_104:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2429:2440  initialized */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2428:2440  !initialized */\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2420:2473  require(!initialized, \"Genesis: already initialized\") */\n      tag_246\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1c\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x47656e657369733a20616c726561647920696e697469616c697a656400000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_246:\n        /* \"contracts/owner/Operator.sol\":684:694  msg.sender */\n      caller\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:680  _operator */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":671:694  _operator == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/owner/Operator.sol\":649:758  require(\r... */\n      tag_248\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_248:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2807:2821  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2789:2804  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2789:2821  block.timestamp < _poolStartTime */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2781:2830  require(block.timestamp < _poolStartTime, \"late\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x04\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6c61746500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2862:2863  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2845:2864  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2845:2850  _Poly */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2845:2864  _Poly != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2841:2886  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n      tag_251\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2880:2885  _Poly */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2866:2870  Poly */\n      0x02\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2866:2886  Poly = IERC20(_Poly) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2841:2886  if (_Poly != address(0)) Poly = IERC20(_Poly) */\n    tag_251:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2912:2922  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2897:2909  _feeColector */\n      0x04\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2897:2922  _feeColector = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2949:2963  _poolStartTime */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2933:2946  poolStartTime */\n      0x09\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2933:2963  poolStartTime = _poolStartTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3004:3015  runningTime */\n      sload(0x0c)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2988:3001  poolStartTime */\n      sload(0x09)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2988:3015  poolStartTime + runningTime */\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2974:2985  poolEndTime */\n      0x0a\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2974:3015  poolEndTime = poolStartTime + runningTime */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3034:3037  200 */\n      0xc8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3026:3031  _fees */\n      0x03\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3026:3037  _fees = 200 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3062:3066  true */\n      0x01\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3048:3059  initialized */\n      0x06\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3048:3066  initialized = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":2650:3074  function initialize (\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1253:1273  uint256 public _fees */\n    tag_106:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":1214:1232  IERC20 public Poly */\n    tag_108:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7997:9034  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n    tag_111:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8063:8078  address _sender */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8081:8091  msg.sender */\n      caller\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8063:8091  address _sender = msg.sender */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8102:8114  uint256 _fee */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8117:8136  _amount.ceil(_fees) */\n      tag_253\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8130:8135  _fees */\n      sload(0x03)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8117:8124  _amount */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8117:8129  _amount.ceil */\n      tag_254\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8117:8136  _amount.ceil(_fees) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_253:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8102:8136  uint256 _fee = _amount.ceil(_fees) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8147:8159  uint256 _new */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8188  _fee.mul(_fees).div(10000) */\n      tag_255\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8182:8187  10000 */\n      0x2710\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8177  _fee.mul(_fees) */\n      tag_256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8171:8176  _fees */\n      sload(0x03)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8166  _fee */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8170  _fee.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8177  _fee.mul(_fees) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8181  _fee.mul(_fees).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8162:8188  _fee.mul(_fees).div(10000) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8147:8188  uint256 _new = _fee.mul(_fees).div(10000) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8199:8217  uint256 _newAmount */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8220:8237  _amount.sub(_new) */\n      tag_257\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8232:8236  _new */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8220:8227  _amount */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8220:8231  _amount.sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8220:8237  _amount.sub(_new) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_257:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8199:8237  uint256 _newAmount = _amount.sub(_new) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8250:8271  PoolInfo storage pool */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8274:8282  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8283:8287  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8274:8288  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_258\n      jumpi\n      invalid\n    tag_258:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8250:8288  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8299:8320  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8323:8331  userInfo */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8323:8337  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8332:8336  _pid */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8323:8337  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8323:8346  userInfo[_pid][_sender] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8338:8345  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8323:8346  userInfo[_pid][_sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8299:8346  UserInfo storage user = userInfo[_pid][_sender] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8357:8373  updatePool(_pid) */\n      tag_260\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8368:8372  _pid */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8357:8367  updatePool */\n      tag_72\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8357:8373  updatePool(_pid) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8404:8405  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8390:8394  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8390:8401  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8390:8405  user.amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8386:8676  if (user.amount > 0) {\r... */\n      iszero\n      tag_261\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8422:8438  uint256 _pending */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8509  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_262\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8493:8497  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8493:8508  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8488  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_263\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8483:8487  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8478  user.amount.mul(pool.accPolyPerShare) */\n      tag_264\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8457:8461  pool */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8457:8477  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8445  user */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8452  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8456  user.amount.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8478  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8482  user.amount.mul(pool.accPolyPerShare).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8488  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8492  user.amount.mul(pool.accPolyPerShare).div(1e18).sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8441:8509  user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8422:8509  uint256 _pending = user.amount.mul(pool.accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8539:8540  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8528:8536  _pending */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8528:8540  _pending > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8524:8665  if (_pending > 0) {\r... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8561:8596  safePolyTransfer(_sender, _pending) */\n      tag_266\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8578:8585  _sender */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8587:8595  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8561:8577  safePolyTransfer */\n      tag_168\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8561:8596  safePolyTransfer(_sender, _pending) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8631:8638  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8620:8649  RewardPaid(_sender, _pending) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8640:8648  _pending */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8620:8649  RewardPaid(_sender, _pending) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8524:8665  if (_pending > 0) {\r... */\n    tag_265:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8386:8676  if (user.amount > 0) {\r... */\n      pop\n    tag_261:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8700:8701  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8690:8697  _amount */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8690:8701  _amount > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8686:8904  if (_amount > 0) {\r... */\n      iszero\n      tag_267\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8718:8778  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      tag_268\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8746:8753  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8763:8767  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8770:8777  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8718:8722  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8718:8728  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8718:8745  pool.token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_269\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8718:8778  pool.token.safeTransferFrom(_sender, address(this), _amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_268:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8834  user.amount.add(_newAmount) */\n      tag_270\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8823:8833  _newAmount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8811  user */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8818  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8822  user.amount.add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8807:8834  user.amount.add(_newAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8793:8797  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8793:8804  user.amount */\n      0x00\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8793:8834  user.amount = user.amount.add(_newAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8849:8892  pool.token.safeTransfer(_feeColector, _fee) */\n      tag_271\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8873:8885  _feeColector */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8887:8891  _fee */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8849:8853  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8849:8859  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8849:8872  pool.token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8849:8892  pool.token.safeTransfer(_feeColector, _fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8686:8904  if (_amount > 0) {\r... */\n    tag_267:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8979  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      tag_272\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8974:8978  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8969  user.amount.mul(pool.accPolyPerShare) */\n      tag_273\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8948:8952  pool */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8948:8968  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8936  user */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8943  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8947  user.amount.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8969  user.amount.mul(pool.accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8973  user.amount.mul(pool.accPolyPerShare).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8932:8979  user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8914:8918  user */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8914:8929  user.rewardDebt */\n      0x01\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8914:8979  user.rewardDebt = user.amount.mul(pool.accPolyPerShare).div(1e18) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9012:9016  _pid */\n      dup8\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9003:9010  _sender */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8995:9026  Deposit(_sender, _pid, _amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":9018:9025  _amount */\n      dup10\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":8995:9026  Deposit(_sender, _pid, _amount) */\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":7997:9034  function deposit(uint256 _pid, uint256 _amount) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5941:6713  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n    tag_114:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6015:6022  uint256 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6035:6056  PoolInfo storage pool */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6059:6067  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6068:6072  _pid */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6059:6073  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_275\n      jumpi\n      invalid\n    tag_275:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6035:6073  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6084:6105  UserInfo storage user */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6108:6116  userInfo */\n      0x07\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6108:6122  userInfo[_pid] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6117:6121  _pid */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6108:6122  userInfo[_pid] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6108:6129  userInfo[_pid][_user] */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6123:6128  _user */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6108:6129  userInfo[_pid][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6084:6129  UserInfo storage user = userInfo[_pid][_user] */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6140:6163  uint256 accPolyPerShare */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6166:6170  pool */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6166:6186  pool.accPolyPerShare */\n      0x03\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6140:6186  uint256 accPolyPerShare = pool.accPolyPerShare */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6197:6216  uint256 tokenSupply */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6219:6223  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6219:6229  pool.token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6219:6239  pool.token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6248:6252  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6219:6254  pool.token.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_277\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_277:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_279\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_279:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_280\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_280:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6197:6254  uint256 tokenSupply = pool.token.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6287:6291  pool */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6287:6306  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6269:6284  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6269:6306  block.timestamp > pool.lastRewardTime */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6269:6326  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n      dup1\n      iszero\n      tag_281\n      jumpi\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6325:6326  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6310:6321  tokenSupply */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6310:6326  tokenSupply != 0 */\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6269:6326  block.timestamp > pool.lastRewardTime && tokenSupply != 0 */\n    tag_281:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6265:6625  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      iszero\n      tag_282\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6343:6367  uint256 _generatedReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6370:6426  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      tag_283\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6389:6393  pool */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6389:6408  pool.lastRewardTime */\n      0x02\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6410:6425  block.timestamp */\n      timestamp\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6370:6388  getGeneratedReward */\n      tag_55\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6370:6426  getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      jump\t// in\n    tag_283:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6343:6426  uint256 _generatedReward = getGeneratedReward(pool.lastRewardTime, block.timestamp) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6441:6460  uint256 _PolyReward */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6521  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_284\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6505:6520  totalAllocPoint */\n      sload(0x08)\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6500  _generatedReward.mul(pool.allocPoint) */\n      tag_285\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6484:6488  pool */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6484:6499  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6479  _generatedReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6483  _generatedReward.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6500  _generatedReward.mul(pool.allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_285:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6504  _generatedReward.mul(pool.allocPoint).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6463:6521  _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_284:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6441:6521  uint256 _PolyReward = _generatedReward.mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6554:6613  accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      tag_286\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6612  _PolyReward.mul(1e18).div(tokenSupply) */\n      tag_287\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6600:6611  tokenSupply */\n      dup5\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6595  _PolyReward.mul(1e18) */\n      tag_288\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6590:6594  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6585  _PolyReward */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6589  _PolyReward.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6595  _PolyReward.mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_288:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6599  _PolyReward.mul(1e18).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6574:6612  _PolyReward.mul(1e18).div(tokenSupply) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_287:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6554:6569  accPolyPerShare */\n      dup6\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6554:6573  accPolyPerShare.add */\n      tag_130\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6554:6613  accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_286:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6536:6613  accPolyPerShare = accPolyPerShare.add(_PolyReward.mul(1e18).div(tokenSupply)) */\n      swap4\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6265:6625  if (block.timestamp > pool.lastRewardTime && tokenSupply != 0) {\r... */\n      pop\n      pop\n    tag_282:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6705  user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      tag_289\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6689:6693  user */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6689:6704  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6684  user.amount.mul(accPolyPerShare).div(1e18) */\n      tag_290\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6679:6683  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6674  user.amount.mul(accPolyPerShare) */\n      tag_291\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6658:6673  accPolyPerShare */\n      dup7\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6646  user */\n      dup9\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6653  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6657  user.amount.mul */\n      tag_138\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6674  user.amount.mul(accPolyPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_291:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6678  user.amount.mul(accPolyPerShare).div */\n      tag_165\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6684  user.amount.mul(accPolyPerShare).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_290:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6688  user.amount.mul(accPolyPerShare).div(1e18).sub */\n      tag_129\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6642:6705  user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_289:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":6635:6705  return user.amount.mul(accPolyPerShare).div(1e18).sub(user.rewardDebt) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":5941:6713  function pendingStone(uint256 _pid, address _user) external view returns (uint256) {\r... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      tag_293\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1372  _msgSender */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1362:1374  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      tag_294\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1356  owner */\n      tag_90\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1358  owner() */\n      jump\t// in\n    tag_294:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1351:1374  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1343:1411  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2173:2174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2161  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2153:2175  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2145:2218  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2262:2270  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2254:2260  _owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2233:2271  OwnershipTransferred(_owner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2290:2298  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2287  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2281:2298  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2065:2305  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3194:3201  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3226:3227  a */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3222  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3221:3227  b <= a */\n      gt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3213:3262  require(b <= a, \"SafeMath: subtraction overflow\") */\n      tag_299\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1e\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a207375627472616374696f6e206f766572666c6f770000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_299:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3283:3284  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3280  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3279:3284  a - b */\n      sub\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3284  return a - b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3136:3291  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2748:2755  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2776  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2783:2784  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2780  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2779:2784  a + b */\n      add\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2767:2784  uint256 c = a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2807:2808  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2803  c */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2802:2808  c >= a */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2794:2840  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1b\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2857:2858  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2850:2858  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2690:2865  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_138:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3596:3603  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3624:3625  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3620  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3619:3625  a == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3634:3635  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3627:3635  return 0 */\n      swap1\n      pop\n      jump(tag_302)\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3615:3635  if (a == 0) return 0 */\n    tag_303:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3654  uint256 c */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3661:3662  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3658  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3657:3662  a * b */\n      mul\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3645:3662  uint256 c = a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3689:3690  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3684:3685  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3681  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3685  c / a */\n      dup2\n      tag_304\n      jumpi\n      invalid\n    tag_304:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3680:3690  c / a == b */\n      eq\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3672:3728  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3745:3746  c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3738:3746  return c */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3538:3753  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_302:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n    tag_150:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":649:656  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":675:685  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":668:685  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":596:692  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n    tag_155:\n        /* \"contracts/owner/Operator.sol\":1132:1133  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1108:1120  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1108:1134  newOperator_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/owner/Operator.sol\":1086:1207  require(\r... */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7\n      0x2d\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"contracts/owner/Operator.sol\":1255:1267  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/owner/Operator.sol\":1251:1252  0 */\n      0x00\n        /* \"contracts/owner/Operator.sol\":1223:1268  OperatorTransferred(address(0), newOperator_) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      tag_309\n        /* \"contracts/owner/Operator.sol\":1305:1317  newOperator_ */\n      dup2\n        /* \"contracts/owner/Operator.sol\":1279:1304  Ownable.transferOwnership */\n      tag_117\n        /* \"contracts/owner/Operator.sol\":1279:1318  Ownable.transferOwnership(newOperator_) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/owner/Operator.sol\":1341:1353  newOperator_ */\n      dup1\n        /* \"contracts/owner/Operator.sol\":1329:1338  _operator */\n      0x01\n      0x00\n        /* \"contracts/owner/Operator.sol\":1329:1353  _operator = newOperator_ */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/owner/Operator.sol\":1017:1361  function _transferOperator(address newOperator_) internal {\r... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4275:4282  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4306:4307  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4303  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4302:4307  b > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4294:4338  require(b > 0, \"SafeMath: division by zero\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x536166654d6174683a206469766973696f6e206279207a65726f000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4359:4360  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4356  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4355:4360  a / b */\n      dup2\n      tag_312\n      jumpi\n      invalid\n    tag_312:\n      div\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4348:4360  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":4217:4367  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10450:10815  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n    tag_168:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10526:10546  uint256 _PolyBalance */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10549:10553  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10549:10563  Poly.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10572:10576  this */\n      address\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10549:10578  Poly.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_314\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_314:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_316\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_316:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10526:10578  uint256 _PolyBalance = Poly.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10608:10609  0 */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10593:10605  _PolyBalance */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10593:10609  _PolyBalance > 0 */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10589:10808  if (_PolyBalance > 0) {\r... */\n      iszero\n      tag_318\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10640:10652  _PolyBalance */\n      dup1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10630:10637  _amount */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10630:10652  _amount > _PolyBalance */\n      gt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10626:10797  if (_amount > _PolyBalance) {\r... */\n      iszero\n      tag_319\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10673:10709  Poly.safeTransfer(_to, _PolyBalance) */\n      tag_320\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10691:10694  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10696:10708  _PolyBalance */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10673:10677  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10673:10690  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10673:10709  Poly.safeTransfer(_to, _PolyBalance) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_320:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10626:10797  if (_amount > _PolyBalance) {\r... */\n      jump(tag_321)\n    tag_319:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10750:10781  Poly.safeTransfer(_to, _amount) */\n      tag_322\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10768:10771  _to */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10773:10780  _amount */\n      dup4\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10750:10754  Poly */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10750:10767  Poly.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_172\n      swap1\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10750:10781  Poly.safeTransfer(_to, _amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_322:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10626:10797  if (_amount > _PolyBalance) {\r... */\n    tag_321:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10589:10808  if (_PolyBalance > 0) {\r... */\n    tag_318:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":10450:10815  function safePolyTransfer(address _to, uint256 _amount) internal {\r... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_324\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":819:824  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":849:872  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":874:876  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":878:883  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":826:884  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:818  _callOptionalReturn */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":799:885  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":717:892  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3084:3345  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n    tag_227:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3152:3166  uint256 length */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3169:3177  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3169:3184  poolInfo.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3152:3184  uint256 length = poolInfo.length */\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3200:3211  uint256 pid */\n      0x00\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3195:3338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n    tag_327:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3223:3229  length */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3217:3220  pid */\n      dup2\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3217:3229  pid < length */\n      lt\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3195:3338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      iszero\n      tag_328\n      jumpi\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3284:3290  _token */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3261:3290  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3261:3269  poolInfo */\n      0x05\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3270:3273  pid */\n      dup3\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3261:3274  poolInfo[pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_330\n      jumpi\n      invalid\n    tag_330:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3261:3280  poolInfo[pid].token */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3261:3290  poolInfo[pid].token != _token */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3253:3326  require(poolInfo[pid].token != _token, \"PolyGenesisPool: existing pool?\") */\n      tag_332\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1f\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f00\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_332:\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3231:3236  ++pid */\n      dup1\n      0x01\n      add\n      swap1\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3195:3338  for (uint256 pid = 0; pid < length; ++pid) {\r... */\n      jump(tag_327)\n    tag_328:\n      pop\n        /* \"contracts/distribution/TombGenesisRewardPool.sol\":3084:3345  function checkPoolDuplicate(IERC20 _token) internal view {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n    tag_254:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5660:5667  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5688  uint256 c */\n      dup1\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      tag_334\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5695:5696  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5698:5699  m */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5694  add */\n      tag_130\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5691:5700  add(a, m) */\n      jump\t// in\n    tag_334:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5679:5700  uint256 c = add(a, m) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5719  uint256 d */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      tag_335\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5726:5727  c */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5729:5730  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5725  sub */\n      tag_129\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5722:5731  sub(c, 1) */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5710:5731  uint256 d = sub(c, 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      tag_336\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      tag_337\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5756:5757  d */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5759:5760  m */\n      dup7\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5755  div */\n      tag_165\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5752:5761  div(d, m) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5763:5764  m */\n      dup6\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5751  mul */\n      tag_138\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5748:5765  mul(div(d, m), m) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5741:5765  return mul(div(d, m), m) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":5601:5772  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1018:1023  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1048:1075  token.transferFrom.selector */\n      shl(0xe0, 0x23b872dd)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1077:1081  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1083:1085  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1087:1092  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1025:1093  abi.encodeWithSelector(token.transferFrom.selector, from, to, value) */\n      add(0x24, mload(0x40))\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1017  _callOptionalReturn */\n      tag_325\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":998:1094  _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value)) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":898:1101  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_325:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3422  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_341\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3453:3457  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3433:3438  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3452  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_342\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3425:3494  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3399:3494  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3528:3529  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3518  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3525  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3508:3529  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3648:3658  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3637:3667  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_344\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_344:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3629:3714  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_345\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3504:3725  if (returndata.length > 0) { // Return data is optional... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":2980:3731  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n    tag_342:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3603:3615  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_347\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3656:3662  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3664:3668  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3670:3671  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3673:3685  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3655  functionCallWithValue */\n      tag_348\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3634:3686  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3627:3686  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3470:3693  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n    tag_348:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4722:4734  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4779:4784  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4775  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4754:4784  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4746:4827  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_350:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      tag_351\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4856:4862  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4855  isContract */\n      tag_352\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4845:4863  isContract(target) */\n      jump\t// in\n    tag_351:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4837:4897  require(isContract(target), \"Address: call to non-contract\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x1d\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4909:4921  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4923:4946  bytes memory returndata */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4961  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4969:4974  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4976:4980  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4981  target.call{value: value}(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_354:\n      0x20\n      dup4\n      lt\n      tag_356\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      0x20\n      dup4\n      sub\n      swap3\n      pop\n      jump(tag_354)\n    tag_356:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_359\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_358)\n    tag_359:\n      0x60\n      swap2\n      pop\n    tag_358:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4908:4981  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      tag_360\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5015:5022  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5024:5034  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5036:5048  errorMessage */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5014  verifyCallResult */\n      tag_361\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4998:5049  verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_360:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4991:5049  return verifyCallResult(success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4557:5056  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n    tag_352:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":787:791  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":990:1002  uint256 size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1055:1062  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1043:1063  extcodesize(account) */\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1035:1063  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1096:1097  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1093  size */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1089:1097  size > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1082:1097  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":727:1104  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_361:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7316:7328  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7344:7351  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n      iszero\n      tag_364\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7374:7384  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7367:7384  return returndata */\n      swap1\n      pop\n      jump(tag_363)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7340:7856  if (success) {... */\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7505:7506  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7495  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7502  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7485:7506  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7481:7846  if (returndata.length > 0) {... */\n      iszero\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7679:7689  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7673:7690  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7739:7754  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7726:7736  returndata */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7724  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7718:7737  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7711:7755  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7628:7773  {... */\n    tag_366:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7818:7830  errorMessage */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7811:7831  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_368:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_370\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_368)\n    tag_370:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_371\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_371:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7170:7862  function verifyCallResult(... */\n    tag_363:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7 6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb 6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa2646970667358221220f810fb44d7199546fde003507d8cf8c1c0a1678094715b9cb8f26475efd6ab8b64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526000600660006101000a81548160ff0219169083151502179055506000600855670156a8c394962000600b556203f480600c553480156200004457600080fd5b50600062000057620001c860201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35062000105620001c860201b60201c565b600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a3620001d0565b600033905090565b61309480620001e06000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c8063570ca7351161010f57806396805e54116100a2578063e177bb3811610071578063e177bb381461076b578063e2bbb1581461079f578063ecf4deb9146107d7578063f2fde38b14610839576101e5565b806396805e5414610657578063b3ab15fb146106bb578063cd6dc687146106ff578063d212a69a1461074d576101e5565b8063715018a6116100de578063715018a6146105925780638da5cb5b1461059c57806393f1a40b146105d0578063943f013d14610639576101e5565b8063570ca735146105185780635f96dc111461054c578063630b5ba11461056a5780636e271dd514610574576101e5565b80632bf8542c116101875780634456eda2116101565780634456eda21461042e57806351eb05a61461044e5780635312ea8e1461047c57806354575af4146104aa576101e5565b80632bf8542c14610384578063392e53cd146103b85780633f7caf52146103d8578063441a3e70146103f6576101e5565b806317caf6f1116101c357806317caf6f11461029e5780631ab06ee5146102bc578063231f0c6a146102f457806329605e7714610340576101e5565b806309cf6091146101ea5780631526fe2714610208578063158ef93e1461027e575b600080fd5b6101f261087d565b6040518082815260200191505060405180910390f35b6102346004803603602081101561021e57600080fd5b810190808035906020019092919050505061088b565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6102866108fb565b60405180821515815260200191505060405180910390f35b6102a661090e565b6040518082815260200191505060405180910390f35b6102f2600480360360408110156102d257600080fd5b810190808035906020019092919080359060200190929190505050610914565b005b61032a6004803603604081101561030a57600080fd5b810190808035906020019092919080359060200190929190505050610a38565b6040518082815260200191505060405180910390f35b6103826004803603602081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b4b565b005b61038c610c06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c0610c2c565b60405180821515815260200191505060405180910390f35b6103e0610c43565b6040518082815260200191505060405180910390f35b61042c6004803603604081101561040c57600080fd5b810190808035906020019092919080359060200190929190505050610c49565b005b610436610f01565b60405180821515815260200191505060405180910390f35b61047a6004803603602081101561046457600080fd5b8101908080359060200190929190505050610f60565b005b6104a86004803603602081101561049257600080fd5b810190808035906020019092919050505061116f565b005b610516600480360360608110156104c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a3565b005b610520611555565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61055461157f565b6040518082815260200191505060405180910390f35b610572611585565b005b61057c6115b2565b6040518082815260200191505060405180910390f35b61059a6115b8565b005b6105a4611725565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61061c600480360360408110156105e657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174e565b604051808381526020018281526020019250505060405180910390f35b61064161177f565b6040518082815260200191505060405180910390f35b6106b96004803603608081101561066d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080359060200190929190505050611785565b005b6106fd600480360360208110156106d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119be565b005b61074b6004803603604081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a70565b005b610755611d00565b6040518082815260200191505060405180910390f35b610773611d06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107d5600480360360408110156107b557600080fd5b810190808035906020019092919080359060200190929190505050611d2c565b005b610823600480360360408110156107ed57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204b565b6040518082815260200191505060405180910390f35b61087b6004803603602081101561084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612283565b005b69054b40b1f852bda0000081565b6005818154811061089857fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600660009054906101000a900460ff1681565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b6109c2611585565b6000600583815481106109d157fe5b906000526020600020906005020190508060040160009054906101000a900460ff1615610a2a57610a2382610a15836001015460085461247590919063ffffffff16565b6124f890919063ffffffff16565b6008819055505b818160010181905550505050565b6000818310610a4a5760009050610b45565b600a548210610ad057600a548310610a655760009050610b45565b6009548311610aa057610a99600b54610a8b600954600a5461247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b610ac9600b54610abb85600a5461247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b6009548211610ae25760009050610b45565b6009548311610b1b57610b14600b54610b066009548561247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b610b42600b54610b34858561247590919063ffffffff16565b61258090919063ffffffff16565b90505b92915050565b610b53612606565b73ffffffffffffffffffffffffffffffffffffffff16610b71611725565b73ffffffffffffffffffffffffffffffffffffffff1614610bfa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c038161260e565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900460ff16905090565b600b5481565b6000339050600060058481548110610c5d57fe5b9060005260206000209060050201905060006007600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610d3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610d4485610f60565b6000610d918260010154610d83670de0b6b3a7640000610d758760030154876000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b90506000811115610df557610da684826127c5565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610e6d57610e1585836000015461247590919063ffffffff16565b8260000181905550610e6c84868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b610ea2670de0b6b3a7640000610e948560030154856000015461258090919063ffffffff16565b61273c90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f44612606565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060058281548110610f6f57fe5b9060005260206000209060050201905080600201544211610f90575061116c565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101d57600080fd5b505afa158015611031573d6000803e3d6000fd5b505050506040513d602081101561104757600080fd5b81019080805190602001909291905050509050600081141561107357428260020181905550505061116c565b8160040160009054906101000a900460ff166110c65760018260040160006101000a81548160ff0219169083151502179055506110bf82600101546008546124f890919063ffffffff16565b6008819055505b600060085411156111605760006110e1836002015442610a38565b9050600061111060085461110286600101548561258090919063ffffffff16565b61273c90919063ffffffff16565b905061115561114284611134670de0b6b3a76400008561258090919063ffffffff16565b61273c90919063ffffffff16565b85600301546124f890919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b60006005828154811061117e57fe5b9060005260206000209060050201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061124e33828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611349576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b6276a700600a540142101561152557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561141c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600580549050905060005b818110156115225760006005828154811061144057fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611429565b50505b61155081838573ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b6000600580549050905060005b818110156115ae576115a381610f60565b806001019050611592565b5050565b600a5481565b6115c0612606565b73ffffffffffffffffffffffffffffffffffffffff166115de611725565b73ffffffffffffffffffffffffffffffffffffffff1614611667576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600c5481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461182b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b611834836129e6565b811561184357611842611585565b5b600954421015611876576000811415611860576009549050611871565b6009548110156118705760095490505b5b61188e565b600081148061188457504281105b1561188d574290505b5b6000600954821115806118a15750428211155b905060056040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156119b7576119b0856008546124f890919063ffffffff16565b6008819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b611a6d81610b4b565b50565b600660009054906101000a900460ff1615611af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b804210611c0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611c845781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600981905550600c5460095401600a8190555060c86003819055506001600660006101000a81548160ff0219169083151502179055505050565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611d4860035484612aeb90919063ffffffff16565b90506000611d75612710611d676003548561258090919063ffffffff16565b61273c90919063ffffffff16565b90506000611d8c828661247590919063ffffffff16565b9050600060058781548110611d9d57fe5b9060005260206000209060050201905060006007600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611e0a88610f60565b600081600001541115611eca576000611e648260010154611e56670de0b6b3a7640000611e488760030154876000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b90506000811115611ec857611e7987826127c5565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115611fb557611f248630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612b26909392919063ffffffff16565b611f3b8382600001546124f890919063ffffffff16565b8160000181905550611fb4600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b611fea670de0b6b3a7640000611fdc8460030154846000015461258090919063ffffffff16565b61273c90919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b6000806005848154811061205b57fe5b9060005260206000209060050201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561215557600080fd5b505afa158015612169573d6000803e3d6000fd5b505050506040513d602081101561217f57600080fd5b810190808051906020019092919050505090508360020154421180156121a6575060008114155b156122305760006121bb856002015442610a38565b905060006121ea6008546121dc88600101548561258090919063ffffffff16565b61273c90919063ffffffff16565b905061222b61221c8461220e670de0b6b3a76400008561258090919063ffffffff16565b61273c90919063ffffffff16565b856124f890919063ffffffff16565b935050505b6122778360010154612269670de0b6b3a764000061225b86886000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b94505050505092915050565b61228b612606565b73ffffffffffffffffffffffffffffffffffffffff166122a9611725565b73ffffffffffffffffffffffffffffffffffffffff1614612332576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f776026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156124ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015612576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156125935760009050612600565b60008284029050828482816125a457fe5b04146125fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ff06021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612fc3602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36126f881612283565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082116127b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816127bc57fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561285057600080fd5b505afa158015612864573d6000803e3d6000fd5b505050506040513d602081101561287a57600080fd5b81019080805190602001909291905050509050600081111561293f57808211156128f0576128eb8382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b61293e565b61293d8383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b5b505050565b6129e18363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612be7565b505050565b6000600580549050905060005b81811015612ae6578273ffffffffffffffffffffffffffffffffffffffff1660058281548110612a1f57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612adb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b8060010190506129f3565b505050565b600080612af884846124f8565b90506000612b07826001612475565b9050612b1c612b16828661273c565b85612580565b9250505092915050565b612be1846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612be7565b50505050565b6060612c49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612cd69092919063ffffffff16565b9050600081511115612cd157808060200190516020811015612c6a57600080fd5b8101908080519060200190929190505050612cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613035602a913960400191505060405180910390fd5b5b505050565b6060612ce58484600085612cee565b90509392505050565b606082471015612d49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f9d6026913960400191505060405180910390fd5b612d5285612e97565b612dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612e145780518252602082019150602081019050602083039250612df1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612e76576040519150601f19603f3d011682016040523d82523d6000602084013e612e7b565b606091505b5091509150612e8b828286612eaa565b92505050949350505050565b600080823b905060008111915050919050565b60608315612eba57829050612f6f565b600083511115612ecd5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f34578082015181840152602081019050612f19565b50505050905090810190601f168015612f615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f810fb44d7199546fde003507d8cf8c1c0a1678094715b9cb8f26475efd6ab8b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x8 SSTORE PUSH8 0x156A8C394962000 PUSH1 0xB SSTORE PUSH3 0x3F480 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH3 0x57 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x105 PUSH3 0x1C8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH3 0x1D0 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3094 DUP1 PUSH3 0x1E0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x839 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xD212A69A EQ PUSH2 0x74D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x639 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x574 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2BF8542C GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4456EDA2 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x4AA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2BF8542C EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x340 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x914 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x520 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x572 PUSH2 0x1585 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57C PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59A PUSH2 0x15B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x641 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x755 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x773 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2283 JUMP JUMPDEST STOP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x898 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9D1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA23 DUP3 PUSH2 0xA15 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xA4A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xAD0 JUMPI PUSH1 0xA SLOAD DUP4 LT PUSH2 0xA65 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT PUSH2 0xAA0 JUMPI PUSH2 0xA99 PUSH1 0xB SLOAD PUSH2 0xA8B PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xAC9 PUSH1 0xB SLOAD PUSH2 0xABB DUP6 PUSH1 0xA SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT PUSH2 0xAE2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT PUSH2 0xB1B JUMPI PUSH2 0xB14 PUSH1 0xB SLOAD PUSH2 0xB06 PUSH1 0x9 SLOAD DUP6 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB42 PUSH1 0xB SLOAD PUSH2 0xB34 DUP6 DUP6 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB71 PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC03 DUP2 PUSH2 0x260E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC5D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD44 DUP6 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xD83 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD75 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDA6 DUP5 DUP3 PUSH2 0x27C5 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE15 DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE6C DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xEA2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE94 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF44 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF6F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xF90 JUMPI POP PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1073 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x116C JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10C6 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10BF DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 PUSH2 0x10E1 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1110 PUSH1 0x8 SLOAD PUSH2 0x1102 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1155 PUSH2 0x1142 DUP5 PUSH2 0x1134 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x117E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x124E CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xA SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1525 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1440 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1429 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1550 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15AE JUMPI PUSH2 0x15A3 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1592 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15DE PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1834 DUP4 PUSH2 0x29E6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1876 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1860 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1870 JUMPI PUSH1 0x9 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x188E JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1884 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x188D JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x18A1 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x19B7 JUMPI PUSH2 0x19B0 DUP6 PUSH1 0x8 SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0xB4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1C0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C84 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0xC SLOAD PUSH1 0x9 SLOAD ADD PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1D48 PUSH1 0x3 SLOAD DUP5 PUSH2 0x2AEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D75 PUSH2 0x2710 PUSH2 0x1D67 PUSH1 0x3 SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D8C DUP3 DUP7 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1D9D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1E0A DUP9 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1ECA JUMPI PUSH1 0x0 PUSH2 0x1E64 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1E56 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E48 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1EC8 JUMPI PUSH2 0x1E79 DUP8 DUP3 PUSH2 0x27C5 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1F24 DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B26 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F3B DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1FB4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1FEA PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FDC DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x205B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2169 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x21A6 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 PUSH2 0x21BB DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21EA PUSH1 0x8 SLOAD PUSH2 0x21DC DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x222B PUSH2 0x221C DUP5 PUSH2 0x220E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2277 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2269 PUSH8 0xDE0B6B3A7640000 PUSH2 0x225B DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228B PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22A9 PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2332 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F77 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x24ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2593 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x25A4 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x25FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FF0 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FC3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x26F8 DUP2 PUSH2 0x2283 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x27B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x27BC JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x287A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x293F JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x28F0 JUMPI PUSH2 0x28EB DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x293E JUMP JUMPDEST PUSH2 0x293D DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29E1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AE6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A1F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2ADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x29F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AF8 DUP5 DUP5 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B07 DUP3 PUSH1 0x1 PUSH2 0x2475 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B1C PUSH2 0x2B16 DUP3 DUP7 PUSH2 0x273C JUMP JUMPDEST DUP6 PUSH2 0x2580 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BE1 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C49 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CD6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CD1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3035 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2CE5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2CEE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2D49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F9D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D52 DUP6 PUSH2 0x2E97 JUMP JUMPDEST PUSH2 0x2DC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2E14 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2E8B DUP3 DUP3 DUP7 PUSH2 0x2EAA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2EBA JUMPI DUP3 SWAP1 POP PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2ECD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220F810FB44 0xD7 NOT SWAP6 CHAINID REVERT 0xE0 SUB POP PUSH30 0x8CF8C1C0A1678094715B9CB8F26475EFD6AB8B64736F6C634300060C0033 ",
							"sourceMap": "462:11090:6:-:0;;;1418:5;1392:31;;;;;;;;;;;;;;;;;;;;1675:1;1642:34;;1886:13;1855:44;;1971:6;1942:35;;462:11090;;;;;;;;;;938:17:0;958:12;:10;;;:12;;:::i;:::-;938:32;;989:9;980:6;;:18;;;;;;;;;;;;;;;;;;1046:9;1013:43;;1042:1;1013:43;;;;;;;;;;;;904:159;435:12:7;:10;;;:12;;:::i;:::-;423:9;;:24;;;;;;;;;;;;;;;;;;495:9;;;;;;;;;;;463:42;;491:1;463:42;;;;;;;;;;;;462:11090:6;;596:96:4;649:7;675:10;668:17;;596:96;:::o;462:11090:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101e55760003560e01c8063570ca7351161010f57806396805e54116100a2578063e177bb3811610071578063e177bb381461076b578063e2bbb1581461079f578063ecf4deb9146107d7578063f2fde38b14610839576101e5565b806396805e5414610657578063b3ab15fb146106bb578063cd6dc687146106ff578063d212a69a1461074d576101e5565b8063715018a6116100de578063715018a6146105925780638da5cb5b1461059c57806393f1a40b146105d0578063943f013d14610639576101e5565b8063570ca735146105185780635f96dc111461054c578063630b5ba11461056a5780636e271dd514610574576101e5565b80632bf8542c116101875780634456eda2116101565780634456eda21461042e57806351eb05a61461044e5780635312ea8e1461047c57806354575af4146104aa576101e5565b80632bf8542c14610384578063392e53cd146103b85780633f7caf52146103d8578063441a3e70146103f6576101e5565b806317caf6f1116101c357806317caf6f11461029e5780631ab06ee5146102bc578063231f0c6a146102f457806329605e7714610340576101e5565b806309cf6091146101ea5780631526fe2714610208578063158ef93e1461027e575b600080fd5b6101f261087d565b6040518082815260200191505060405180910390f35b6102346004803603602081101561021e57600080fd5b810190808035906020019092919050505061088b565b604051808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200182151581526020019550505050505060405180910390f35b6102866108fb565b60405180821515815260200191505060405180910390f35b6102a661090e565b6040518082815260200191505060405180910390f35b6102f2600480360360408110156102d257600080fd5b810190808035906020019092919080359060200190929190505050610914565b005b61032a6004803603604081101561030a57600080fd5b810190808035906020019092919080359060200190929190505050610a38565b6040518082815260200191505060405180910390f35b6103826004803603602081101561035657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b4b565b005b61038c610c06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103c0610c2c565b60405180821515815260200191505060405180910390f35b6103e0610c43565b6040518082815260200191505060405180910390f35b61042c6004803603604081101561040c57600080fd5b810190808035906020019092919080359060200190929190505050610c49565b005b610436610f01565b60405180821515815260200191505060405180910390f35b61047a6004803603602081101561046457600080fd5b8101908080359060200190929190505050610f60565b005b6104a86004803603602081101561049257600080fd5b810190808035906020019092919050505061116f565b005b610516600480360360608110156104c057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506112a3565b005b610520611555565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61055461157f565b6040518082815260200191505060405180910390f35b610572611585565b005b61057c6115b2565b6040518082815260200191505060405180910390f35b61059a6115b8565b005b6105a4611725565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61061c600480360360408110156105e657600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061174e565b604051808381526020018281526020019250505060405180910390f35b61064161177f565b6040518082815260200191505060405180910390f35b6106b96004803603608081101561066d57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080351515906020019092919080359060200190929190505050611785565b005b6106fd600480360360208110156106d157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119be565b005b61074b6004803603604081101561071557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611a70565b005b610755611d00565b6040518082815260200191505060405180910390f35b610773611d06565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6107d5600480360360408110156107b557600080fd5b810190808035906020019092919080359060200190929190505050611d2c565b005b610823600480360360408110156107ed57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061204b565b6040518082815260200191505060405180910390f35b61087b6004803603602081101561084f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612283565b005b69054b40b1f852bda0000081565b6005818154811061089857fe5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b600660009054906101000a900460ff1681565b60085481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146109ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b6109c2611585565b6000600583815481106109d157fe5b906000526020600020906005020190508060040160009054906101000a900460ff1615610a2a57610a2382610a15836001015460085461247590919063ffffffff16565b6124f890919063ffffffff16565b6008819055505b818160010181905550505050565b6000818310610a4a5760009050610b45565b600a548210610ad057600a548310610a655760009050610b45565b6009548311610aa057610a99600b54610a8b600954600a5461247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b610ac9600b54610abb85600a5461247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b6009548211610ae25760009050610b45565b6009548311610b1b57610b14600b54610b066009548561247590919063ffffffff16565b61258090919063ffffffff16565b9050610b45565b610b42600b54610b34858561247590919063ffffffff16565b61258090919063ffffffff16565b90505b92915050565b610b53612606565b73ffffffffffffffffffffffffffffffffffffffff16610b71611725565b73ffffffffffffffffffffffffffffffffffffffff1614610bfa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610c038161260e565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900460ff16905090565b600b5481565b6000339050600060058481548110610c5d57fe5b9060005260206000209060050201905060006007600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001541015610d3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f77697468647261773a206e6f7420676f6f64000000000000000000000000000081525060200191505060405180910390fd5b610d4485610f60565b6000610d918260010154610d83670de0b6b3a7640000610d758760030154876000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b90506000811115610df557610da684826127c5565b8373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b6000851115610e6d57610e1585836000015461247590919063ffffffff16565b8260000181905550610e6c84868560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b610ea2670de0b6b3a7640000610e948560030154856000015461258090919063ffffffff16565b61273c90919063ffffffff16565b8260010181905550858473ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568876040518082815260200191505060405180910390a3505050505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f44612606565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060058281548110610f6f57fe5b9060005260206000209060050201905080600201544211610f90575061116c565b60008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561101d57600080fd5b505afa158015611031573d6000803e3d6000fd5b505050506040513d602081101561104757600080fd5b81019080805190602001909291905050509050600081141561107357428260020181905550505061116c565b8160040160009054906101000a900460ff166110c65760018260040160006101000a81548160ff0219169083151502179055506110bf82600101546008546124f890919063ffffffff16565b6008819055505b600060085411156111605760006110e1836002015442610a38565b9050600061111060085461110286600101548561258090919063ffffffff16565b61273c90919063ffffffff16565b905061115561114284611134670de0b6b3a76400008561258090919063ffffffff16565b61273c90919063ffffffff16565b85600301546124f890919063ffffffff16565b846003018190555050505b42826002018190555050505b50565b60006005828154811061117e57fe5b9060005260206000209060050201905060006007600084815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081600001549050600082600001819055506000826001018190555061124e33828560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b833373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae0595836040518082815260200191505060405180910390a350505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611349576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b6276a700600a540142101561152557600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561141c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f506f6c790000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600580549050905060005b818110156115225760006005828154811061144057fe5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415611516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600a8152602001807f706f6f6c2e746f6b656e0000000000000000000000000000000000000000000081525060200191505060405180910390fd5b50806001019050611429565b50505b61155081838573ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60095481565b6000600580549050905060005b818110156115ae576115a381610f60565b806001019050611592565b5050565b600a5481565b6115c0612606565b73ffffffffffffffffffffffffffffffffffffffff166115de611725565b73ffffffffffffffffffffffffffffffffffffffff1614611667576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6007602052816000526040600020602052806000526040600020600091509150508060000154908060010154905082565b600c5481565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461182b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b611834836129e6565b811561184357611842611585565b5b600954421015611876576000811415611860576009549050611871565b6009548110156118705760095490505b5b61188e565b600081148061188457504281105b1561188d574290505b5b6000600954821115806118a15750428211155b905060056040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200187815260200184815260200160008152602001831515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505080156119b7576119b0856008546124f890919063ffffffff16565b6008819055505b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611a64576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b611a6d81610b4b565b50565b600660009054906101000a900460ff1615611af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f47656e657369733a20616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611b99576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806130116024913960400191505060405180910390fd5b804210611c0e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260048152602001807f6c6174650000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614611c845781600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b33600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600981905550600c5460095401600a8190555060c86003819055506001600660006101000a81548160ff0219169083151502179055505050565b60035481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003390506000611d4860035484612aeb90919063ffffffff16565b90506000611d75612710611d676003548561258090919063ffffffff16565b61273c90919063ffffffff16565b90506000611d8c828661247590919063ffffffff16565b9050600060058781548110611d9d57fe5b9060005260206000209060050201905060006007600089815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050611e0a88610f60565b600081600001541115611eca576000611e648260010154611e56670de0b6b3a7640000611e488760030154876000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b90506000811115611ec857611e7987826127c5565b8673ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486826040518082815260200191505060405180910390a25b505b6000871115611fb557611f248630898560000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612b26909392919063ffffffff16565b611f3b8382600001546124f890919063ffffffff16565b8160000181905550611fb4600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16868460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b611fea670de0b6b3a7640000611fdc8460030154846000015461258090919063ffffffff16565b61273c90919063ffffffff16565b8160010181905550878673ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15896040518082815260200191505060405180910390a35050505050505050565b6000806005848154811061205b57fe5b9060005260206000209060050201905060006007600086815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008260030154905060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561215557600080fd5b505afa158015612169573d6000803e3d6000fd5b505050506040513d602081101561217f57600080fd5b810190808051906020019092919050505090508360020154421180156121a6575060008114155b156122305760006121bb856002015442610a38565b905060006121ea6008546121dc88600101548561258090919063ffffffff16565b61273c90919063ffffffff16565b905061222b61221c8461220e670de0b6b3a76400008561258090919063ffffffff16565b61273c90919063ffffffff16565b856124f890919063ffffffff16565b935050505b6122778360010154612269670de0b6b3a764000061225b86886000015461258090919063ffffffff16565b61273c90919063ffffffff16565b61247590919063ffffffff16565b94505050505092915050565b61228b612606565b73ffffffffffffffffffffffffffffffffffffffff166122a9611725565b73ffffffffffffffffffffffffffffffffffffffff1614612332576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156123b8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f776026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000828211156124ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b600080828401905083811015612576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000808314156125935760009050612600565b60008284029050828482816125a457fe5b04146125fb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612ff06021913960400191505060405180910390fd5b809150505b92915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612fc3602d913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f74da04524d50c64947f5dd5381ef1a4dca5cba8ed1d816243f9e48aa0b5617ed60405160405180910390a36126f881612283565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008082116127b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b8183816127bc57fe5b04905092915050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561285057600080fd5b505afa158015612864573d6000803e3d6000fd5b505050506040513d602081101561287a57600080fd5b81019080805190602001909291905050509050600081111561293f57808211156128f0576128eb8382600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b61293e565b61293d8383600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166129449092919063ffffffff16565b5b5b505050565b6129e18363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612be7565b505050565b6000600580549050905060005b81811015612ae6578273ffffffffffffffffffffffffffffffffffffffff1660058281548110612a1f57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612adb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f0081525060200191505060405180910390fd5b8060010190506129f3565b505050565b600080612af884846124f8565b90506000612b07826001612475565b9050612b1c612b16828661273c565b85612580565b9250505092915050565b612be1846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612be7565b50505050565b6060612c49826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612cd69092919063ffffffff16565b9050600081511115612cd157808060200190516020811015612c6a57600080fd5b8101908080519060200190929190505050612cd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613035602a913960400191505060405180910390fd5b5b505050565b6060612ce58484600085612cee565b90509392505050565b606082471015612d49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612f9d6026913960400191505060405180910390fd5b612d5285612e97565b612dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b60208310612e145780518252602082019150602081019050602083039250612df1565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114612e76576040519150601f19603f3d011682016040523d82523d6000602084013e612e7b565b606091505b5091509150612e8b828286612eaa565b92505050949350505050565b600080823b905060008111915050919050565b60608315612eba57829050612f6f565b600083511115612ecd5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612f34578082015181840152602081019050612f19565b50505050905090810190601f168015612f615780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f810fb44d7199546fde003507d8cf8c1c0a1678094715b9cb8f26475efd6ab8b64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0x96805E54 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE177BB38 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE177BB38 EQ PUSH2 0x76B JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x79F JUMPI DUP1 PUSH4 0xECF4DEB9 EQ PUSH2 0x7D7 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x839 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x96805E54 EQ PUSH2 0x657 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0x6BB JUMPI DUP1 PUSH4 0xCD6DC687 EQ PUSH2 0x6FF JUMPI DUP1 PUSH4 0xD212A69A EQ PUSH2 0x74D JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x59C JUMPI DUP1 PUSH4 0x93F1A40B EQ PUSH2 0x5D0 JUMPI DUP1 PUSH4 0x943F013D EQ PUSH2 0x639 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x570CA735 EQ PUSH2 0x518 JUMPI DUP1 PUSH4 0x5F96DC11 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x56A JUMPI DUP1 PUSH4 0x6E271DD5 EQ PUSH2 0x574 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2BF8542C GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x4456EDA2 GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x4456EDA2 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0x5312EA8E EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x54575AF4 EQ PUSH2 0x4AA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x2BF8542C EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x392E53CD EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x3F7CAF52 EQ PUSH2 0x3D8 JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x3F6 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x17CAF6F1 GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x29E JUMPI DUP1 PUSH4 0x1AB06EE5 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x231F0C6A EQ PUSH2 0x2F4 JUMPI DUP1 PUSH4 0x29605E77 EQ PUSH2 0x340 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x9CF6091 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x158EF93E EQ PUSH2 0x27E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1F2 PUSH2 0x87D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x88B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH2 0x90E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x914 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x30A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x382 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xB4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x38C PUSH2 0xC06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C0 PUSH2 0xC2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E0 PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x42C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xC49 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x436 PUSH2 0xF01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47A PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x464 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xF60 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x516 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x12A3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x520 PUSH2 0x1555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH2 0x157F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x572 PUSH2 0x1585 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57C PUSH2 0x15B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59A PUSH2 0x15B8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x5A4 PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x61C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x174E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x641 PUSH2 0x177F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD ISZERO ISZERO SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1785 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6FD PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x19BE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x74B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1A70 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x755 PUSH2 0x1D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x773 PUSH2 0x1D06 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1D2C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x823 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x7ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x87B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x84F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2283 JUMP JUMPDEST STOP JUMPDEST PUSH10 0x54B40B1F852BDA00000 DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x898 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9C2 PUSH2 0x1585 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x9D1 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA2A JUMPI PUSH2 0xA23 DUP3 PUSH2 0xA15 DUP4 PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0xA4A JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0xA SLOAD DUP3 LT PUSH2 0xAD0 JUMPI PUSH1 0xA SLOAD DUP4 LT PUSH2 0xA65 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT PUSH2 0xAA0 JUMPI PUSH2 0xA99 PUSH1 0xB SLOAD PUSH2 0xA8B PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xAC9 PUSH1 0xB SLOAD PUSH2 0xABB DUP6 PUSH1 0xA SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP3 GT PUSH2 0xAE2 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP4 GT PUSH2 0xB1B JUMPI PUSH2 0xB14 PUSH1 0xB SLOAD PUSH2 0xB06 PUSH1 0x9 SLOAD DUP6 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xB45 JUMP JUMPDEST PUSH2 0xB42 PUSH1 0xB SLOAD PUSH2 0xB34 DUP6 DUP6 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB53 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB71 PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC03 DUP2 PUSH2 0x260E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xC5D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP4 DUP2 PUSH1 0x0 ADD SLOAD LT ISZERO PUSH2 0xD3B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x77697468647261773A206E6F7420676F6F640000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD44 DUP6 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD91 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xD83 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD75 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDA6 DUP5 DUP3 PUSH2 0x27C5 JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST PUSH1 0x0 DUP6 GT ISZERO PUSH2 0xE6D JUMPI PUSH2 0xE15 DUP6 DUP4 PUSH1 0x0 ADD SLOAD PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE6C DUP5 DUP7 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0xEA2 PUSH8 0xDE0B6B3A7640000 PUSH2 0xE94 DUP6 PUSH1 0x3 ADD SLOAD DUP6 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF44 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF6F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP GT PUSH2 0xF90 JUMPI POP PUSH2 0x116C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x101D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1031 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1073 JUMPI TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x116C JUMP JUMPDEST DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x10C6 JUMPI PUSH1 0x1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x10BF DUP3 PUSH1 0x1 ADD SLOAD PUSH1 0x8 SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x8 SLOAD GT ISZERO PUSH2 0x1160 JUMPI PUSH1 0x0 PUSH2 0x10E1 DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1110 PUSH1 0x8 SLOAD PUSH2 0x1102 DUP7 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1155 PUSH2 0x1142 DUP5 PUSH2 0x1134 PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH1 0x3 ADD SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST TIMESTAMP DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x117E JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x124E CALLER DUP3 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1349 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0xA SLOAD ADD TIMESTAMP LT ISZERO PUSH2 0x1525 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x141C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1522 JUMPI PUSH1 0x0 PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1440 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1516 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x706F6F6C2E746F6B656E00000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1429 JUMP JUMPDEST POP POP JUMPDEST PUSH2 0x1550 DUP2 DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x15AE JUMPI PUSH2 0x15A3 DUP2 PUSH2 0xF60 JUMP JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x1592 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x15C0 PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15DE PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1667 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1834 DUP4 PUSH2 0x29E6 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1843 JUMPI PUSH2 0x1842 PUSH2 0x1585 JUMP JUMPDEST JUMPDEST PUSH1 0x9 SLOAD TIMESTAMP LT ISZERO PUSH2 0x1876 JUMPI PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x1860 JUMPI PUSH1 0x9 SLOAD SWAP1 POP PUSH2 0x1871 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 LT ISZERO PUSH2 0x1870 JUMPI PUSH1 0x9 SLOAD SWAP1 POP JUMPDEST JUMPDEST PUSH2 0x188E JUMP JUMPDEST PUSH1 0x0 DUP2 EQ DUP1 PUSH2 0x1884 JUMPI POP TIMESTAMP DUP2 LT JUMPDEST ISZERO PUSH2 0x188D JUMPI TIMESTAMP SWAP1 POP JUMPDEST JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 GT ISZERO DUP1 PUSH2 0x18A1 JUMPI POP TIMESTAMP DUP3 GT ISZERO JUMPDEST SWAP1 POP PUSH1 0x5 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP1 ISZERO PUSH2 0x19B7 JUMPI PUSH2 0x19B0 DUP6 PUSH1 0x8 SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A6D DUP2 PUSH2 0xB4B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1C DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x47656E657369733A20616C726561647920696E697469616C697A656400000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B99 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3011 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x1C0E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6C61746500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1C84 JUMPI DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP PUSH1 0xC SLOAD PUSH1 0x9 SLOAD ADD PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0xC8 PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH1 0x0 PUSH2 0x1D48 PUSH1 0x3 SLOAD DUP5 PUSH2 0x2AEB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D75 PUSH2 0x2710 PUSH2 0x1D67 PUSH1 0x3 SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1D8C DUP3 DUP7 PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x1D9D JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH2 0x1E0A DUP9 PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x1ECA JUMPI PUSH1 0x0 PUSH2 0x1E64 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x1E56 PUSH8 0xDE0B6B3A7640000 PUSH2 0x1E48 DUP8 PUSH1 0x3 ADD SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x1EC8 JUMPI PUSH2 0x1E79 DUP8 DUP3 PUSH2 0x27C5 JUMP JUMPDEST DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP JUMPDEST PUSH1 0x0 DUP8 GT ISZERO PUSH2 0x1FB5 JUMPI PUSH2 0x1F24 DUP7 ADDRESS DUP10 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2B26 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1F3B DUP4 DUP3 PUSH1 0x0 ADD SLOAD PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1FB4 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH2 0x1FEA PUSH8 0xDE0B6B3A7640000 PUSH2 0x1FDC DUP5 PUSH1 0x3 ADD SLOAD DUP5 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP8 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 DUP10 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x205B JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2169 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x217F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP4 PUSH1 0x2 ADD SLOAD TIMESTAMP GT DUP1 ISZERO PUSH2 0x21A6 JUMPI POP PUSH1 0x0 DUP2 EQ ISZERO JUMPDEST ISZERO PUSH2 0x2230 JUMPI PUSH1 0x0 PUSH2 0x21BB DUP6 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA38 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x21EA PUSH1 0x8 SLOAD PUSH2 0x21DC DUP9 PUSH1 0x1 ADD SLOAD DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x222B PUSH2 0x221C DUP5 PUSH2 0x220E PUSH8 0xDE0B6B3A7640000 DUP6 PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 PUSH2 0x24F8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x2277 DUP4 PUSH1 0x1 ADD SLOAD PUSH2 0x2269 PUSH8 0xDE0B6B3A7640000 PUSH2 0x225B DUP7 DUP9 PUSH1 0x0 ADD SLOAD PUSH2 0x2580 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x273C SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x2475 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x228B PUSH2 0x2606 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22A9 PUSH2 0x1725 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2332 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x23B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F77 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x24ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP5 ADD SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x2576 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 EQ ISZERO PUSH2 0x2593 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x2600 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 MUL SWAP1 POP DUP3 DUP5 DUP3 DUP2 PUSH2 0x25A4 JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x25FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FF0 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2694 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2FC3 PUSH1 0x2D SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x26F8 DUP2 PUSH2 0x2283 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x27B3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x27BC JUMPI INVALID JUMPDEST DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2850 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2864 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x287A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0x293F JUMPI DUP1 DUP3 GT ISZERO PUSH2 0x28F0 JUMPI PUSH2 0x28EB DUP4 DUP3 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x293E JUMP JUMPDEST PUSH2 0x293D DUP4 DUP4 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2944 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x29E1 DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2AE6 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A1F JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2ADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1F DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD SWAP1 POP PUSH2 0x29F3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2AF8 DUP5 DUP5 PUSH2 0x24F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2B07 DUP3 PUSH1 0x1 PUSH2 0x2475 JUMP JUMPDEST SWAP1 POP PUSH2 0x2B1C PUSH2 0x2B16 DUP3 DUP7 PUSH2 0x273C JUMP JUMPDEST DUP6 PUSH2 0x2580 JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BE1 DUP5 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x2BE7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2C49 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CD6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x2CD1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2C6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2CD0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x3035 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2CE5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2CEE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2D49 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x2F9D PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2D52 DUP6 PUSH2 0x2E97 JUMP JUMPDEST PUSH2 0x2DC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2E14 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x2DF1 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2E76 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2E7B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2E8B DUP3 DUP3 DUP7 PUSH2 0x2EAA JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x2EBA JUMPI DUP3 SWAP1 POP PUSH2 0x2F6F JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT ISZERO PUSH2 0x2ECD JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2F34 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2F19 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x2F61 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID 0x4F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C6F706572 PUSH2 0x746F PUSH19 0x3A207A65726F20616464726573732067697665 PUSH15 0x20666F72206E6577206F7065726174 PUSH16 0x72536166654D6174683A206D756C7469 PUSH17 0x6C69636174696F6E206F766572666C6F77 PUSH16 0x70657261746F723A2063616C6C657220 PUSH10 0x73206E6F742074686520 PUSH16 0x70657261746F72536166654552433230 GASPRICE KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A2646970667358221220F810FB44 0xD7 NOT SWAP6 CHAINID REVERT 0xE0 SUB POP PUSH30 0x8CF8C1C0A1678094715B9CB8F26475EFD6AB8B64736F6C634300060C0033 ",
							"sourceMap": "462:11090:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1343:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1642:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4795:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5225:653;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;894:115:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1280:27:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2553:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1855:44;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9070:810;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;786:100:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7052:908:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9951:377;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10945:604;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;521:85:7;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1727:28:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6796:180;;;:::i;:::-;;1804:26;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1771:145:0;;;:::i;:::-;;1139:85;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1481:64:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1942:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3423:1276;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10823:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2650:424;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1253:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1214:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;7997:1037;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5941:772;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2065:240:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1994:51:6;2034:11;1994:51;:::o;1343:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1392:31::-;;;;;;;;;;;;;:::o;1642:34::-;;;;:::o;4795:353::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4874:17:6::1;:15;:17::i;:::-;4902:21;4926:8;4935:4;4926:14;;;;;;;;;;;;;;;;;;4902:38;;4955:4;:14;;;;;;;;;;;;4951:150;;;5004:85;5063:11;5004:36;5024:4;:15;;;5004;;:19;;:36;;;;:::i;:::-;:40;;:85;;;;:::i;:::-;4986:15;:103;;;;4951:150;5129:11;5111:4;:15;;:29;;;;769:1:7;4795:353:6::0;;:::o;5225:653::-;5310:7;5347;5334:9;:20;5330:34;;5363:1;5356:8;;;;5330:34;5390:11;;5379:7;:22;5375:496;;5435:11;;5422:9;:24;5418:38;;5455:1;5448:8;;;;5418:38;5488:13;;5475:9;:26;5471:88;;5510:49;5545:13;;5510:30;5526:13;;5510:11;;:15;;:30;;;;:::i;:::-;:34;;:49;;;;:::i;:::-;5503:56;;;;5471:88;5581:45;5612:13;;5581:26;5597:9;5581:11;;:15;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5574:52;;;;5375:496;5674:13;;5663:7;:24;5659:38;;5696:1;5689:8;;;;5659:38;5729:13;;5716:9;:26;5712:84;;5751:45;5782:13;;5751:26;5763:13;;5751:7;:11;;:26;;;;:::i;:::-;:30;;:45;;;;:::i;:::-;5744:52;;;;5712:84;5818:41;5845:13;;5818:22;5830:9;5818:7;:11;;:22;;;;:::i;:::-;:26;;:41;;;;:::i;:::-;5811:48;;5225:653;;;;;:::o;894:115:7:-;1362:12:0;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;970:31:7::1;988:12;970:17;:31::i;:::-;894:115:::0;:::o;1280:27:6:-;;;;;;;;;;;;;:::o;2553:89::-;2599:4;2623:11;;;;;;;;;;;2616:18;;2553:89;:::o;1855:44::-;;;;:::o;9070:810::-;9137:15;9155:10;9137:28;;9176:21;9200:8;9209:4;9200:14;;;;;;;;;;;;;;;;;;9176:38;;9225:21;9249:8;:14;9258:4;9249:14;;;;;;;;;;;:23;9264:7;9249:23;;;;;;;;;;;;;;;9225:47;;9306:7;9291:4;:11;;;:22;;9283:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9347:16;9358:4;9347:10;:16::i;:::-;9374;9393:68;9445:4;:15;;;9393:47;9435:4;9393:37;9409:4;:20;;;9393:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;9374:87;;9487:1;9476:8;:12;9472:129;;;9505:35;9522:7;9531:8;9505:16;:35::i;:::-;9571:7;9560:29;;;9580:8;9560:29;;;;;;;;;;;;;;;;;;9472:129;9625:1;9615:7;:11;9611:138;;;9657:24;9673:7;9657:4;:11;;;:15;;:24;;;;:::i;:::-;9643:4;:11;;:38;;;;9696:41;9720:7;9729;9696:4;:10;;;;;;;;;;;;:23;;;;:41;;;;;:::i;:::-;9611:138;9777:47;9819:4;9777:37;9793:4;:20;;;9777:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;9759:4;:15;;:65;;;;9858:4;9849:7;9840:32;;;9864:7;9840:32;;;;;;;;;;;;;;;;;;9070:810;;;;;;:::o;786:100:7:-;829:4;869:9;;;;;;;;;;;853:25;;:12;:10;:12::i;:::-;:25;;;846:32;;786:100;:::o;7052:908:6:-;7104:21;7128:8;7137:4;7128:14;;;;;;;;;;;;;;;;;;7104:38;;7176:4;:19;;;7157:15;:38;7153:77;;7212:7;;;7153:77;7240:19;7262:4;:10;;;;;;;;;;;;:20;;;7291:4;7262:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7240:57;;7327:1;7312:11;:16;7308:107;;;7367:15;7345:4;:19;;:37;;;;7397:7;;;;7308:107;7430:4;:14;;;;;;;;;;;;7425:138;;7478:4;7461;:14;;;:21;;;;;;;;;;;;;;;;;;7515:36;7535:4;:15;;;7515;;:19;;:36;;;;:::i;:::-;7497:15;:54;;;;7425:138;7595:1;7577:15;;:19;7573:332;;;7613:24;7640:56;7659:4;:19;;;7680:15;7640:18;:56::i;:::-;7613:83;;7711:19;7733:58;7775:15;;7733:37;7754:4;:15;;;7733:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;7711:80;;7829:64;7854:38;7880:11;7854:21;7870:4;7854:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;7829:4;:20;;;:24;;:64;;;;:::i;:::-;7806:4;:20;;:87;;;;7573:332;;;7937:15;7915:4;:19;;:37;;;;7052:908;;;;:::o;9951:377::-;10010:21;10034:8;10043:4;10034:14;;;;;;;;;;;;;;;;;;10010:38;;10059:21;10083:8;:14;10092:4;10083:14;;;;;;;;;;;:26;10098:10;10083:26;;;;;;;;;;;;;;;10059:50;;10120:15;10138:4;:11;;;10120:29;;10174:1;10160:4;:11;;:15;;;;10204:1;10186:4;:15;;:19;;;;10216:44;10240:10;10252:7;10216:4;:10;;;;;;;;;;;;:23;;;;:44;;;;;:::i;:::-;10306:4;10294:10;10276:44;;;10312:7;10276:44;;;;;;;;;;;;;;;;;;9951:377;;;;:::o;10945:604::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11095:7:6::1;11081:11;;:21;11063:15;:39;11059:441;;;11237:4;;;;;;;;;;;11227:14;;:6;:14;;;;11219:31;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11265:14;11282:8;:15;;;;11265:32;;11317:11;11312:177;11340:6;11334:3;:12;11312:177;;;11374:21;11398:8;11407:3;11398:13;;;;;;;;;;;;;;;;;;11374:37;;11448:4;:10;;;;;;;;;;;;11438:20;;:6;:20;;;;11430:43;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;11312:177;11348:5;;;;;11312:177;;;;11059:441;;11510:31;11530:2;11534:6;11510;:19;;;;:31;;;;;:::i;:::-;10945:604:::0;;;:::o;521:85:7:-;562:7;589:9;;;;;;;;;;;582:16;;521:85;:::o;1727:28:6:-;;;;:::o;6796:180::-;6841:14;6858:8;:15;;;;6841:32;;6889:11;6884:85;6912:6;6906:3;:12;6884:85;;;6942:15;6953:3;6942:10;:15::i;:::-;6920:5;;;;;6884:85;;;;6796:180;:::o;1804:26::-;;;;:::o;1771:145:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1877:1:::1;1840:40;;1861:6;::::0;::::1;;;;;;;;1840:40;;;;;;;;;;;;1907:1;1890:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1771:145::o:0;1139:85::-;1185:7;1211:6;;;;;;;;;;;1204:13;;1139:85;:::o;1481:64:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1942:35::-;;;;:::o;3423:1276::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3589:26:6::1;3608:6;3589:18;:26::i;:::-;3630:11;3626:61;;;3658:17;:15;:17::i;:::-;3626:61;3719:13;;3701:15;:31;3697:534;;;3805:1;3786:15;:20;3782:243;;;3845:13;;3827:31;;3782:243;;;3921:13;;3903:15;:31;3899:111;;;3977:13;;3959:31;;3899:111;3782:243;3697:534;;;4112:1;4093:15;:20;:57;;;;4135:15;4117;:33;4093:57;4089:131;;;4189:15;4171:33;;4089:131;3697:534;4241:15;4288:13;;4269:15;:32;;4268:83;;;;4335:15;4316;:34;;4268:83;4241:110;;4362:8;4376:211;;;;;;;;4408:6;4376:211;;;;;;4442:11;4376:211;;;;4485:15;4376:211;;;;4533:1;4376:211;;;;4561:10;4376:211;;;;::::0;4362:226:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4603:10;4599:93;;;4648:32;4668:11;4648:15;;:19;;:32;;;;:::i;:::-;4630:15;:50;;;;4599:93;769:1:7;3423:1276:6::0;;;;:::o;10823:114::-;684:10:7;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10899:30:6::1;10916:12;10899:16;:30::i;:::-;10823:114:::0;:::o;2650:424::-;2429:11;;;;;;;;;;;2428:12;2420:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;684:10:7::1;671:23;;:9;;;;;;;;;;;:23;;;649:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2807:14:6::2;2789:15;:32;2781:49;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;2862:1;2845:19;;:5;:19;;;2841:45;;2880:5;2866:4;;:20;;;;;;;;;;;;;;;;;;2841:45;2912:10;2897:12;;:25;;;;;;;;;;;;;;;;;;2949:14;2933:13;:30;;;;3004:11;;2988:13;;:27;2974:11;:41;;;;3034:3;3026:5;:11;;;;3062:4;3048:11;;:18;;;;;;;;;;;;;;;;;;2650:424:::0;;:::o;1253:20::-;;;;:::o;1214:18::-;;;;;;;;;;;;;:::o;7997:1037::-;8063:15;8081:10;8063:28;;8102:12;8117:19;8130:5;;8117:7;:12;;:19;;;;:::i;:::-;8102:34;;8147:12;8162:26;8182:5;8162:15;8171:5;;8162:4;:8;;:15;;;;:::i;:::-;:19;;:26;;;;:::i;:::-;8147:41;;8199:18;8220:17;8232:4;8220:7;:11;;:17;;;;:::i;:::-;8199:38;;8250:21;8274:8;8283:4;8274:14;;;;;;;;;;;;;;;;;;8250:38;;8299:21;8323:8;:14;8332:4;8323:14;;;;;;;;;;;:23;8338:7;8323:23;;;;;;;;;;;;;;;8299:47;;8357:16;8368:4;8357:10;:16::i;:::-;8404:1;8390:4;:11;;;:15;8386:290;;;8422:16;8441:68;8493:4;:15;;;8441:47;8483:4;8441:37;8457:4;:20;;;8441:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;:51;;:68;;;;:::i;:::-;8422:87;;8539:1;8528:8;:12;8524:141;;;8561:35;8578:7;8587:8;8561:16;:35::i;:::-;8631:7;8620:29;;;8640:8;8620:29;;;;;;;;;;;;;;;;;;8524:141;8386:290;;8700:1;8690:7;:11;8686:218;;;8718:60;8746:7;8763:4;8770:7;8718:4;:10;;;;;;;;;;;;:27;;;;:60;;;;;;:::i;:::-;8807:27;8823:10;8807:4;:11;;;:15;;:27;;;;:::i;:::-;8793:4;:11;;:41;;;;8849:43;8873:12;;;;;;;;;;;8887:4;8849;:10;;;;;;;;;;;;:23;;;;:43;;;;;:::i;:::-;8686:218;8932:47;8974:4;8932:37;8948:4;:20;;;8932:4;:11;;;:15;;:37;;;;:::i;:::-;:41;;:47;;;;:::i;:::-;8914:4;:15;;:65;;;;9012:4;9003:7;8995:31;;;9018:7;8995:31;;;;;;;;;;;;;;;;;;7997:1037;;;;;;;;:::o;5941:772::-;6015:7;6035:21;6059:8;6068:4;6059:14;;;;;;;;;;;;;;;;;;6035:38;;6084:21;6108:8;:14;6117:4;6108:14;;;;;;;;;;;:21;6123:5;6108:21;;;;;;;;;;;;;;;6084:45;;6140:23;6166:4;:20;;;6140:46;;6197:19;6219:4;:10;;;;;;;;;;;;:20;;;6248:4;6219:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6197:57;;6287:4;:19;;;6269:15;:37;:57;;;;;6325:1;6310:11;:16;;6269:57;6265:360;;;6343:24;6370:56;6389:4;:19;;;6410:15;6370:18;:56::i;:::-;6343:83;;6441:19;6463:58;6505:15;;6463:37;6484:4;:15;;;6463:16;:20;;:37;;;;:::i;:::-;:41;;:58;;;;:::i;:::-;6441:80;;6554:59;6574:38;6600:11;6574:21;6590:4;6574:11;:15;;:21;;;;:::i;:::-;:25;;:38;;;;:::i;:::-;6554:15;:19;;:59;;;;:::i;:::-;6536:77;;6265:360;;;6642:63;6689:4;:15;;;6642:42;6679:4;6642:32;6658:15;6642:4;:11;;;:15;;:32;;;;:::i;:::-;:36;;:42;;;;:::i;:::-;:46;;:63;;;;:::i;:::-;6635:70;;;;;;5941:772;;;;:::o;2065:240:0:-;1362:12;:10;:12::i;:::-;1351:23;;:7;:5;:7::i;:::-;:23;;;1343:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:1:::1;2153:22;;:8;:22;;;;2145:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2262:8;2233:38;;2254:6;::::0;::::1;;;;;;;;2233:38;;;;;;;;;;;;2290:8;2281:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2065:240:::0;:::o;3136:155:5:-;3194:7;3226:1;3221;:6;;3213:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:1;3279;:5;3272:12;;3136:155;;;;:::o;2690:175::-;2748:7;2767:9;2783:1;2779;:5;2767:17;;2807:1;2802;:6;;2794:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2857:1;2850:8;;;2690:175;;;;:::o;3538:215::-;3596:7;3624:1;3619;:6;3615:20;;;3634:1;3627:8;;;;3615:20;3645:9;3661:1;3657;:5;3645:17;;3689:1;3684;3680;:5;;;;;;:10;3672:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;3738:8;;;3538:215;;;;;:::o;596:96:4:-;649:7;675:10;668:17;;596:96;:::o;1017:344:7:-;1132:1;1108:26;;:12;:26;;;;1086:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1255:12;1223:45;;1251:1;1223:45;;;;;;;;;;;;1279:39;1305:12;1279:25;:39::i;:::-;1341:12;1329:9;;:24;;;;;;;;;;;;;;;;;;1017:344;:::o;4217:150:5:-;4275:7;4306:1;4302;:5;4294:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;4348:12;;4217:150;;;;:::o;10450:365:6:-;10526:20;10549:4;;;;;;;;;;;:14;;;10572:4;10549:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10526:52;;10608:1;10593:12;:16;10589:219;;;10640:12;10630:7;:22;10626:171;;;10673:36;10691:3;10696:12;10673:4;;;;;;;;;;;:17;;;;:36;;;;;:::i;:::-;10626:171;;;10750:31;10768:3;10773:7;10750:4;;;;;;;;;;;:17;;;;:31;;;;;:::i;:::-;10626:171;10589:219;10450:365;;;:::o;717:175:2:-;799:86;819:5;849:23;;;874:2;878:5;826:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;799:19;:86::i;:::-;717:175;;;:::o;3084:261:6:-;3152:14;3169:8;:15;;;;3152:32;;3200:11;3195:143;3223:6;3217:3;:12;3195:143;;;3284:6;3261:29;;:8;3270:3;3261:13;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;:29;;;;3253:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3231:5;;;;;3195:143;;;;3084:261;;:::o;5601:171:5:-;5660:7;5679:9;5691;5695:1;5698;5691:3;:9::i;:::-;5679:21;;5710:9;5722;5726:1;5729;5722:3;:9::i;:::-;5710:21;;5748:17;5752:9;5756:1;5759;5752:3;:9::i;:::-;5763:1;5748:3;:17::i;:::-;5741:24;;;;5601:171;;;;:::o;898:203:2:-;998:96;1018:5;1048:27;;;1077:4;1083:2;1087:5;1025:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;998:19;:96::i;:::-;898:203;;;;:::o;2980:751::-;3399:23;3425:69;3453:4;3425:69;;;;;;;;;;;;;;;;;3433:5;3425:27;;;;:69;;;;;:::i;:::-;3399:95;;3528:1;3508:10;:17;:21;3504:221;;;3648:10;3637:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3629:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3504:221;2980:751;;;:::o;3470:223:3:-;3603:12;3634:52;3656:6;3664:4;3670:1;3673:12;3634:21;:52::i;:::-;3627:59;;3470:223;;;;;:::o;4557:499::-;4722:12;4779:5;4754:21;:30;;4746:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4845:18;4856:6;4845:10;:18::i;:::-;4837:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4909:12;4923:23;4950:6;:11;;4969:5;4976:4;4950:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4908:73;;;;4998:51;5015:7;5024:10;5036:12;4998:16;:51::i;:::-;4991:58;;;;4557:499;;;;;;:::o;727:377::-;787:4;990:12;1055:7;1043:20;1035:28;;1096:1;1089:4;:8;1082:15;;;727:377;;;:::o;7170:692::-;7316:12;7344:7;7340:516;;;7374:10;7367:17;;;;7340:516;7505:1;7485:10;:17;:21;7481:365;;;7679:10;7673:17;7739:15;7726:10;7722:2;7718:19;7711:44;7628:145;7818:12;7811:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7170:692;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2487200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"Poly()": "1091",
								"PolyPerSecond()": "1095",
								"TOTAL_REWARDS()": "252",
								"_feeColector()": "1093",
								"_fees()": "1116",
								"add(uint256,address,bool,uint256)": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"emergencyWithdraw(uint256)": "infinite",
								"getGeneratedReward(uint256,uint256)": "infinite",
								"governanceRecoverUnsupported(address,uint256,address)": "infinite",
								"initialize(address,uint256)": "infinite",
								"initialized()": "1138",
								"isInitialized()": "1123",
								"isOperator()": "1152",
								"massUpdatePools()": "infinite",
								"operator()": "1101",
								"owner()": "1122",
								"pendingStone(uint256,address)": "infinite",
								"poolEndTime()": "1117",
								"poolInfo(uint256)": "5486",
								"poolStartTime()": "1073",
								"renounceOwnership()": "24374",
								"runningTime()": "1116",
								"set(uint256,uint256)": "infinite",
								"setOperator(address)": "infinite",
								"totalAllocPoint()": "1051",
								"transferOperator(address)": "infinite",
								"transferOwnership(address)": "infinite",
								"updatePool(uint256)": "infinite",
								"userInfo(uint256,address)": "2196",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"checkPoolDuplicate(contract IERC20)": "infinite",
								"safePolyTransfer(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1418,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "EXP",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "PUSH",
									"source": 6,
									"value": "FF"
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1392,
									"end": 1423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1676,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1642,
									"end": 1676,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1642,
									"end": 1676,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1886,
									"end": 1899,
									"name": "PUSH",
									"source": 6,
									"value": "156A8C394962000"
								},
								{
									"begin": 1855,
									"end": 1899,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 1855,
									"end": 1899,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1971,
									"end": 1977,
									"name": "PUSH",
									"source": 6,
									"value": "3F480"
								},
								{
									"begin": 1942,
									"end": 1977,
									"name": "PUSH",
									"source": 6,
									"value": "C"
								},
								{
									"begin": 1942,
									"end": 1977,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 938,
									"end": 955,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 968,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 958,
									"end": 970,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 938,
									"end": 970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 989,
									"end": 998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 986,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 980,
									"end": 986,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 980,
									"end": 998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 980,
									"end": 998,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1046,
									"end": 1055,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1042,
									"end": 1043,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1013,
									"end": 1056,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 904,
									"end": 1063,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 445,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "SHR",
									"source": 7
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMP",
									"source": 7,
									"value": "[in]"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 435,
									"end": 447,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 432,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 423,
									"end": 447,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 423,
									"end": 447,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "DIV",
									"source": 7
								},
								{
									"begin": 495,
									"end": 504,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 495,
									"end": 504,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 491,
									"end": 492,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 463,
									"end": 505,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 463,
									"end": 505,
									"name": "LOG3",
									"source": 7
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 596,
									"end": 692,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 649,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 685,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 668,
									"end": 685,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 596,
									"end": 692,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "tag",
									"source": 6,
									"value": "9"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 462,
									"end": 11552,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f810fb44d7199546fde003507d8cf8c1c0a1678094715b9cb8f26475efd6ab8b64736f6c634300060c0033",
									".code": [
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "E177BB38"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "E2BBB158"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "ECF4DEB9"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "96805E54"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "B3AB15FB"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "CD6DC687"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "D212A69A"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "93F1A40B"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "943F013D"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "570CA735"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "5F96DC11"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "630B5BA1"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "6E271DD5"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "2BF8542C"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "4456EDA2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "51EB05A6"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "5312EA8E"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "54575AF4"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "2BF8542C"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "392E53CD"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "3F7CAF52"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "441A3E70"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "17CAF6F1"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "1AB06EE5"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "231F0C6A"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "29605E77"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "9CF6091"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "1526FE27"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "158EF93E"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 462,
											"end": 11552,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "tag",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "tag",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "tag",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "tag",
											"source": 6,
											"value": "97"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "tag",
											"source": 6,
											"value": "96"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "tag",
											"source": 6,
											"value": "29"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2034,
											"end": 2045,
											"name": "PUSH",
											"source": 6,
											"value": "54B40B1F852BDA00000"
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1994,
											"end": 2045,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1369,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1642,
											"end": 1676,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4874,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4874,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 4874,
											"end": 4891,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4874,
											"end": 4891,
											"name": "tag",
											"source": 6,
											"value": "123"
										},
										{
											"begin": 4874,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4902,
											"end": 4923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4934,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4926,
											"end": 4940,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4902,
											"end": 4940,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4902,
											"end": 4940,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4959,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5101,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5101,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4951,
											"end": 5101,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5063,
											"end": 5074,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5024,
											"end": 5028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5039,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5024,
											"end": 5039,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5024,
											"end": 5039,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 5004,
											"end": 5019,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5023,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5004,
											"end": 5023,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5004,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5004,
											"end": 5044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 5004,
											"end": 5089,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5001,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5089,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5101,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 4951,
											"end": 5101,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5126,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5111,
											"end": 5126,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5140,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5140,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5111,
											"end": 5140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4795,
											"end": 5148,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5310,
											"end": 5317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5347,
											"end": 5354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5343,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5334,
											"end": 5354,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5330,
											"end": 5364,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5363,
											"end": 5364,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5356,
											"end": 5364,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5364,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5356,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5356,
											"end": 5364,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5330,
											"end": 5364,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5330,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5390,
											"end": 5401,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5390,
											"end": 5401,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5379,
											"end": 5401,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5871,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5375,
											"end": 5871,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5435,
											"end": 5446,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5435,
											"end": 5446,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5431,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5446,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5455,
											"end": 5456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5448,
											"end": 5456,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5418,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5488,
											"end": 5501,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5488,
											"end": 5501,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5484,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5501,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5471,
											"end": 5559,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5545,
											"end": 5558,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5545,
											"end": 5558,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5526,
											"end": 5539,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5526,
											"end": 5539,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5521,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5510,
											"end": 5521,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5525,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5510,
											"end": 5525,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5510,
											"end": 5540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5510,
											"end": 5544,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 5510,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5559,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5559,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5503,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5503,
											"end": 5559,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5471,
											"end": 5559,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5471,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5612,
											"end": 5625,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5597,
											"end": 5606,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 5581,
											"end": 5592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5581,
											"end": 5596,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 5581,
											"end": 5607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5611,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5581,
											"end": 5611,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5581,
											"end": 5626,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5626,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5626,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5574,
											"end": 5626,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5375,
											"end": 5871,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 5375,
											"end": 5871,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5674,
											"end": 5687,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5670,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5663,
											"end": 5687,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5696,
											"end": 5697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5689,
											"end": 5697,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 5659,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5729,
											"end": 5742,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5725,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5716,
											"end": 5742,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5712,
											"end": 5796,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5782,
											"end": 5795,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5763,
											"end": 5776,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 5763,
											"end": 5776,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5758,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5751,
											"end": 5762,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 5751,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5751,
											"end": 5781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 5751,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5744,
											"end": 5796,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5712,
											"end": 5796,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 5712,
											"end": 5796,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5845,
											"end": 5858,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 5845,
											"end": 5858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5830,
											"end": 5839,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5825,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5818,
											"end": 5829,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 5818,
											"end": 5840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5844,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5818,
											"end": 5844,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 5818,
											"end": 5859,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5811,
											"end": 5859,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5225,
											"end": 5878,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 988,
											"end": 1000,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 970,
											"end": 987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 970,
											"end": 1001,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 894,
											"end": 1009,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1280,
											"end": 1307,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2599,
											"end": 2603,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2623,
											"end": 2634,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2616,
											"end": 2634,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2642,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "PUSH",
											"source": 6,
											"value": "B"
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1855,
											"end": 1899,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9137,
											"end": 9152,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9155,
											"end": 9165,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 9137,
											"end": 9165,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9137,
											"end": 9165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9197,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9200,
											"end": 9208,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9209,
											"end": 9213,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9200,
											"end": 9214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9176,
											"end": 9214,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9257,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9258,
											"end": 9262,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9263,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9271,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9249,
											"end": 9272,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9225,
											"end": 9272,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9306,
											"end": 9313,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9295,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9302,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9313,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9291,
											"end": 9313,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "77697468647261773A206E6F7420676F6F640000000000000000000000000000"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 9283,
											"end": 9336,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9358,
											"end": 9362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9347,
											"end": 9357,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 9347,
											"end": 9363,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9347,
											"end": 9363,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 9347,
											"end": 9363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9445,
											"end": 9449,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9445,
											"end": 9460,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9445,
											"end": 9460,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9445,
											"end": 9460,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9435,
											"end": 9439,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9409,
											"end": 9413,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9409,
											"end": 9429,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9397,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9404,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9393,
											"end": 9408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 9393,
											"end": 9430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9393,
											"end": 9434,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 9393,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 9393,
											"end": 9444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 9393,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9461,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9374,
											"end": 9461,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9487,
											"end": 9488,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9476,
											"end": 9484,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9476,
											"end": 9488,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9472,
											"end": 9601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9505,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9522,
											"end": 9529,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9531,
											"end": 9539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9505,
											"end": 9521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 9505,
											"end": 9540,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9505,
											"end": 9540,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 9505,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9571,
											"end": 9578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 9580,
											"end": 9588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9560,
											"end": 9589,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9601,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 9472,
											"end": 9601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9622,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9749,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9611,
											"end": 9749,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9673,
											"end": 9680,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9661,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9668,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 9657,
											"end": 9672,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 9657,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9647,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9643,
											"end": 9654,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9643,
											"end": 9681,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 9720,
											"end": 9727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9729,
											"end": 9736,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9700,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9696,
											"end": 9706,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9719,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9696,
											"end": 9719,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9719,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 9696,
											"end": 9719,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 9696,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9749,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 9611,
											"end": 9749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9819,
											"end": 9823,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9793,
											"end": 9797,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9793,
											"end": 9813,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9781,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9777,
											"end": 9788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9788,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 9777,
											"end": 9792,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "tag",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 9777,
											"end": 9814,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9818,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 9777,
											"end": 9818,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 9777,
											"end": 9824,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9763,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9759,
											"end": 9774,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9858,
											"end": 9862,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9849,
											"end": 9856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "PUSH",
											"source": 6,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 9864,
											"end": 9871,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9840,
											"end": 9872,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9070,
											"end": 9880,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 829,
											"end": 833,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 869,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 869,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 853,
											"end": 863,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 853,
											"end": 865,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 853,
											"end": 878,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 853,
											"end": 878,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 846,
											"end": 878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 786,
											"end": 886,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7125,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7136,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7137,
											"end": 7141,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7128,
											"end": 7142,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7142,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7142,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7180,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7176,
											"end": 7195,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7157,
											"end": 7172,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7157,
											"end": 7195,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7153,
											"end": 7230,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7219,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7212,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7212,
											"end": 7219,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7153,
											"end": 7230,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 7153,
											"end": 7230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7259,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7272,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7282,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 7291,
											"end": 7295,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7262,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7240,
											"end": 7297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7327,
											"end": 7328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7312,
											"end": 7323,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7312,
											"end": 7328,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7415,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7415,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7308,
											"end": 7415,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7367,
											"end": 7382,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7349,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7364,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7345,
											"end": 7364,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7345,
											"end": 7382,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7397,
											"end": 7404,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7415,
											"name": "tag",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 7308,
											"end": 7415,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7434,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7430,
											"end": 7444,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7563,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7425,
											"end": 7563,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7478,
											"end": 7482,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7461,
											"end": 7465,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7475,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7461,
											"end": 7475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7475,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7461,
											"end": 7482,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7550,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7535,
											"end": 7550,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7535,
											"end": 7550,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7530,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7515,
											"end": 7530,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7515,
											"end": 7534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 7515,
											"end": 7551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7512,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7497,
											"end": 7551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7551,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7497,
											"end": 7551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7425,
											"end": 7563,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 7425,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7595,
											"end": 7596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7577,
											"end": 7592,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7577,
											"end": 7592,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7577,
											"end": 7596,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7637,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7659,
											"end": 7663,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7659,
											"end": 7678,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7659,
											"end": 7678,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7659,
											"end": 7678,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7695,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7640,
											"end": 7658,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "tag",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 7640,
											"end": 7696,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7613,
											"end": 7696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7730,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7775,
											"end": 7790,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 7775,
											"end": 7790,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7769,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 7754,
											"end": 7769,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7754,
											"end": 7769,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7749,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7753,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7733,
											"end": 7753,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 7733,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7774,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7733,
											"end": 7774,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 7733,
											"end": 7791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7711,
											"end": 7791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7880,
											"end": 7891,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7870,
											"end": 7874,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 7854,
											"end": 7865,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7869,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 7854,
											"end": 7869,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "tag",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 7854,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7879,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7854,
											"end": 7879,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7854,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7833,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7849,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7829,
											"end": 7849,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7849,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7853,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 7829,
											"end": 7853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 7829,
											"end": 7893,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7810,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7826,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7806,
											"end": 7826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7893,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7893,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7806,
											"end": 7893,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 7573,
											"end": 7905,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7937,
											"end": 7952,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7919,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 7915,
											"end": 7934,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7952,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7952,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7952,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7915,
											"end": 7952,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7052,
											"end": 7960,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10031,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10042,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10043,
											"end": 10047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10034,
											"end": 10048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10048,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10010,
											"end": 10048,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10059,
											"end": 10080,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10091,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10098,
											"end": 10108,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10109,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10059,
											"end": 10109,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10059,
											"end": 10109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10120,
											"end": 10135,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10142,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10149,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10138,
											"end": 10149,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10138,
											"end": 10149,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10120,
											"end": 10149,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10174,
											"end": 10175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10164,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10171,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10175,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10160,
											"end": 10175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10204,
											"end": 10205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10186,
											"end": 10190,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10201,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10186,
											"end": 10201,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10186,
											"end": 10205,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10240,
											"end": 10250,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10252,
											"end": 10259,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10220,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10216,
											"end": 10226,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10216,
											"end": 10239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10216,
											"end": 10239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 10216,
											"end": 10260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10306,
											"end": 10310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10294,
											"end": 10304,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "BB757047C2B5F3974FE26B7C10F732E7BCE710B0952A71082702781E62AE0595"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10320,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9951,
											"end": 10328,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11102,
											"name": "PUSH",
											"source": 6,
											"value": "76A700"
										},
										{
											"begin": 11081,
											"end": 11092,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11081,
											"end": 11092,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11081,
											"end": 11102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11063,
											"end": 11078,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 11063,
											"end": 11102,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11237,
											"end": 11241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11233,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11227,
											"end": 11241,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11219,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11282,
											"end": 11290,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11282,
											"end": 11297,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11297,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11282,
											"end": 11297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11297,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11265,
											"end": 11297,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11317,
											"end": 11328,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11340,
											"end": 11346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11334,
											"end": 11346,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11374,
											"end": 11395,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11406,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11407,
											"end": 11410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 11398,
											"end": 11411,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11374,
											"end": 11411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11374,
											"end": 11411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11452,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11448,
											"end": 11458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11444,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 11438,
											"end": 11458,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "706F6F6C2E746F6B656E00000000000000000000000000000000000000000000"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11430,
											"end": 11473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11353,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11312,
											"end": 11489,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 11059,
											"end": 11500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11530,
											"end": 11532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11534,
											"end": 11540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11516,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11529,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11529,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 11510,
											"end": 11529,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11510,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10945,
											"end": 11549,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 562,
											"end": 569,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 589,
											"end": 598,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 589,
											"end": 598,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 582,
											"end": 598,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 606,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1727,
											"end": 1755,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6855,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6858,
											"end": 6866,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6858,
											"end": 6873,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6873,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6858,
											"end": 6873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6841,
											"end": 6873,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6889,
											"end": 6900,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6912,
											"end": 6918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6906,
											"end": 6918,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6953,
											"end": 6956,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6942,
											"end": 6952,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 6942,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6920,
											"end": 6925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6884,
											"end": 6969,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6796,
											"end": 6976,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1804,
											"end": 1830,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1877,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1840,
											"end": 1880,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1916,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1211,
											"end": 1217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1204,
											"end": 1217,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1139,
											"end": 1224,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "tag",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1481,
											"end": 1545,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1942,
											"end": 1977,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "tag",
											"source": 6,
											"value": "98"
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3589,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3589,
											"end": 3607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3589,
											"end": 3615,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3589,
											"end": 3615,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 3589,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3630,
											"end": 3641,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3626,
											"end": 3687,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3626,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3626,
											"end": 3687,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3658,
											"end": 3673,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3658,
											"end": 3675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3626,
											"end": 3687,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 3626,
											"end": 3687,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3719,
											"end": 3732,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3716,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 3701,
											"end": 3732,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3805,
											"end": 3806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3801,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3806,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3845,
											"end": 3858,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3845,
											"end": 3858,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 3934,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3921,
											"end": 3934,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3903,
											"end": 3934,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 4010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3899,
											"end": 4010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3977,
											"end": 3990,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3977,
											"end": 3990,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3990,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3990,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3899,
											"end": 4010,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 3899,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 3782,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4108,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4113,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4135,
											"end": 4150,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4117,
											"end": 4150,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "tag",
											"source": 6,
											"value": "235"
										},
										{
											"begin": 4093,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4220,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4089,
											"end": 4220,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4189,
											"end": 4204,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4171,
											"end": 4204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4089,
											"end": 4220,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 4089,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 3697,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4256,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 4288,
											"end": 4301,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4284,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4269,
											"end": 4301,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4335,
											"end": 4350,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4331,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4350,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4350,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 4268,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4351,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4241,
											"end": 4351,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4370,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4414,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4442,
											"end": 4453,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4485,
											"end": 4500,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4533,
											"end": 4534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4561,
											"end": 4571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4587,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4362,
											"end": 4588,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4603,
											"end": 4613,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4692,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4599,
											"end": 4692,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4668,
											"end": 4679,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4663,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4648,
											"end": 4663,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 4648,
											"end": 4667,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 4648,
											"end": 4680,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4645,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 4630,
											"end": 4680,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4680,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4680,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4680,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4692,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 4599,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 769,
											"end": 770,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 4699,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10899,
											"end": 10929,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 10916,
											"end": 10928,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10899,
											"end": 10915,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 10899,
											"end": 10929,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10899,
											"end": 10929,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 10899,
											"end": 10929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10823,
											"end": 10937,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "tag",
											"source": 6,
											"value": "104"
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2428,
											"end": 2440,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "1C"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "47656E657369733A20616C726561647920696E697469616C697A656400000000"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2420,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 684,
											"end": 694,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 671,
											"end": 680,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 671,
											"end": 694,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 671,
											"end": 694,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH data",
											"source": 7,
											"value": "A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 649,
											"end": 758,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 649,
											"end": 758,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2821,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2804,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 2789,
											"end": 2821,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "6C61746500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2781,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2862,
											"end": 2863,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2845,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2850,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2864,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2845,
											"end": 2864,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2845,
											"end": 2864,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2886,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2841,
											"end": 2886,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2880,
											"end": 2885,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2866,
											"end": 2870,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2886,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2841,
											"end": 2886,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2841,
											"end": 2886,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 2922,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2922,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2949,
											"end": 2963,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2933,
											"end": 2963,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2963,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2933,
											"end": 2963,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3015,
											"name": "PUSH",
											"source": 6,
											"value": "C"
										},
										{
											"begin": 3004,
											"end": 3015,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3001,
											"name": "PUSH",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 2988,
											"end": 3001,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 3015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 2985,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2974,
											"end": 3015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "PUSH",
											"source": 6,
											"value": "C8"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3026,
											"end": 3037,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3037,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3026,
											"end": 3037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3062,
											"end": 3066,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3048,
											"end": 3059,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3048,
											"end": 3066,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2650,
											"end": 3074,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "tag",
											"source": 6,
											"value": "106"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1253,
											"end": 1273,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1214,
											"end": 1232,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8081,
											"end": 8091,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8091,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8063,
											"end": 8091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8114,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8130,
											"end": 8135,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8130,
											"end": 8135,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8124,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8129,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "254"
										},
										{
											"begin": 8117,
											"end": 8129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 8117,
											"end": 8136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8102,
											"end": 8136,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8159,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8182,
											"end": 8187,
											"name": "PUSH",
											"source": 6,
											"value": "2710"
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8171,
											"end": 8176,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8171,
											"end": 8176,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8166,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8162,
											"end": 8170,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 8162,
											"end": 8177,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8162,
											"end": 8181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 8162,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8147,
											"end": 8188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8232,
											"end": 8236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8227,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8231,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8220,
											"end": 8231,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "tag",
											"source": 6,
											"value": "257"
										},
										{
											"begin": 8220,
											"end": 8237,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8237,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8282,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8283,
											"end": 8287,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 8274,
											"end": 8288,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8288,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8250,
											"end": 8288,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8320,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8331,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8336,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8337,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8338,
											"end": 8345,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8323,
											"end": 8346,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8346,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8299,
											"end": 8346,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8368,
											"end": 8372,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8357,
											"end": 8367,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 8357,
											"end": 8373,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8357,
											"end": 8373,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 8357,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8404,
											"end": 8405,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8394,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8401,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8390,
											"end": 8401,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8401,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8390,
											"end": 8405,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8422,
											"end": 8438,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8493,
											"end": 8497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8508,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8493,
											"end": 8508,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8493,
											"end": 8508,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8483,
											"end": 8487,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8457,
											"end": 8461,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8457,
											"end": 8477,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8445,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8452,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8441,
											"end": 8452,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8452,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8441,
											"end": 8456,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 8441,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8441,
											"end": 8482,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "tag",
											"source": 6,
											"value": "263"
										},
										{
											"begin": 8441,
											"end": 8488,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8492,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 8441,
											"end": 8492,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 8441,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8422,
											"end": 8509,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8422,
											"end": 8509,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8539,
											"end": 8540,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8528,
											"end": 8536,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8528,
											"end": 8540,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8665,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8524,
											"end": 8665,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8578,
											"end": 8585,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8587,
											"end": 8595,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8561,
											"end": 8596,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8561,
											"end": 8596,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 8561,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8631,
											"end": 8638,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 8640,
											"end": 8648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8620,
											"end": 8649,
											"name": "LOG2",
											"source": 6
										},
										{
											"begin": 8524,
											"end": 8665,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 8524,
											"end": 8665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "tag",
											"source": 6,
											"value": "261"
										},
										{
											"begin": 8386,
											"end": 8676,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8700,
											"end": 8701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8690,
											"end": 8697,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 8690,
											"end": 8701,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8904,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8686,
											"end": 8904,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8746,
											"end": 8753,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8763,
											"end": 8767,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 8777,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8728,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8745,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8745,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8745,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "269"
										},
										{
											"begin": 8718,
											"end": 8745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 8718,
											"end": 8778,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8823,
											"end": 8833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8811,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8818,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8822,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 8807,
											"end": 8822,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "tag",
											"source": 6,
											"value": "270"
										},
										{
											"begin": 8807,
											"end": 8834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8797,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8804,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8793,
											"end": 8804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8834,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8834,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8834,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8793,
											"end": 8834,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8873,
											"end": 8885,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8887,
											"end": 8891,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8859,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8872,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8872,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 8849,
											"end": 8872,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 8849,
											"end": 8892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8686,
											"end": 8904,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 8686,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8974,
											"end": 8978,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8948,
											"end": 8952,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8948,
											"end": 8968,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8943,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8932,
											"end": 8943,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8943,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 8932,
											"end": 8947,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 8932,
											"end": 8969,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8973,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 8932,
											"end": 8973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "tag",
											"source": 6,
											"value": "272"
										},
										{
											"begin": 8932,
											"end": 8979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8914,
											"end": 8929,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8979,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8979,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 8914,
											"end": 8979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9012,
											"end": 9016,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9003,
											"end": 9010,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "PUSH",
											"source": 6,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 9018,
											"end": 9025,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8995,
											"end": 9026,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7997,
											"end": 9034,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6015,
											"end": 6022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6035,
											"end": 6056,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6067,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6068,
											"end": 6072,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6059,
											"end": 6073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6035,
											"end": 6073,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6105,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6116,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6117,
											"end": 6121,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6122,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6128,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6108,
											"end": 6129,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6084,
											"end": 6129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6163,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6166,
											"end": 6170,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6166,
											"end": 6186,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6140,
											"end": 6186,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6216,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6223,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6229,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6239,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 6248,
											"end": 6252,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6219,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6197,
											"end": 6254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6291,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6306,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6287,
											"end": 6306,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6287,
											"end": 6306,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6284,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6306,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6310,
											"end": 6321,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6326,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6310,
											"end": 6326,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 6269,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6367,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6389,
											"end": 6393,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6408,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6389,
											"end": 6408,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6389,
											"end": 6408,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6410,
											"end": 6425,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6388,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 6370,
											"end": 6426,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6370,
											"end": 6426,
											"name": "tag",
											"source": 6,
											"value": "283"
										},
										{
											"begin": 6370,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6426,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6343,
											"end": 6426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6460,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6505,
											"end": 6520,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6505,
											"end": 6520,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6484,
											"end": 6488,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6499,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6484,
											"end": 6499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6499,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6479,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6463,
											"end": 6483,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 6463,
											"end": 6500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6504,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6463,
											"end": 6504,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 6463,
											"end": 6521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6521,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6441,
											"end": 6521,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6600,
											"end": 6611,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6590,
											"end": 6594,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6574,
											"end": 6585,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6589,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6574,
											"end": 6589,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 6574,
											"end": 6595,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6599,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6574,
											"end": 6599,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6574,
											"end": 6612,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6569,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 6554,
											"end": 6573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 6554,
											"end": 6613,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6613,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6536,
											"end": 6613,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 6265,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6689,
											"end": 6693,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6689,
											"end": 6704,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6679,
											"end": 6683,
											"name": "PUSH",
											"source": 6,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6658,
											"end": 6673,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6646,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6642,
											"end": 6653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6653,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 6642,
											"end": 6657,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6642,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 6642,
											"end": 6678,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6642,
											"end": 6684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6688,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 6642,
											"end": 6688,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "tag",
											"source": 6,
											"value": "289"
										},
										{
											"begin": 6642,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6635,
											"end": 6705,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5941,
											"end": 6713,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 1362,
											"end": 1374,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 1351,
											"end": 1358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 1343,
											"end": 1411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2173,
											"end": 2174,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2175,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH data",
											"source": 0,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 2145,
											"end": 2218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2262,
											"end": 2270,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2254,
											"end": 2260,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2233,
											"end": 2271,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2290,
											"end": 2298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2287,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2281,
											"end": 2298,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2065,
											"end": 2305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3201,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3226,
											"end": 3227,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3222,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 3221,
											"end": 3227,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A207375627472616374696F6E206F766572666C6F770000"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 3213,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3280,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3284,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3272,
											"end": 3284,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3136,
											"end": 3291,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2748,
											"end": 2755,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2783,
											"end": 2784,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2780,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2779,
											"end": 2784,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2803,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2802,
											"end": 2808,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "1B"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 2794,
											"end": 2840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2850,
											"end": 2858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2690,
											"end": 2865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3624,
											"end": 3625,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3620,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3619,
											"end": 3625,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3634,
											"end": 3635,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 3627,
											"end": 3635,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "tag",
											"source": 5,
											"value": "303"
										},
										{
											"begin": 3615,
											"end": 3635,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3654,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3661,
											"end": 3662,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3658,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3657,
											"end": 3662,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3645,
											"end": 3662,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3690,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3684,
											"end": 3685,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3685,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 3680,
											"end": 3690,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH data",
											"source": 5,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 3672,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3745,
											"end": 3746,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3738,
											"end": 3746,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "302"
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3538,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 649,
											"end": 656,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 685,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 668,
											"end": 685,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 596,
											"end": 692,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1120,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1108,
											"end": 1134,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH data",
											"source": 7,
											"value": "756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1086,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1255,
											"end": 1267,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1251,
											"end": 1252,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "74DA04524D50C64947F5DD5381EF1A4DCA5CBA8ED1D816243F9E48AA0B5617ED"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1223,
											"end": 1268,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1279,
											"end": 1304,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 1279,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1353,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1329,
											"end": 1338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1329,
											"end": 1353,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1017,
											"end": 1361,
											"name": "JUMP",
											"source": 7,
											"value": "[out]"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4275,
											"end": 4282,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4302,
											"end": 4307,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "1A"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "536166654D6174683A206469766973696F6E206279207A65726F000000000000"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 4294,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4359,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4217,
											"end": 4367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10546,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10549,
											"end": 10553,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10549,
											"end": 10563,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10563,
											"name": "PUSH",
											"source": 6,
											"value": "70A08231"
										},
										{
											"begin": 10572,
											"end": 10576,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "tag",
											"source": 6,
											"value": "314"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "STATICCALL",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10578,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10578,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10605,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10593,
											"end": 10609,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10808,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 10589,
											"end": 10808,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10640,
											"end": 10652,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10637,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10630,
											"end": 10652,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10691,
											"end": 10694,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10696,
											"end": 10708,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10673,
											"end": 10677,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10673,
											"end": 10690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10690,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10673,
											"end": 10690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 10673,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 10768,
											"end": 10771,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10767,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10750,
											"end": 10767,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 10750,
											"end": 10767,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 10750,
											"end": 10781,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 10626,
											"end": 10797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10589,
											"end": 10808,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 10589,
											"end": 10808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10815,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 799,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 819,
											"end": 824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "A9059CBB"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 849,
											"end": 872,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 874,
											"end": 876,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 826,
											"end": 884,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 799,
											"end": 818,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "tag",
											"source": 2,
											"value": "324"
										},
										{
											"begin": 799,
											"end": 885,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 717,
											"end": 892,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3084,
											"end": 3345,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3084,
											"end": 3345,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3166,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3169,
											"end": 3177,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3169,
											"end": 3184,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3184,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3169,
											"end": 3184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3184,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3152,
											"end": 3184,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3200,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3229,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3220,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3217,
											"end": 3229,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3284,
											"end": 3290,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3269,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3270,
											"end": 3273,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "INVALID",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3274,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3280,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3290,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "506F6C7947656E65736973506F6F6C3A206578697374696E6720706F6F6C3F00"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 3253,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3195,
											"end": 3338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3345,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3345,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "tag",
											"source": 5,
											"value": "254"
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5660,
											"end": 5667,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5679,
											"end": 5688,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5695,
											"end": 5696,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5698,
											"end": 5699,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5691,
											"end": 5694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "tag",
											"source": 5,
											"value": "334"
										},
										{
											"begin": 5691,
											"end": 5700,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5679,
											"end": 5700,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5719,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5726,
											"end": 5727,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5729,
											"end": 5730,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 5722,
											"end": 5725,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5710,
											"end": 5731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 5756,
											"end": 5757,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5759,
											"end": 5760,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5752,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "tag",
											"source": 5,
											"value": "337"
										},
										{
											"begin": 5752,
											"end": 5761,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5763,
											"end": 5764,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5748,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 5748,
											"end": 5765,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5741,
											"end": 5765,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5772,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 1018,
											"end": 1023,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1048,
											"end": 1075,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1077,
											"end": 1081,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1083,
											"end": 1085,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1092,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1025,
											"end": 1093,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 998,
											"end": 1094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 898,
											"end": 1101,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "tag",
											"source": 2,
											"value": "325"
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3422,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3453,
											"end": 3457,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3433,
											"end": 3438,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 3425,
											"end": 3452,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 3425,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3399,
											"end": 3494,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3528,
											"end": 3529,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3518,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3525,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3508,
											"end": 3529,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3648,
											"end": 3658,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3637,
											"end": 3667,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH data",
											"source": 2,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "2A"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "CODECOPY",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 3629,
											"end": 3714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "tag",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 3504,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2980,
											"end": 3731,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "tag",
											"source": 3,
											"value": "342"
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3603,
											"end": 3615,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3656,
											"end": 3662,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3664,
											"end": 3668,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3670,
											"end": 3671,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3685,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3634,
											"end": 3655,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "tag",
											"source": 3,
											"value": "347"
										},
										{
											"begin": 3634,
											"end": 3686,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3627,
											"end": 3686,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3470,
											"end": 3693,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "tag",
											"source": 3,
											"value": "348"
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4722,
											"end": 4734,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4779,
											"end": 4784,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4775,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4754,
											"end": 4784,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "tag",
											"source": 3,
											"value": "350"
										},
										{
											"begin": 4746,
											"end": 4827,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4856,
											"end": 4862,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4855,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "tag",
											"source": 3,
											"value": "351"
										},
										{
											"begin": 4845,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "tag",
											"source": 3,
											"value": "353"
										},
										{
											"begin": 4837,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4909,
											"end": 4921,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4946,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4969,
											"end": 4974,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "354"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "356"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4950,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4908,
											"end": 4981,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5015,
											"end": 5022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5024,
											"end": 5034,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5036,
											"end": 5048,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4998,
											"end": 5014,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 4998,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5049,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4557,
											"end": 5056,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "tag",
											"source": 3,
											"value": "352"
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 787,
											"end": 791,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1055,
											"end": 1062,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1043,
											"end": 1063,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1035,
											"end": 1063,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1093,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1089,
											"end": 1097,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1082,
											"end": 1097,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 727,
											"end": 1104,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7316,
											"end": 7328,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7344,
											"end": 7351,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7374,
											"end": 7384,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 7367,
											"end": 7384,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "tag",
											"source": 3,
											"value": "364"
										},
										{
											"begin": 7340,
											"end": 7856,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7506,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7495,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7502,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7485,
											"end": 7506,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 7481,
											"end": 7846,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7679,
											"end": 7689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7673,
											"end": 7690,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7754,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7726,
											"end": 7736,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7722,
											"end": 7724,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7718,
											"end": 7737,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7711,
											"end": 7755,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 7628,
											"end": 7773,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7818,
											"end": 7830,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "370"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7811,
											"end": 7831,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7170,
											"end": 7862,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"756508C1C0554725DD91CE0028667672A5318D736A5E4BCD98B6BC8FE98C3DC7": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"A62BFDBA5053072911B63B0F6325B0E83FCD28B5A847D97EFDD966FEB4DAAAFB": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"Poly()": "e177bb38",
							"PolyPerSecond()": "3f7caf52",
							"TOTAL_REWARDS()": "09cf6091",
							"_feeColector()": "2bf8542c",
							"_fees()": "d212a69a",
							"add(uint256,address,bool,uint256)": "96805e54",
							"deposit(uint256,uint256)": "e2bbb158",
							"emergencyWithdraw(uint256)": "5312ea8e",
							"getGeneratedReward(uint256,uint256)": "231f0c6a",
							"governanceRecoverUnsupported(address,uint256,address)": "54575af4",
							"initialize(address,uint256)": "cd6dc687",
							"initialized()": "158ef93e",
							"isInitialized()": "392e53cd",
							"isOperator()": "4456eda2",
							"massUpdatePools()": "630b5ba1",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"pendingStone(uint256,address)": "ecf4deb9",
							"poolEndTime()": "6e271dd5",
							"poolInfo(uint256)": "1526fe27",
							"poolStartTime()": "5f96dc11",
							"renounceOwnership()": "715018a6",
							"runningTime()": "943f013d",
							"set(uint256,uint256)": "1ab06ee5",
							"setOperator(address)": "b3ab15fb",
							"totalAllocPoint()": "17caf6f1",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b",
							"updatePool(uint256)": "51eb05a6",
							"userInfo(uint256,address)": "93f1a40b",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"pid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Poly\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PolyPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_REWARDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_feeColector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_fees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"_lastRewardTime\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fromTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_toTime\",\"type\":\"uint256\"}],\"name\":\"getGeneratedReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"governanceRecoverUnsupported\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Poly\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_poolStartTime\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isInitialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingStone\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolEndTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"accPolyPerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isStarted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"runningTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_Newoperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/distribution/TombGenesisRewardPool.sol\":\"PolyGenesisRewardPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3cd905b4e9d50e416db8b9f0eb6dca6fcf15b7d2e06db530c654431037010d5a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://351f828dd4433cb6729ee4c714ed8e43e0ab9b6fdca5017ed5f5a9af9a98c4f4\",\"dweb:/ipfs/QmUNzckCciNwCidx8WNhMy64famCgJQnccpjFooJt62YxY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9eb154712d23c6e2fceee13963c3bb186f05e5ddebcfd0b27f8c6044278d257b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54db726b7b9d1c8071dbfde74ed1da38fd8378a941678c43e4c88d202022327a\",\"dweb:/ipfs/QmWK67aCN1fbko6cA76wfqu1hJF4HnfV2QNMK1LsLWS1gi\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xcff4e9639ea022cc41bfb0d7d40c8ecb6f8b995e40d61937a9deeebad54839a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://47d790dfe2e8c0551b6bf187448dce05379bd9f118e36564667ed6cc49ee465d\",\"dweb:/ipfs/QmdACeWLdeGxRQXznsuo8Kms9TBowWjx5VLbphVZ6hp5EF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xd2b581fa833d3b2ac16dde253bca297b5c9f112536ae70b06436b6299445110c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c8ce112a134d2409b1320939e6eb24f33659dec4904c77e9ee0e412f76229b2\",\"dweb:/ipfs/Qmath4xcbFW6VFFJkXeMGa151ZBCipXopKrN1RTD87i8jh\"]},\"contracts/distribution/TombGenesisRewardPool.sol\":{\"keccak256\":\"0x10c51bc7fd7cfd6c4c34e60887e71b5869b0f43b3a1005fb10dde69800bed04b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://127b48a24aa7679e4ba58216f1f8c2a0283bfb921952b7fd0e3d4e08b64a0001\",\"dweb:/ipfs/Qmdsf81ptHFzzL9xDyAi6YWPMwvKqK1oE253areS7nySto\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2203,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1138,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "Poly",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)187"
							},
							{
								"astId": 1140,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_fees",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1142,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "_feeColector",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 1145,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolInfo",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(PoolInfo)1136_storage)dyn_storage"
							},
							{
								"astId": 1148,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "initialized",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1154,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "userInfo",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))"
							},
							{
								"astId": 1157,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1159,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolStartTime",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1161,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "poolEndTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1164,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "PolyPerSecond",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 1167,
								"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
								"label": "runningTime",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(PoolInfo)1136_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)1136_storage",
								"encoding": "dynamic_array",
								"label": "struct PolyGenesisRewardPool.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)187": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)1125_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct PolyGenesisRewardPool.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)1125_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)1125_storage))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_struct(UserInfo)1125_storage)"
							},
							"t_struct(PoolInfo)1136_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.PoolInfo",
								"members": [
									{
										"astId": 1127,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(IERC20)187"
									},
									{
										"astId": 1129,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1131,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "lastRewardTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1133,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "accPolyPerShare",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1135,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "isStarted",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserInfo)1125_storage": {
								"encoding": "inplace",
								"label": "struct PolyGenesisRewardPool.UserInfo",
								"members": [
									{
										"astId": 1122,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1124,
										"contract": "contracts/distribution/TombGenesisRewardPool.sol:PolyGenesisRewardPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/owner/Operator.sol": {
				"Operator": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "OperatorTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "isOperator",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator_",
									"type": "address"
								}
							],
							"name": "transferOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isOperator()": "4456eda2",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOperator(address)": "29605e77",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"OperatorTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator_\",\"type\":\"address\"}],\"name\":\"transferOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/owner/Operator.sol\":\"Operator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x58edc78e5f20b754362ecaac32003e6461a67019985e513c5b0f75d252a866ee\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5c8e7676e6fdfc7b2af63e85e2190716cafc9fa6eb17a310a7c049b7176a79f9\",\"dweb:/ipfs/QmPthc9W2xTrA3QBQMQu3mqfH22WGx8eW3uKfiC5LYxZYF\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7edbc679249d31c4ee2205417fc929f8bfabb9ed68eb59dfd3be1f8005bff9a6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5ab93b0420d7df250f88a163fdff222060623e7eae18d873165d9f5f92f74492\",\"dweb:/ipfs/QmRQZ3bP5XPRH3FFGA3iDWpYh81z2wSPBBR76frtH3kx33\"]},\"contracts/owner/Operator.sol\":{\"keccak256\":\"0x7d353d9d35813ff7fc6ec81cae80d0a0e1bb18285cf3e683fbbb227a827ab5f3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://edc3c18720665592f22904ffa2bbc5b22afa2892e209bac0d570bbc3fe2b9300\",\"dweb:/ipfs/QmUD5Fyi7vWUqsJrcQ11SLzk9eVBcH6CSenj688QhkALpS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 2203,
								"contract": "contracts/owner/Operator.sol:Operator",
								"label": "_operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "@openzeppelin/contracts/utils/Context.sol:20:5: Warning: Function state mutability can be restricted to pure\n    function _msgData() internal view virtual returns (bytes calldata) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 797,
					"file": "@openzeppelin/contracts/utils/Context.sol",
					"start": 698
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							109
						]
					},
					"id": 110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:31:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 110,
							"sourceUnit": 720,
							"src": "120:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "675:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "675:7:0"
								}
							],
							"contractDependencies": [
								719
							],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "151:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 109,
							"linearizedBaseContracts": [
								109,
								719
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 109,
									"src": "689:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "689:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 13,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "745:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 13,
												"src": "776:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "744:57:0"
									},
									"src": "718:84:0"
								},
								{
									"body": {
										"id": 34,
										"nodeType": "Block",
										"src": "928:135:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 34,
														"src": "938:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 17,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "938:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 21,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 19,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "958:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "958:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "938:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "980:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 23,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "989:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "980:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "980:18:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1042:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 28,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1034:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 27,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1034:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 31,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "1046:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 26,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1013:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1013:43:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 33,
												"nodeType": "EmitStatement",
												"src": "1008:48:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "808:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 35,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "928:0:0"
									},
									"scope": 109,
									"src": "904:159:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "1194:30:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 41,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1211:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 40,
												"id": 42,
												"nodeType": "Return",
												"src": "1204:13:0"
											}
										]
									},
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1069:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1153:2:0"
									},
									"returnParameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "1185:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1184:9:0"
									},
									"scope": 109,
									"src": "1139:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1333:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 48,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 44,
																	"src": "1351:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1351:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 50,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "1362:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1362:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1351:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1376:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 47,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1343:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1343:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1343:68:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1421:1:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1230:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1330:2:0"
									},
									"src": "1312:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "1825:91:0",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 65,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1861:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 68,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1877:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1869:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 66,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1869:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 64,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "1840:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1840:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 71,
												"nodeType": "EmitStatement",
												"src": "1835:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 72,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1907:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1899:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 73,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1899:7:0",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1899:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 78,
												"nodeType": "ExpressionStatement",
												"src": "1890:19:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1435:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 62,
											"modifierName": {
												"argumentTypes": null,
												"id": 61,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "1815:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1815:9:0"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1797:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1825:0:0"
									},
									"scope": 109,
									"src": "1771:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "2135:170:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 89,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 83,
																"src": "2153:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 92,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2173:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 90,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2165:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2165:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2153:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2177:40:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 88,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2145:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2145:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "2145:73:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 99,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 100,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "2262:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 98,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2233:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2233:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 102,
												"nodeType": "EmitStatement",
												"src": "2228:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 103,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2281:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "2290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2281:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 106,
												"nodeType": "ExpressionStatement",
												"src": "2281:17:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "1922:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 86,
											"modifierName": {
												"argumentTypes": null,
												"id": 85,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "2125:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2125:9:0"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 108,
												"src": "2092:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2091:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2135:0:0"
									},
									"scope": 109,
									"src": "2065:240:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 110,
							"src": "646:1661:0"
						}
					],
					"src": "87:2220:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							187
						]
					},
					"id": 188,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 111,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 112,
								"nodeType": "StructuredDocumentation",
								"src": "67:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 187,
							"linearizedBaseContracts": [
								187
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "161:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "252:2:1"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 118,
												"src": "278:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "277:9:1"
									},
									"scope": 187,
									"src": "232:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "293:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "389:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "388:17:1"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 126,
												"src": "429:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "429:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "428:9:1"
									},
									"scope": 187,
									"src": "370:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "444:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "676:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "695:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "675:35:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 136,
												"src": "729:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "729:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "728:6:1"
									},
									"scope": 187,
									"src": "658:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "741:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 146,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1028:32:1"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 146,
												"src": "1084:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1084:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1083:9:1"
									},
									"scope": 187,
									"src": "1010:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1099:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 156,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1780:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1780:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1762:33:1"
									},
									"returnParameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 156,
												"src": "1814:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1814:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1813:6:1"
									},
									"scope": 187,
									"src": "1746:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "1826:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2158:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2182:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2182:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2209:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2209:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2148:81:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 168,
												"src": "2248:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2248:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2247:6:1"
									},
									"scope": 187,
									"src": "2127:127:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2260:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 177,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2438:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2438:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 177,
												"src": "2480:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2480:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2437:57:1"
									},
									"src": "2423:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 178,
										"nodeType": "StructuredDocumentation",
										"src": "2501:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 186,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2669:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2692:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 184,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 186,
												"src": "2717:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2717:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2668:63:1"
									},
									"src": "2654:78:1"
								}
							],
							"scope": 188,
							"src": "138:2596:1"
						}
					],
					"src": "33:2702:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							400
						]
					},
					"id": 401,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 189,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 190,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 188,
							"src": "66:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 191,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 698,
							"src": "90:36:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../../../utils/math/SafeMath.sol",
							"id": 192,
							"nodeType": "ImportDirective",
							"scope": 401,
							"sourceUnit": 1107,
							"src": "127:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 193,
								"nodeType": "StructuredDocumentation",
								"src": "171:457:2",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 400,
							"linearizedBaseContracts": [
								400
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 196,
									"libraryName": {
										"contractScope": null,
										"id": 194,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "659:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "653:27:2",
									"typeName": {
										"id": 195,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "672:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 199,
									"libraryName": {
										"contractScope": null,
										"id": 197,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 697,
										"src": "691:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$697",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "685:26:2",
									"typeName": {
										"id": 198,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "703:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "789:103:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 209,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 201,
															"src": "819:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 212,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 201,
																			"src": "849:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 136,
																		"src": "849:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "849:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 215,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 203,
																	"src": "874:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 216,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "878:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 210,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "826:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "826:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "826:58:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 208,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "799:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "799:86:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "799:86:2"
											}
										]
									},
									"documentation": null,
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "739:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 200,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "739:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "753:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 221,
												"src": "765:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "765:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "738:41:2"
									},
									"returnParameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:0:2"
									},
									"scope": 400,
									"src": "717:175:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "988:113:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 233,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 223,
															"src": "1018:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 236,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 223,
																			"src": "1048:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 168,
																		"src": "1048:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1048:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 239,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 225,
																	"src": "1077:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 240,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "1083:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 241,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 229,
																	"src": "1087:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 234,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1025:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1025:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1025:68:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 232,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "998:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "998:96:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "998:96:2"
											}
										]
									},
									"documentation": null,
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "924:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 222,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "924:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "938:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "952:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 246,
												"src": "964:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "923:55:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "988:0:2"
									},
									"scope": 400,
									"src": "898:203:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "1437:537:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 257,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 253,
																			"src": "1726:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1735:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1726:10:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1725:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 265,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1766:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$400",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 264,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1758:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 263,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1758:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 266,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1758:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 267,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 251,
																					"src": "1773:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 261,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 249,
																					"src": "1742:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 262,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 146,
																				"src": "1742:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 268,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1742:39:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1785:1:2",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1742:44:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 271,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1741:46:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1725:62:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1801:56:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 256,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1717:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1717:150:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "1717:150:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 277,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 249,
															"src": "1897:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 280,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 249,
																			"src": "1927:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "1927:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1927:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 283,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "1951:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 284,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "1960:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 278,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1904:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1904:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1904:62:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 276,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "1877:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1877:90:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "1877:90:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "1107:249:2",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1382:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 248,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "1382:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1396:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1396:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 289,
												"src": "1413:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1413:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1381:46:2"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:2"
									},
									"scope": 400,
									"src": "1361:613:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "2066:197:2",
										"statements": [
											{
												"assignments": [
													299
												],
												"declarations": [
													{
														"constant": false,
														"id": 299,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 324,
														"src": "2076:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 298,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2076:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 311,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 309,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 295,
															"src": "2143:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2123:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2115:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2115:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2115:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 306,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2130:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 300,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 291,
																	"src": "2099:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2099:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2099:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 901,
														"src": "2099:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2099:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2076:73:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 313,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 291,
															"src": "2179:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 316,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 291,
																			"src": "2209:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2209:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2209:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 319,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 293,
																	"src": "2233:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 320,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 299,
																	"src": "2242:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 314,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2186:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2186:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2186:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 312,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2159:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2159:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "2159:97:2"
											}
										]
									},
									"documentation": null,
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2011:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 290,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2011:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 325,
												"src": "2042:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2010:46:2"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:2"
									},
									"scope": 400,
									"src": "1980:283:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2355:242:2",
										"statements": [
											{
												"assignments": [
													335
												],
												"declarations": [
													{
														"constant": false,
														"id": 335,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 361,
														"src": "2365:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 334,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2365:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 348,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 345,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2432:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2439:43:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 340,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2412:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$400",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2404:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 338,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2404:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2404:13:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 342,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2419:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 336,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "2388:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 146,
																"src": "2388:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2388:39:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1025,
														"src": "2388:43:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2388:95:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2365:118:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 350,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 327,
															"src": "2513:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 353,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 327,
																			"src": "2543:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 156,
																		"src": "2543:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2543:22:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 356,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "2567:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 357,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "2576:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 351,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2520:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 352,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2520:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2520:69:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 349,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2493:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:97:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 360,
												"nodeType": "ExpressionStatement",
												"src": "2493:97:2"
											}
										]
									},
									"documentation": null,
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2300:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 326,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "2300:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "2331:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2299:46:2"
									},
									"returnParameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 400,
									"src": "2269:328:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "3050:681:2",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 398,
														"src": "3399:23:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 370,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3399:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 380,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 377,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 367,
															"src": "3453:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:34:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 374,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 365,
																	"src": "3433:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3425:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 372,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3425:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3425:14:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 491,
														"src": "3425:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3425:69:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3399:95:2"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 381,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "3508:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3508:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3528:1:2",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3508:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 397,
												"nodeType": "IfStatement",
												"src": "3504:221:2",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "3531:194:2",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 388,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 371,
																				"src": "3648:10:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 390,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3661:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 389,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3661:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 391,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3660:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 386,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3637:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3637:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 392,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3637:30:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3669:44:2",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 385,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3629:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3629:85:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 395,
															"nodeType": "ExpressionStatement",
															"src": "3629:85:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2603:372:2",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "3009:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 364,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3009:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 399,
												"src": "3023:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 366,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3023:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3008:33:2"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3050:0:2"
									},
									"scope": 400,
									"src": "2980:751:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 401,
							"src": "629:3104:2"
						}
					],
					"src": "33:3700:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							697
						]
					},
					"id": 698,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 402,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 403,
								"nodeType": "StructuredDocumentation",
								"src": "67:67:3",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 697,
							"linearizedBaseContracts": [
								697
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "793:311:3",
										"statements": [
											{
												"assignments": [
													412
												],
												"declarations": [
													{
														"constant": false,
														"id": 412,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 419,
														"src": "990:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 411,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "990:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "990:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1021:52:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1035:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1055:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1043:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1043:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1035:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 406,
														"isOffset": false,
														"isSlot": false,
														"src": "1055:7:3",
														"valueSize": 1
													},
													{
														"declaration": 412,
														"isOffset": false,
														"isSlot": false,
														"src": "1035:4:3",
														"valueSize": 1
													}
												],
												"id": 414,
												"nodeType": "InlineAssembly",
												"src": "1012:61:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 415,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 412,
														"src": "1089:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 416,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1096:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1089:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 410,
												"id": 418,
												"nodeType": "Return",
												"src": "1082:15:3"
											}
										]
									},
									"documentation": {
										"id": 404,
										"nodeType": "StructuredDocumentation",
										"src": "157:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "747:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "747:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "746:17:3"
									},
									"returnParameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 420,
												"src": "787:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 408,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "787:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "786:6:3"
									},
									"scope": 697,
									"src": "727:377:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "2092:241:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 431,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2118:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2110:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 429,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2110:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2110:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2110:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 434,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2135:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2110:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2143:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 428,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2102:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2102:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 438,
												"nodeType": "ExpressionStatement",
												"src": "2102:73:3"
											},
											{
												"assignments": [
													440,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 440,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 453,
														"src": "2187:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 439,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2187:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 447,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2235:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 441,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 423,
																"src": "2205:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2205:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 443,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 425,
																"src": "2227:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2205:29:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2205:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:52:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 449,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "2256:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2265:60:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 448,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2248:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2248:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2248:78:3"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1110:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "2040:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2040:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 454,
												"src": "2067:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2067:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2039:43:3"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:3"
									},
									"scope": 697,
									"src": "2021:312:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 470,
										"nodeType": "Block",
										"src": "3164:84:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 465,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3194:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 466,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "3202:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3208:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 464,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															471,
															491
														],
														"referencedDeclaration": 491,
														"src": "3181:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3181:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 463,
												"id": 469,
												"nodeType": "Return",
												"src": "3174:67:3"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2339:731:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 471,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3097:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3097:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3113:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3113:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3096:35:3"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 471,
												"src": "3150:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3150:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3149:14:3"
									},
									"scope": 697,
									"src": "3075:173:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "3617:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 484,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 474,
															"src": "3656:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 485,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 476,
															"src": "3664:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3670:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 487,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "3673:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 483,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "3634:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3634:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 482,
												"id": 489,
												"nodeType": "Return",
												"src": "3627:59:3"
											}
										]
									},
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3254:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3501:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3525:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 475,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3525:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3552:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 477,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3552:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3491:93:3"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 491,
												"src": "3603:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3603:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3602:14:3"
									},
									"scope": 697,
									"src": "3470:223:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "4198:111:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 504,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "4237:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 505,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "4245:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 506,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 498,
															"src": "4251:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4258:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 503,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															561
														],
														"referencedDeclaration": 561,
														"src": "4215:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4215:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 502,
												"id": 509,
												"nodeType": "Return",
												"src": "4208:94:3"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "3699:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4095:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4095:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4119:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 495,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4146:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4085:80:3"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 511,
												"src": "4184:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4184:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4183:14:3"
									},
									"scope": 697,
									"src": "4055:254:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4736:320:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 528,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4762:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$697",
																				"typeString": "library Address"
																			}
																		],
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4754:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 526,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4754:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4754:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4754:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 531,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4779:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4754:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4786:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 525,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4746:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4746:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "4746:81:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 538,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "4856:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 537,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "4845:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4845:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4865:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4837:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4837:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "4837:60:3"
											},
											{
												"assignments": [
													544,
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "4909:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 543,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4909:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 560,
														"src": "4923:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 545,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4923:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 553,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 551,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "4976:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 547,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 514,
																"src": "4950:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4950:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 518,
																"src": "4969:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4950:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4950:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4908:73:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 555,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "5015:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 556,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 546,
															"src": "5024:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 557,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "5036:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 554,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "4998:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4998:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 524,
												"id": 559,
												"nodeType": "Return",
												"src": "4991:58:3"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "4315:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4597:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4597:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4621:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 515,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4621:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4648:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4648:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4671:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 519,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4671:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4587:116:3"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 561,
												"src": "4722:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 522,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4722:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4721:14:3"
									},
									"scope": 697,
									"src": "4557:499:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "5333:97:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 572,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5369:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 573,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "5377:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5383:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 571,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															578,
															613
														],
														"referencedDeclaration": 613,
														"src": "5350:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 570,
												"id": 576,
												"nodeType": "Return",
												"src": "5343:80:3"
											}
										]
									},
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "5062:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5261:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5261:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5277:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 565,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5277:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5260:35:3"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 578,
												"src": "5319:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 568,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5319:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:14:3"
									},
									"scope": 697,
									"src": "5233:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 612,
										"nodeType": "Block",
										"src": "5772:228:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 592,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 581,
																	"src": "5801:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 591,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "5790:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5790:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5810:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5782:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5782:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "5782:67:3"
											},
											{
												"assignments": [
													598,
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 598,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 612,
														"src": "5861:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 597,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5861:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 612,
														"src": "5875:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 599,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5875:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 605,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 603,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "5920:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 601,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "5902:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5902:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5902:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5860:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 598,
															"src": "5959:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 600,
															"src": "5968:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 609,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "5980:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 606,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "5942:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5942:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 589,
												"id": 611,
												"nodeType": "Return",
												"src": "5935:58:3"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "5436:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5651:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5675:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 582,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5675:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5702:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 584,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5702:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5641:93:3"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 613,
												"src": "5758:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 587,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5758:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5757:14:3"
									},
									"scope": 697,
									"src": "5614:386:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 629,
										"nodeType": "Block",
										"src": "6276:101:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 624,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "6314:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "6322:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6328:41:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 623,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															665
														],
														"referencedDeclaration": 665,
														"src": "6293:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6293:77:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 622,
												"id": 628,
												"nodeType": "Return",
												"src": "6286:84:3"
											}
										]
									},
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "6006:168:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6209:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6209:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6225:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6225:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6208:35:3"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 630,
												"src": "6262:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 620,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6262:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6261:14:3"
									},
									"scope": 697,
									"src": "6179:198:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "6718:232:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 644,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 633,
																	"src": "6747:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 643,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 420,
																"src": "6736:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6736:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6756:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 642,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6728:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6728:69:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 648,
												"nodeType": "ExpressionStatement",
												"src": "6728:69:3"
											},
											{
												"assignments": [
													650,
													652
												],
												"declarations": [
													{
														"constant": false,
														"id": 650,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 664,
														"src": "6809:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 649,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6809:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 652,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 664,
														"src": "6823:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 651,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6823:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 657,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 655,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "6870:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 653,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 633,
															"src": "6850:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "6850:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6850:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6808:67:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 659,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "6909:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 660,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 652,
															"src": "6918:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 661,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "6930:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 658,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 696,
														"src": "6892:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6892:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 641,
												"id": 663,
												"nodeType": "Return",
												"src": "6885:58:3"
											}
										]
									},
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "6383:175:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6602:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6602:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6626:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 634,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6626:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6653:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 636,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6653:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6592:93:3"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 665,
												"src": "6704:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 639,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6704:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6703:14:3"
									},
									"scope": 697,
									"src": "6563:387:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "7330:532:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 677,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 668,
													"src": "7344:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "7401:455:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 684,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 681,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7485:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7485:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 683,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7505:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7485:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 691,
																"nodeType": "Block",
																"src": "7793:53:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 688,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "7818:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 687,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "7811:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7811:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 690,
																		"nodeType": "ExpressionStatement",
																		"src": "7811:20:3"
																	}
																]
															},
															"id": 692,
															"nodeType": "IfStatement",
															"src": "7481:365:3",
															"trueBody": {
																"id": 686,
																"nodeType": "Block",
																"src": "7508:279:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7628:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7650:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7679:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7673:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7673:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7654:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7722:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7726:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7718:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7718:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7739:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7711:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7711:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7711:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7679:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 670,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7726:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 685,
																		"nodeType": "InlineAssembly",
																		"src": "7619:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "7340:516:3",
												"trueBody": {
													"id": 680,
													"nodeType": "Block",
													"src": "7353:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 678,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "7374:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 676,
															"id": 679,
															"nodeType": "Return",
															"src": "7367:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "6956:209:3",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7205:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 667,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7205:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7227:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 669,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7227:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7260:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 671,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7260:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7195:97:3"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 696,
												"src": "7316:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 674,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7316:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7315:14:3"
									},
									"scope": 697,
									"src": "7170:692:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 698,
							"src": "135:7729:3"
						}
					],
					"src": "33:7832:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							719
						]
					},
					"id": 720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 699,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".12",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:32:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 700,
								"nodeType": "StructuredDocumentation",
								"src": "67:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 719,
							"linearizedBaseContracts": [
								719
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "658:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "675:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "675:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "668:17:4"
											}
										]
									},
									"documentation": null,
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:4"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 709,
												"src": "649:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "649:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "648:9:4"
									},
									"scope": 719,
									"src": "596:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "765:32:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 714,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "782:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "782:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 713,
												"id": 716,
												"nodeType": "Return",
												"src": "775:15:4"
											}
										]
									},
									"documentation": null,
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:2:4"
									},
									"returnParameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 718,
												"src": "749:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 711,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "749:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "748:16:4"
									},
									"scope": 719,
									"src": "698:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 720,
							"src": "564:235:4"
						}
					],
					"src": "33:767:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1106
						]
					},
					"id": 1107,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 721,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:31:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 722,
								"nodeType": "StructuredDocumentation",
								"src": "66:563:5",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 1106,
							"linearizedBaseContracts": [
								1106
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 752,
										"nodeType": "Block",
										"src": "865:98:5",
										"statements": [
											{
												"assignments": [
													735
												],
												"declarations": [
													{
														"constant": false,
														"id": 735,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 752,
														"src": "875:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "875:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 739,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 736,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "887:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 737,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 727,
														"src": "891:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "887:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "875:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 740,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "906:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 741,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "910:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "906:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 747,
												"nodeType": "IfStatement",
												"src": "902:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "921:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "928:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 745,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "920:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 733,
													"id": 746,
													"nodeType": "Return",
													"src": "913:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "948:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 749,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 750,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "947:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 733,
												"id": 751,
												"nodeType": "Return",
												"src": "940:16:5"
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "653:131:5",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 753,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "805:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "805:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "816:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "804:22:5"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "850:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 729,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "850:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 753,
												"src": "856:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "856:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "849:15:5"
									},
									"scope": 1106,
									"src": "789:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 779,
										"nodeType": "Block",
										"src": "1185:75:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 765,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "1199:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"id": 766,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "1203:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1199:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 772,
												"nodeType": "IfStatement",
												"src": "1195:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1214:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1221:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 770,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1213:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 764,
													"id": 771,
													"nodeType": "Return",
													"src": "1206:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1241:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 776,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 774,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "1247:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"argumentTypes": null,
																"id": 775,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 758,
																"src": "1251:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1247:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 777,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1240:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 764,
												"id": 778,
												"nodeType": "Return",
												"src": "1233:20:5"
											}
										]
									},
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "969:135:5",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 780,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1125:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1124:22:5"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1170:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1170:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 780,
												"src": "1176:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1169:15:5"
									},
									"scope": 1106,
									"src": "1109:151:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 820,
										"nodeType": "Block",
										"src": "1484:359:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1716:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 793,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1721:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1716:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 799,
												"nodeType": "IfStatement",
												"src": "1712:28:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1732:4:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 796,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1738:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 797,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1731:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 798,
													"nodeType": "Return",
													"src": "1724:16:5"
												}
											},
											{
												"assignments": [
													801
												],
												"declarations": [
													{
														"constant": false,
														"id": 801,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 820,
														"src": "1750:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 800,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1750:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 805,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 802,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "1762:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 803,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1766:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1762:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1750:17:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 806,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1781:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 807,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 783,
															"src": "1785:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1781:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 785,
														"src": "1790:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1781:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 815,
												"nodeType": "IfStatement",
												"src": "1777:33:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1801:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1808:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1800:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 791,
													"id": 814,
													"nodeType": "Return",
													"src": "1793:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1828:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 801,
															"src": "1834:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 818,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1827:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 791,
												"id": 819,
												"nodeType": "Return",
												"src": "1820:16:5"
											}
										]
									},
									"documentation": {
										"id": 781,
										"nodeType": "StructuredDocumentation",
										"src": "1266:137:5",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1424:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1435:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1435:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1423:22:5"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1469:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1469:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 821,
												"src": "1475:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1475:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1468:15:5"
									},
									"scope": 1106,
									"src": "1408:435:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "2068:76:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 826,
														"src": "2082:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2087:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2082:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 840,
												"nodeType": "IfStatement",
												"src": "2078:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2098:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2105:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 838,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2097:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 832,
													"id": 839,
													"nodeType": "Return",
													"src": "2090:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2125:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 842,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "2131:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"argumentTypes": null,
																"id": 843,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "2135:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2131:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 845,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2124:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 832,
												"id": 846,
												"nodeType": "Return",
												"src": "2117:20:5"
											}
										]
									},
									"documentation": {
										"id": 822,
										"nodeType": "StructuredDocumentation",
										"src": "1849:138:5",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 848,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2008:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2019:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2007:22:5"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2053:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2053:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 848,
												"src": "2059:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2052:15:5"
									},
									"scope": 1106,
									"src": "1992:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "2379:76:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 860,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "2393:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 861,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2398:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2393:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 867,
												"nodeType": "IfStatement",
												"src": "2389:29:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2409:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2416:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 865,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2408:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 859,
													"id": 866,
													"nodeType": "Return",
													"src": "2401:17:5"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"hexValue": "74727565",
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2436:4:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 869,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "2442:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"argumentTypes": null,
																"id": 870,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "2446:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2442:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 872,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2435:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 859,
												"id": 873,
												"nodeType": "Return",
												"src": "2428:20:5"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "2150:148:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2319:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2330:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2318:22:5"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2364:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 855,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2364:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 875,
												"src": "2370:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2370:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2363:15:5"
									},
									"scope": 1106,
									"src": "2303:152:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "2757:108:5",
										"statements": [
											{
												"assignments": [
													886
												],
												"declarations": [
													{
														"constant": false,
														"id": 886,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 900,
														"src": "2767:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 885,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 887,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "2779:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 888,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "2783:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2779:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 894,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 892,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 886,
																"src": "2802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 893,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "2807:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2802:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:29:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 891,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2794:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2794:46:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 898,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 886,
													"src": "2857:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 884,
												"id": 899,
												"nodeType": "Return",
												"src": "2850:8:5"
											}
										]
									},
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "2461:224:5",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2703:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2714:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2702:22:5"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 901,
												"src": "2748:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2748:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2747:9:5"
									},
									"scope": 1106,
									"src": "2690:175:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "3203:88:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "3221:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 913,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 904,
																"src": "3226:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3221:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3229:32:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 911,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3213:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 916,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3213:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 917,
												"nodeType": "ExpressionStatement",
												"src": "3213:49:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 918,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "3279:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 919,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3283:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 910,
												"id": 921,
												"nodeType": "Return",
												"src": "3272:12:5"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2871:260:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3149:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3149:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3160:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3148:22:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 923,
												"src": "3194:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3194:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3193:9:5"
									},
									"scope": 1106,
									"src": "3136:155:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "3605:148:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 933,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3619:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3624:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3619:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 938,
												"nodeType": "IfStatement",
												"src": "3615:20:5",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3634:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 932,
													"id": 937,
													"nodeType": "Return",
													"src": "3627:8:5"
												}
											},
											{
												"assignments": [
													940
												],
												"declarations": [
													{
														"constant": false,
														"id": 940,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 956,
														"src": "3645:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 939,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3645:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 944,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 941,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "3657:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 942,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "3661:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3657:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3645:17:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 946,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 940,
																	"src": "3680:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 947,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "3684:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3680:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 949,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 928,
																"src": "3689:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3680:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3692:35:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3672:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3672:56:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "3672:56:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 954,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 940,
													"src": "3745:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 932,
												"id": 955,
												"nodeType": "Return",
												"src": "3738:8:5"
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "3297:236:5",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3551:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3562:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3550:22:5"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 957,
												"src": "3596:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3596:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3595:9:5"
									},
									"scope": 1106,
									"src": "3538:215:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 978,
										"nodeType": "Block",
										"src": "4284:83:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 968,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 962,
																"src": "4302:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4306:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4302:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4309:28:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 967,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4294:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4294:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "4294:44:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 976,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 974,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4355:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 975,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 962,
														"src": "4359:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4355:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 966,
												"id": 977,
												"nodeType": "Return",
												"src": "4348:12:5"
											}
										]
									},
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3759:453:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4230:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4230:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4241:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4241:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4229:22:5"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 979,
												"src": "4275:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4275:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4274:9:5"
									},
									"scope": 1106,
									"src": "4217:150:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1000,
										"nodeType": "Block",
										"src": "4887:81:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 990,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 984,
																"src": "4905:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4909:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4912:26:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 989,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4897:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 995,
												"nodeType": "ExpressionStatement",
												"src": "4897:42:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 998,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 996,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 982,
														"src": "4956:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 997,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "4960:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4956:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 988,
												"id": 999,
												"nodeType": "Return",
												"src": "4949:12:5"
											}
										]
									},
									"documentation": {
										"id": 980,
										"nodeType": "StructuredDocumentation",
										"src": "4373:442:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4833:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4844:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4832:22:5"
									},
									"returnParameters": {
										"id": 988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1001,
												"src": "4878:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4877:9:5"
									},
									"scope": 1106,
									"src": "4820:148:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "5527:68:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1014,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1006,
																"src": "5545:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1015,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "5550:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5545:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1017,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1008,
															"src": "5553:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1013,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5537:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5537:29:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "5537:29:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1020,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1004,
														"src": "5583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1021,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1006,
														"src": "5587:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5583:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1012,
												"id": 1023,
												"nodeType": "Return",
												"src": "5576:12:5"
											}
										]
									},
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4974:453:5",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5445:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5445:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5456:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5467:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1007,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5467:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5444:50:5"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1025,
												"src": "5518:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5517:9:5"
									},
									"scope": 1106,
									"src": "5432:163:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "5669:103:5",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1056,
														"src": "5679:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5679:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1040,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1037,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "5695:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1038,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5698:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1036,
														"name": "add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 901,
														"src": "5691:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5691:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5679:21:5"
											},
											{
												"assignments": [
													1042
												],
												"declarations": [
													{
														"constant": false,
														"id": 1042,
														"mutability": "mutable",
														"name": "d",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1056,
														"src": "5710:9:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1041,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5710:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1047,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1044,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "5726:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "31",
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5729:1:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1043,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															923,
															1025
														],
														"referencedDeclaration": 923,
														"src": "5722:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5722:9:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5710:21:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1050,
																	"name": "d",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1042,
																	"src": "5756:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1051,
																	"name": "m",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1029,
																	"src": "5759:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1049,
																"name": "div",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	979,
																	1081
																],
																"referencedDeclaration": 979,
																"src": "5752:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5752:9:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1053,
															"name": "m",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "5763:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1048,
														"name": "mul",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "5748:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5748:17:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1033,
												"id": 1055,
												"nodeType": "Return",
												"src": "5741:24:5"
											}
										]
									},
									"documentation": null,
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceil",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5615:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1026,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5615:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "m",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5626:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5626:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5614:22:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1057,
												"src": "5660:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5660:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5659:9:5"
									},
									"scope": 1106,
									"src": "5601:171:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1080,
										"nodeType": "Block",
										"src": "6524:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1070,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "6542:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6546:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6542:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1073,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "6549:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1069,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "6534:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6534:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "6534:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1076,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "6579:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1077,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "6583:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6579:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1079,
												"nodeType": "Return",
												"src": "6572:12:5"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "5778:646:5",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1081,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6442:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6453:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6453:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6464:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1063,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6464:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6441:50:5"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1081,
												"src": "6515:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6515:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6514:9:5"
									},
									"scope": 1106,
									"src": "6429:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1104,
										"nodeType": "Block",
										"src": "7332:67:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1094,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "7350:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7354:1:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7350:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1097,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "7357:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1093,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "7342:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7342:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1099,
												"nodeType": "ExpressionStatement",
												"src": "7342:28:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1100,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1084,
														"src": "7387:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1101,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1086,
														"src": "7391:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7387:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1092,
												"id": 1103,
												"nodeType": "Return",
												"src": "7380:12:5"
											}
										]
									},
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "6597:635:5",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7250:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7250:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7261:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7261:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7272:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1087,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7272:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7249:50:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1105,
												"src": "7323:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7322:9:5"
									},
									"scope": 1106,
									"src": "7237:162:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1107,
							"src": "630:6771:5"
						}
					],
					"src": "33:7368:5"
				},
				"id": 5
			},
			"contracts/distribution/TombGenesisRewardPool.sol": {
				"ast": {
					"absolutePath": "contracts/distribution/TombGenesisRewardPool.sol",
					"exportedSymbols": {
						"PolyGenesisRewardPool": [
							2193
						]
					},
					"id": 2194,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1108,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1109,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 188,
							"src": "70:56:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1110,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 401,
							"src": "128:65:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 1111,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 1107,
							"src": "195:57:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/owner/Operator.sol",
							"file": "../owner/Operator.sol",
							"id": 1112,
							"nodeType": "ImportDirective",
							"scope": 2194,
							"sourceUnit": 2305,
							"src": "254:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1113,
										"name": "Operator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2304,
										"src": "496:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operator_$2304",
											"typeString": "contract Operator"
										}
									},
									"id": 1114,
									"nodeType": "InheritanceSpecifier",
									"src": "496:8:6"
								}
							],
							"contractDependencies": [
								109,
								719,
								2304
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2193,
							"linearizedBaseContracts": [
								2193,
								2304,
								109,
								719
							],
							"name": "PolyGenesisRewardPool",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1117,
									"libraryName": {
										"contractScope": null,
										"id": 1115,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1106,
										"src": "518:8:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1106",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "512:27:6",
									"typeName": {
										"id": 1116,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "531:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1120,
									"libraryName": {
										"contractScope": null,
										"id": 1118,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 400,
										"src": "551:9:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$400",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "545:27:6",
									"typeName": {
										"contractScope": null,
										"id": 1119,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "565:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "PolyGenesisRewardPool.UserInfo",
									"id": 1125,
									"members": [
										{
											"constant": false,
											"id": 1122,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1125,
											"src": "634:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1121,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "634:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1124,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1125,
											"src": "701:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1123,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "701:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nodeType": "StructDefinition",
									"scope": 2193,
									"src": "607:159:6",
									"visibility": "public"
								},
								{
									"canonicalName": "PolyGenesisRewardPool.PoolInfo",
									"id": 1136,
									"members": [
										{
											"constant": false,
											"id": 1127,
											"mutability": "mutable",
											"name": "token",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "828:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_IERC20_$187",
												"typeString": "contract IERC20"
											},
											"typeName": {
												"contractScope": null,
												"id": 1126,
												"name": "IERC20",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 187,
												"src": "828:6:6",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1129,
											"mutability": "mutable",
											"name": "allocPoint",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "884:18:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1128,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "884:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1131,
											"mutability": "mutable",
											"name": "lastRewardTime",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "986:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1130,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "986:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1133,
											"mutability": "mutable",
											"name": "accPolyPerShare",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "1063:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1132,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1063:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1135,
											"mutability": "mutable",
											"name": "isStarted",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1136,
											"src": "1151:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1134,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1151:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nodeType": "StructDefinition",
									"scope": 2193,
									"src": "801:405:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e177bb38",
									"id": 1138,
									"mutability": "mutable",
									"name": "Poly",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1214:18:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$187",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"contractScope": null,
										"id": 1137,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 187,
										"src": "1214:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$187",
											"typeString": "contract IERC20"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d212a69a",
									"id": 1140,
									"mutability": "mutable",
									"name": "_fees",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1253:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1253:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2bf8542c",
									"id": 1142,
									"mutability": "mutable",
									"name": "_feeColector",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1280:27:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1141,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1280:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 1145,
									"mutability": "mutable",
									"name": "poolInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1343:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
										"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 1143,
											"name": "PoolInfo",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 1136,
											"src": "1343:8:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
												"typeString": "struct PolyGenesisRewardPool.PoolInfo"
											}
										},
										"id": 1144,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "1343:10:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage_ptr",
											"typeString": "struct PolyGenesisRewardPool.PoolInfo[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "158ef93e",
									"id": 1148,
									"mutability": "mutable",
									"name": "initialized",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1392:31:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1146,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1392:4:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "66616c7365",
										"id": 1147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1418:5:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "93f1a40b",
									"id": 1154,
									"mutability": "mutable",
									"name": "userInfo",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1481:64:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
										"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
									},
									"typeName": {
										"id": 1153,
										"keyType": {
											"id": 1149,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1489:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1481:48:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
											"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo))"
										},
										"valueType": {
											"id": 1152,
											"keyType": {
												"id": 1150,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1508:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1500:28:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
												"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo)"
											},
											"valueType": {
												"contractScope": null,
												"id": 1151,
												"name": "UserInfo",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 1125,
												"src": "1519:8:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
													"typeString": "struct PolyGenesisRewardPool.UserInfo"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 1157,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1642:34:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1155,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1642:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "30",
										"id": 1156,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1675:1:6",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5f96dc11",
									"id": 1159,
									"mutability": "mutable",
									"name": "poolStartTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1727:28:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1158,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1727:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6e271dd5",
									"id": 1161,
									"mutability": "mutable",
									"name": "poolEndTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1804:26:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1160,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1804:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3f7caf52",
									"id": 1164,
									"mutability": "mutable",
									"name": "PolyPerSecond",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1855:44:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1162,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1855:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "302e3039363435",
										"id": 1163,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1886:13:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_96450000000000000_by_1",
											"typeString": "int_const 96450000000000000"
										},
										"value": "0.09645"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "943f013d",
									"id": 1167,
									"mutability": "mutable",
									"name": "runningTime",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1942:35:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1165,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1942:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "33",
										"id": 1166,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1971:6:6",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "09cf6091",
									"id": 1170,
									"mutability": "constant",
									"name": "TOTAL_REWARDS",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2193,
									"src": "1994:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1168,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1994:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3235303030",
										"id": 1169,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2034:11:6",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25000000000000000000000_by_1",
											"typeString": "int_const 25000000000000000000000"
										},
										"value": "25000"
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1178,
									"name": "Deposit",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1178,
												"src": "2088:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1178,
												"src": "2110:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2110:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1178,
												"src": "2131:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2131:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2087:59:6"
									},
									"src": "2074:73:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1186,
									"name": "Withdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1180,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1186,
												"src": "2168:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2168:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1186,
												"src": "2190:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1186,
												"src": "2211:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2211:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2167:59:6"
									},
									"src": "2153:74:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1194,
									"name": "EmergencyWithdraw",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "2257:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2257:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1190,
												"indexed": true,
												"mutability": "mutable",
												"name": "pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "2279:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2279:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1194,
												"src": "2300:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2300:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2256:59:6"
									},
									"src": "2233:83:6"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1200,
									"name": "RewardPaid",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "2339:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1200,
												"src": "2361:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2338:38:6"
									},
									"src": "2322:55:6"
								},
								{
									"body": {
										"id": 1209,
										"nodeType": "Block",
										"src": "2409:86:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2428:12:6",
															"subExpression": {
																"argumentTypes": null,
																"id": 1203,
																"name": "initialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "2429:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "47656e657369733a20616c726561647920696e697469616c697a6564",
															"id": 1205,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2442:30:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															},
															"value": "Genesis: already initialized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_32f8412976d6b5b49cfff0c2ce7a367dff93ea43e7fcecc77915dca5b7ef6b05",
																"typeString": "literal_string \"Genesis: already initialized\""
															}
														],
														"id": 1202,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2420:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2420:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2420:53:6"
											},
											{
												"id": 1208,
												"nodeType": "PlaceholderStatement",
												"src": "2486:1:6"
											}
										]
									},
									"documentation": null,
									"id": 1210,
									"name": "notInitialized",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2409:0:6"
									},
									"src": "2385:110:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1217,
										"nodeType": "Block",
										"src": "2605:37:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1215,
													"name": "initialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1148,
													"src": "2623:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1214,
												"id": 1216,
												"nodeType": "Return",
												"src": "2616:18:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "392e53cd",
									"id": 1218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isInitialized",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2575:2:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1218,
												"src": "2599:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2599:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2598:6:6"
									},
									"scope": 2193,
									"src": "2553:89:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2770:304:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1230,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -4,
																	"src": "2789:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2789:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1232,
																"name": "_poolStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1222,
																"src": "2807:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2789:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6c617465",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2823:6:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															},
															"value": "late"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d22ba2f5c26069bdb74740bf6cd2bda72537f7f337ee89e9c1a90344f6a36333",
																"typeString": "literal_string \"late\""
															}
														],
														"id": 1229,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2781:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:49:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2781:49:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1237,
														"name": "_Poly",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "2845:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2862:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2854:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1238,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2854:7:6",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2854:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2845:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "2841:45:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 1247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 1243,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "2866:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1245,
																	"name": "_Poly",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1220,
																	"src": "2880:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1244,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 187,
																"src": "2873:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$187_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2873:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"src": "2866:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$187",
															"typeString": "contract IERC20"
														}
													},
													"id": 1248,
													"nodeType": "ExpressionStatement",
													"src": "2866:20:6"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1250,
														"name": "_feeColector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1142,
														"src": "2897:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1251,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "2912:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2912:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2897:25:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1254,
												"nodeType": "ExpressionStatement",
												"src": "2897:25:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1255,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "2933:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1256,
														"name": "_poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1222,
														"src": "2949:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2933:30:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1258,
												"nodeType": "ExpressionStatement",
												"src": "2933:30:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1259,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "2974:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1260,
															"name": "poolStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1159,
															"src": "2988:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 1261,
															"name": "runningTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "3004:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2988:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2974:41:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2974:41:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1265,
														"name": "_fees",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "3026:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "323030",
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3034:3:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_200_by_1",
															"typeString": "int_const 200"
														},
														"value": "200"
													},
													"src": "3026:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "3026:11:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1269,
														"name": "initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1148,
														"src": "3048:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3062:4:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3048:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1272,
												"nodeType": "ExpressionStatement",
												"src": "3048:18:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "cd6dc687",
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1225,
											"modifierName": {
												"argumentTypes": null,
												"id": 1224,
												"name": "notInitialized",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1210,
												"src": "2742:14:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2742:14:6"
										},
										{
											"arguments": null,
											"id": 1227,
											"modifierName": {
												"argumentTypes": null,
												"id": 1226,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "2757:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2757:12:6"
										}
									],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "_Poly",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1274,
												"src": "2681:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2681:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "_poolStartTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1274,
												"src": "2705:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2670:64:6"
									},
									"returnParameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2770:0:6"
									},
									"scope": 2193,
									"src": "2650:424:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1306,
										"nodeType": "Block",
										"src": "3141:204:6",
										"statements": [
											{
												"assignments": [
													1280
												],
												"declarations": [
													{
														"constant": false,
														"id": 1280,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1306,
														"src": "3152:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1279,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3152:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1283,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1281,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "3169:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3169:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3152:32:6"
											},
											{
												"body": {
													"id": 1304,
													"nodeType": "Block",
													"src": "3238:100:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 1295,
																					"name": "poolInfo",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1145,
																					"src": "3261:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																					}
																				},
																				"id": 1297,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 1296,
																					"name": "pid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1285,
																					"src": "3270:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3261:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																				}
																			},
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "token",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1127,
																			"src": "3261:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 1299,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "3284:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "3261:29:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "506f6c7947656e65736973506f6f6c3a206578697374696e6720706f6f6c3f",
																		"id": 1301,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3292:33:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		},
																		"value": "PolyGenesisPool: existing pool?"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_f332d0f7df98f4c5c557650dceb131de43a52d33f8c55bd6783de1a9d56d3a5c",
																			"typeString": "literal_string \"PolyGenesisPool: existing pool?\""
																		}
																	],
																	"id": 1294,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3253:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3253:73:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1303,
															"nodeType": "ExpressionStatement",
															"src": "3253:73:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1288,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "3217:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1289,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3223:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3217:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"initializationExpression": {
													"assignments": [
														1285
													],
													"declarations": [
														{
															"constant": false,
															"id": 1285,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1305,
															"src": "3200:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1284,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3200:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1287,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3214:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3200:15:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1292,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3231:5:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1291,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1285,
															"src": "3233:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1293,
													"nodeType": "ExpressionStatement",
													"src": "3231:5:6"
												},
												"nodeType": "ForStatement",
												"src": "3195:143:6"
											}
										]
									},
									"documentation": null,
									"id": 1307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "checkPoolDuplicate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1307,
												"src": "3112:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1275,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3111:15:6"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3141:0:6"
									},
									"scope": 2193,
									"src": "3084:261:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1406,
										"nodeType": "Block",
										"src": "3578:1121:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1321,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1311,
															"src": "3608:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														],
														"id": 1320,
														"name": "checkPoolDuplicate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "3589:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_contract$_IERC20_$187_$returns$__$",
															"typeString": "function (contract IERC20) view"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3589:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "3589:26:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1324,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1313,
													"src": "3630:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "3626:61:6",
												"trueBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "3643:44:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1325,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1643,
																	"src": "3658:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3658:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1327,
															"nodeType": "ExpressionStatement",
															"src": "3658:17:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1330,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "3701:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3701:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1332,
														"name": "poolStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "3719:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3701:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1369,
													"nodeType": "Block",
													"src": "4042:189:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1356,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1354,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "4093:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4112:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4093:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1357,
																		"name": "_lastRewardTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "4117:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1358,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "4135:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "4135:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4117:33:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4093:57:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1368,
															"nodeType": "IfStatement",
															"src": "4089:131:6",
															"trueBody": {
																"id": 1367,
																"nodeType": "Block",
																"src": "4152:68:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1365,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1362,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "4171:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1363,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -4,
																					"src": "4189:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 1364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "4189:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4171:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1366,
																		"nodeType": "ExpressionStatement",
																		"src": "4171:33:6"
																	}
																]
															}
														}
													]
												},
												"id": 1370,
												"nodeType": "IfStatement",
												"src": "3697:534:6",
												"trueBody": {
													"id": 1353,
													"nodeType": "Block",
													"src": "3734:302:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1334,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "3786:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3805:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3786:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1351,
																"nodeType": "Block",
																"src": "3880:145:6",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1344,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 1342,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "3903:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 1343,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "3921:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3903:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": null,
																		"id": 1350,
																		"nodeType": "IfStatement",
																		"src": "3899:111:6",
																		"trueBody": {
																			"id": 1349,
																			"nodeType": "Block",
																			"src": "3936:74:6",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 1347,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 1345,
																							"name": "_lastRewardTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1315,
																							"src": "3959:15:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 1346,
																							"name": "poolStartTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1159,
																							"src": "3977:13:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3959:31:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1348,
																					"nodeType": "ExpressionStatement",
																					"src": "3959:31:6"
																				}
																			]
																		}
																	}
																]
															},
															"id": 1352,
															"nodeType": "IfStatement",
															"src": "3782:243:6",
															"trueBody": {
																"id": 1341,
																"nodeType": "Block",
																"src": "3808:66:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 1337,
																				"name": "_lastRewardTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1315,
																				"src": "3827:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 1338,
																				"name": "poolStartTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "3845:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3827:31:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1340,
																		"nodeType": "ExpressionStatement",
																		"src": "3827:31:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "_isStarted",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1406,
														"src": "4241:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1371,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4241:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1383,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1373,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "4269:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1374,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "4288:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4269:32:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1376,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4268:34:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1377,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "4316:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1378,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "4335:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "4335:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4316:34:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1381,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4315:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4268:83:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4241:110:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1388,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "4408:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1389,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1309,
																	"src": "4442:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1390,
																	"name": "_lastRewardTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1315,
																	"src": "4485:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4533:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"argumentTypes": null,
																	"id": 1392,
																	"name": "_isStarted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1372,
																	"src": "4561:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$187",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1387,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "4376:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$1136_storage_ptr_$",
																	"typeString": "type(struct PolyGenesisRewardPool.PoolInfo storage pointer)"
																}
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token",
																"allocPoint",
																"lastRewardTime",
																"accPolyPerShare",
																"isStarted"
															],
															"nodeType": "FunctionCall",
															"src": "4376:211:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$1136_memory_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1384,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "4362:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 1386,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4362:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_PoolInfo_$1136_storage_$returns$__$",
															"typeString": "function (struct PolyGenesisRewardPool.PoolInfo storage ref)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4362:226:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "4362:226:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1396,
													"name": "_isStarted",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1372,
													"src": "4603:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1405,
												"nodeType": "IfStatement",
												"src": "4599:93:6",
												"trueBody": {
													"id": 1404,
													"nodeType": "Block",
													"src": "4615:77:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1397,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "4630:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1400,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1309,
																			"src": "4668:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1398,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "4648:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "4648:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4648:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4630:50:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1403,
															"nodeType": "ExpressionStatement",
															"src": "4630:50:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "96805e54",
									"id": 1407,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1318,
											"modifierName": {
												"argumentTypes": null,
												"id": 1317,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "3565:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3565:12:6"
										}
									],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "3446:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3446:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "3476:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1310,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "3476:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "3500:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3500:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "_lastRewardTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1407,
												"src": "3527:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3527:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3435:122:6"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3578:0:6"
									},
									"scope": 2193,
									"src": "3423:1276:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "4863:285:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1416,
														"name": "massUpdatePools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "4874:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4874:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "4874:17:6"
											},
											{
												"assignments": [
													1420
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1446,
														"src": "4902:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1419,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "4902:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1424,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1421,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "4926:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1423,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1422,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1409,
														"src": "4935:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4926:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4902:38:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1425,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1420,
														"src": "4955:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "isStarted",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1135,
													"src": "4955:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "4951:150:6",
												"trueBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "4971:130:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1427,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "4986:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1434,
																			"name": "_allocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "5063:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"expression": {
																						"argumentTypes": null,
																						"id": 1430,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1420,
																						"src": "5024:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																							"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																						}
																					},
																					"id": 1431,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "allocPoint",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1129,
																					"src": "5024:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1428,
																					"name": "totalAllocPoint",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1157,
																					"src": "5004:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1429,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5004:19:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5004:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "5004:40:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5004:85:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4986:103:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "4986:103:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1440,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1129,
														"src": "5111:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1443,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "5129:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5111:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "5111:29:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "1ab06ee5",
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1414,
											"modifierName": {
												"argumentTypes": null,
												"id": 1413,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "4850:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "4850:12:6"
										}
									],
									"name": "set",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "4808:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4808:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1447,
												"src": "4822:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4807:35:6"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 2193,
									"src": "4795:353:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "5319:559:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1456,
														"name": "_fromTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1449,
														"src": "5334:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1457,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "5347:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5334:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1461,
												"nodeType": "IfStatement",
												"src": "5330:34:6",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5363:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1455,
													"id": 1460,
													"nodeType": "Return",
													"src": "5356:8:6"
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1462,
														"name": "_toTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1451,
														"src": "5379:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1463,
														"name": "poolEndTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1161,
														"src": "5390:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5379:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1518,
													"nodeType": "Block",
													"src": "5644:227:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1492,
																	"name": "_toTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "5663:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1493,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "5674:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5663:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1497,
															"nodeType": "IfStatement",
															"src": "5659:38:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5696:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1455,
																"id": 1496,
																"nodeType": "Return",
																"src": "5689:8:6"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1498,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "5716:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1499,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "5729:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5716:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1509,
															"nodeType": "IfStatement",
															"src": "5712:84:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1506,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "5782:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1503,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "5763:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1501,
																					"name": "_toTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1451,
																					"src": "5751:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1502,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5751:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1504,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5751:26:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5751:30:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5751:45:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1455,
																"id": 1508,
																"nodeType": "Return",
																"src": "5744:52:6"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1515,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "5845:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1512,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "5830:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1510,
																				"name": "_toTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1451,
																				"src": "5818:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5818:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5818:22:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5818:26:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5818:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1455,
															"id": 1517,
															"nodeType": "Return",
															"src": "5811:48:6"
														}
													]
												},
												"id": 1519,
												"nodeType": "IfStatement",
												"src": "5375:496:6",
												"trueBody": {
													"id": 1491,
													"nodeType": "Block",
													"src": "5403:235:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1465,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "5422:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1466,
																	"name": "poolEndTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "5435:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5422:24:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1470,
															"nodeType": "IfStatement",
															"src": "5418:38:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5455:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"functionReturnParameters": 1455,
																"id": 1469,
																"nodeType": "Return",
																"src": "5448:8:6"
															}
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1471,
																	"name": "_fromTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1449,
																	"src": "5475:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1472,
																	"name": "poolStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1159,
																	"src": "5488:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5475:26:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1482,
															"nodeType": "IfStatement",
															"src": "5471:88:6",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1479,
																			"name": "PolyPerSecond",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1164,
																			"src": "5545:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1476,
																					"name": "poolStartTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1159,
																					"src": "5526:13:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1474,
																					"name": "poolEndTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1161,
																					"src": "5510:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 923,
																				"src": "5510:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5510:30:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "5510:34:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5510:49:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 1455,
																"id": 1481,
																"nodeType": "Return",
																"src": "5503:56:6"
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1488,
																		"name": "PolyPerSecond",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "5612:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1485,
																				"name": "_fromTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1449,
																				"src": "5597:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1483,
																				"name": "poolEndTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1161,
																				"src": "5581:11:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1484,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sub",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 923,
																			"src": "5581:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5581:26:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "5581:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5581:45:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1455,
															"id": 1490,
															"nodeType": "Return",
															"src": "5574:52:6"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"functionSelector": "231f0c6a",
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGeneratedReward",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "_fromTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1521,
												"src": "5253:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "_toTime",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1521,
												"src": "5272:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5252:36:6"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1521,
												"src": "5310:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5310:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5309:9:6"
									},
									"scope": 2193,
									"src": "5225:653:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1617,
										"nodeType": "Block",
										"src": "6024:689:6",
										"statements": [
											{
												"assignments": [
													1531
												],
												"declarations": [
													{
														"constant": false,
														"id": 1531,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "6035:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1530,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "6035:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1532,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "6059:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1534,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1533,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1523,
														"src": "6068:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6059:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6035:38:6"
											},
											{
												"assignments": [
													1537
												],
												"declarations": [
													{
														"constant": false,
														"id": 1537,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "6084:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1536,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "6084:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1538,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "6108:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1540,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1539,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "6117:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6108:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1542,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1541,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "6123:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6108:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6084:45:6"
											},
											{
												"assignments": [
													1545
												],
												"declarations": [
													{
														"constant": false,
														"id": 1545,
														"mutability": "mutable",
														"name": "accPolyPerShare",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "6140:23:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1544,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6140:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1548,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1546,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1531,
														"src": "6166:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
														}
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "accPolyPerShare",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1133,
													"src": "6166:20:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6140:46:6"
											},
											{
												"assignments": [
													1550
												],
												"declarations": [
													{
														"constant": false,
														"id": 1550,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1617,
														"src": "6197:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1549,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6197:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1559,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1556,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "6248:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6240:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1554,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6240:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6240:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1551,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6219:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "6219:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "6219:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6197:57:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1560,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -4,
																"src": "6269:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "6269:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1562,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1531,
																"src": "6287:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1563,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1131,
															"src": "6287:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6269:37:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1567,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 1565,
															"name": "tokenSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1550,
															"src": "6310:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "30",
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6325:1:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6310:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6269:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1603,
												"nodeType": "IfStatement",
												"src": "6265:360:6",
												"trueBody": {
													"id": 1602,
													"nodeType": "Block",
													"src": "6328:297:6",
													"statements": [
														{
															"assignments": [
																1570
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1570,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1602,
																	"src": "6343:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1569,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6343:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1577,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1572,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1531,
																			"src": "6389:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1573,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "6389:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1574,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "6410:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "6410:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1571,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "6370:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6343:83:6"
														},
														{
															"assignments": [
																1579
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1579,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1602,
																	"src": "6441:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1578,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6441:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1588,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1586,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "6505:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1582,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1531,
																					"src": "6484:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1583,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "6484:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1580,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1570,
																				"src": "6463:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "6463:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1584,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6463:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "6463:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6463:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6441:80:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1589,
																	"name": "accPolyPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "6536:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1597,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1550,
																					"src": "6600:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1594,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "6590:4:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1592,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1579,
																							"src": "6574:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1593,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "6574:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6574:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1596,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "6574:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1598,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6574:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1590,
																			"name": "accPolyPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "6554:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "6554:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6554:59:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6536:77:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1601,
															"nodeType": "ExpressionStatement",
															"src": "6536:77:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1613,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "6689:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "6689:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1610,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6679:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1607,
																			"name": "accPolyPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1545,
																			"src": "6658:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1604,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1537,
																				"src": "6642:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "6642:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "6642:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6642:32:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "6642:36:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6642:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1612,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "6642:46:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6642:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1529,
												"id": 1616,
												"nodeType": "Return",
												"src": "6635:70:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "ecf4deb9",
									"id": 1618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingStone",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1523,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "5963:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5963:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "_user",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "5977:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5962:29:6"
									},
									"returnParameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1618,
												"src": "6015:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6014:9:6"
									},
									"scope": 2193,
									"src": "5941:772:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1642,
										"nodeType": "Block",
										"src": "6830:146:6",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "length",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1642,
														"src": "6841:14:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6841:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1623,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "6858:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "6858:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6841:32:6"
											},
											{
												"body": {
													"id": 1640,
													"nodeType": "Block",
													"src": "6927:42:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1637,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1627,
																		"src": "6953:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1636,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "6942:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6942:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "6942:15:6"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1630,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1627,
														"src": "6906:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1631,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1622,
														"src": "6912:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6906:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1641,
												"initializationExpression": {
													"assignments": [
														1627
													],
													"declarations": [
														{
															"constant": false,
															"id": 1627,
															"mutability": "mutable",
															"name": "pid",
															"nodeType": "VariableDeclaration",
															"overrides": null,
															"scope": 1641,
															"src": "6889:11:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1626,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6889:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 1629,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1628,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6903:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6889:15:6"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6920:5:6",
														"subExpression": {
															"argumentTypes": null,
															"id": 1633,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1627,
															"src": "6922:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1635,
													"nodeType": "ExpressionStatement",
													"src": "6920:5:6"
												},
												"nodeType": "ForStatement",
												"src": "6884:85:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "630b5ba1",
									"id": 1643,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6820:2:6"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6830:0:6"
									},
									"scope": 2193,
									"src": "6796:180:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "7093:867:6",
										"statements": [
											{
												"assignments": [
													1649
												],
												"declarations": [
													{
														"constant": false,
														"id": 1649,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1753,
														"src": "7104:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1648,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "7104:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1650,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "7128:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1652,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1651,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "7137:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7128:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7104:38:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1654,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7157:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7157:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1656,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "7176:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1657,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7176:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7157:38:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1661,
												"nodeType": "IfStatement",
												"src": "7153:77:6",
												"trueBody": {
													"id": 1660,
													"nodeType": "Block",
													"src": "7197:33:6",
													"statements": [
														{
															"expression": null,
															"functionReturnParameters": 1647,
															"id": 1659,
															"nodeType": "Return",
															"src": "7212:7:6"
														}
													]
												}
											},
											{
												"assignments": [
													1663
												],
												"declarations": [
													{
														"constant": false,
														"id": 1663,
														"mutability": "mutable",
														"name": "tokenSupply",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1753,
														"src": "7240:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1662,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7240:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1672,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1669,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "7291:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7283:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7283:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7283:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1664,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1649,
																"src": "7262:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "7262:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "7262:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7262:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7240:57:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1673,
														"name": "tokenSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1663,
														"src": "7312:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7327:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7312:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1685,
												"nodeType": "IfStatement",
												"src": "7308:107:6",
												"trueBody": {
													"id": 1684,
													"nodeType": "Block",
													"src": "7330:85:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1676,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "7345:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1131,
																	"src": "7345:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1679,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -4,
																		"src": "7367:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "7367:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7345:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1682,
															"nodeType": "ExpressionStatement",
															"src": "7345:37:6"
														},
														{
															"expression": null,
															"functionReturnParameters": 1647,
															"id": 1683,
															"nodeType": "Return",
															"src": "7397:7:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"id": 1688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7429:15:6",
													"subExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1686,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "7430:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "isStarted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1135,
														"src": "7430:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1704,
												"nodeType": "IfStatement",
												"src": "7425:138:6",
												"trueBody": {
													"id": 1703,
													"nodeType": "Block",
													"src": "7446:117:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1689,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "7461:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "isStarted",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1135,
																	"src": "7461:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 1692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7478:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7461:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1694,
															"nodeType": "ExpressionStatement",
															"src": "7461:21:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 1695,
																	"name": "totalAllocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1157,
																	"src": "7497:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1698,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "7535:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1699,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "allocPoint",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1129,
																			"src": "7535:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 1696,
																			"name": "totalAllocPoint",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1157,
																			"src": "7515:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7515:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7515:36:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7497:54:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1702,
															"nodeType": "ExpressionStatement",
															"src": "7497:54:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1705,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1157,
														"src": "7577:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7595:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7577:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1745,
												"nodeType": "IfStatement",
												"src": "7573:332:6",
												"trueBody": {
													"id": 1744,
													"nodeType": "Block",
													"src": "7598:307:6",
													"statements": [
														{
															"assignments": [
																1709
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1709,
																	"mutability": "mutable",
																	"name": "_generatedReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1744,
																	"src": "7613:24:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1708,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7613:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1716,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1711,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1649,
																			"src": "7659:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1712,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lastRewardTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1131,
																		"src": "7659:19:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1713,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -4,
																			"src": "7680:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "7680:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1710,
																	"name": "getGeneratedReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1521,
																	"src": "7640:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) view returns (uint256)"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7640:56:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7613:83:6"
														},
														{
															"assignments": [
																1718
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1718,
																	"mutability": "mutable",
																	"name": "_PolyReward",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1744,
																	"src": "7711:19:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1717,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7711:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1727,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1725,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1157,
																		"src": "7775:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 1721,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1649,
																					"src": "7754:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																					}
																				},
																				"id": 1722,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allocPoint",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1129,
																				"src": "7754:15:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1719,
																				"name": "_generatedReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1709,
																				"src": "7733:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 957,
																			"src": "7733:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1723,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7733:37:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 979,
																	"src": "7733:41:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7733:58:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7711:80:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1742,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1728,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "7806:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "accPolyPerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1133,
																	"src": "7806:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1739,
																					"name": "tokenSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1663,
																					"src": "7880:11:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"hexValue": "31653138",
																							"id": 1736,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "7870:4:6",
																							"subdenomination": null,
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							},
																							"value": "1e18"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000000000_by_1",
																								"typeString": "int_const 1000000000000000000"
																							}
																						],
																						"expression": {
																							"argumentTypes": null,
																							"id": 1734,
																							"name": "_PolyReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1718,
																							"src": "7854:11:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1735,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 957,
																						"src": "7854:15:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1737,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7854:21:6",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1738,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 979,
																				"src": "7854:25:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7854:38:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1731,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "7829:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPolyPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "7829:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "7829:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7829:64:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7806:87:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1743,
															"nodeType": "ExpressionStatement",
															"src": "7806:87:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1746,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "7915:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
															}
														},
														"id": 1748,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1131,
														"src": "7915:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1749,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "7937:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "7937:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7915:37:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "7915:37:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "51eb05a6",
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1754,
												"src": "7072:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7071:14:6"
									},
									"returnParameters": {
										"id": 1647,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7093:0:6"
									},
									"scope": 2193,
									"src": "7052:908:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1902,
										"nodeType": "Block",
										"src": "8052:982:6",
										"statements": [
											{
												"assignments": [
													1762
												],
												"declarations": [
													{
														"constant": false,
														"id": 1762,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8063:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1761,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8063:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1765,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "8081:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "8081:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8063:28:6"
											},
											{
												"assignments": [
													1767
												],
												"declarations": [
													{
														"constant": false,
														"id": 1767,
														"mutability": "mutable",
														"name": "_fee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8102:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1766,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8102:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1772,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1770,
															"name": "_fees",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "8130:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1768,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "8117:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "ceil",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1057,
														"src": "8117:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8117:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8102:34:6"
											},
											{
												"assignments": [
													1774
												],
												"declarations": [
													{
														"constant": false,
														"id": 1774,
														"mutability": "mutable",
														"name": "_new",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8147:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8147:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "3130303030",
															"id": 1780,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8182:5:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1777,
																	"name": "_fees",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "8171:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1775,
																	"name": "_fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1767,
																	"src": "8162:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 957,
																"src": "8162:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8162:15:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 979,
														"src": "8162:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8162:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8147:41:6"
											},
											{
												"assignments": [
													1784
												],
												"declarations": [
													{
														"constant": false,
														"id": 1784,
														"mutability": "mutable",
														"name": "_newAmount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8199:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1783,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8199:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1789,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1787,
															"name": "_new",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1774,
															"src": "8232:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 1785,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "8220:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "8220:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8220:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8199:38:6"
											},
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8250:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1790,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "8250:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1792,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "8274:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1794,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1793,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1756,
														"src": "8283:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8274:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8250:38:6"
											},
											{
												"assignments": [
													1797
												],
												"declarations": [
													{
														"constant": false,
														"id": 1797,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1902,
														"src": "8299:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1796,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "8299:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1798,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "8323:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1800,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1799,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "8332:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8323:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1802,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1801,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1762,
														"src": "8338:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8323:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8299:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1805,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "8368:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1804,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "8357:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8357:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1807,
												"nodeType": "ExpressionStatement",
												"src": "8357:16:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1808,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "8390:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "8390:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8404:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8390:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1844,
												"nodeType": "IfStatement",
												"src": "8386:290:6",
												"trueBody": {
													"id": 1843,
													"nodeType": "Block",
													"src": "8407:269:6",
													"statements": [
														{
															"assignments": [
																1813
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1813,
																	"mutability": "mutable",
																	"name": "_pending",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1843,
																	"src": "8422:16:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1812,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8422:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1827,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1824,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "8493:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1825,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "rewardDebt",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1124,
																		"src": "8493:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "31653138",
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8483:4:6",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				},
																				"value": "1e18"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000000000_by_1",
																					"typeString": "int_const 1000000000000000000"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1817,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1791,
																							"src": "8457:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 1818,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "accPolyPerShare",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1133,
																						"src": "8457:20:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 1814,
																							"name": "user",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1797,
																							"src": "8441:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																							}
																						},
																						"id": 1815,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "amount",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1122,
																						"src": "8441:11:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1816,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 957,
																					"src": "8441:15:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1819,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "8441:37:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 979,
																			"src": "8441:41:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1822,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8441:47:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 923,
																	"src": "8441:51:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8441:68:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8422:87:6"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1828,
																	"name": "_pending",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "8528:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1829,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8539:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8528:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 1842,
															"nodeType": "IfStatement",
															"src": "8524:141:6",
															"trueBody": {
																"id": 1841,
																"nodeType": "Block",
																"src": "8542:123:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1832,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1762,
																					"src": "8578:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1833,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "8587:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1831,
																				"name": "safePolyTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2115,
																				"src": "8561:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8561:35:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1835,
																		"nodeType": "ExpressionStatement",
																		"src": "8561:35:6"
																	},
																	{
																		"eventCall": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 1837,
																					"name": "_sender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1762,
																					"src": "8631:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1838,
																					"name": "_pending",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "8640:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1836,
																				"name": "RewardPaid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1200,
																				"src": "8620:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1839,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8620:29:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1840,
																		"nodeType": "EmitStatement",
																		"src": "8615:34:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1845,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1758,
														"src": "8690:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1846,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8700:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8690:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1881,
												"nodeType": "IfStatement",
												"src": "8686:218:6",
												"trueBody": {
													"id": 1880,
													"nodeType": "Block",
													"src": "8703:201:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1853,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1762,
																		"src": "8746:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1856,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "8763:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																					"typeString": "contract PolyGenesisRewardPool"
																				}
																			],
																			"id": 1855,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8755:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1854,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8755:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 1857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8755:13:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1858,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "8770:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1848,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "8718:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8718:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 246,
																	"src": "8718:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8718:60:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1860,
															"nodeType": "ExpressionStatement",
															"src": "8718:60:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1869,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1861,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1797,
																		"src": "8793:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1863,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "8793:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1867,
																			"name": "_newAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1784,
																			"src": "8823:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1864,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1797,
																				"src": "8807:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "8807:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 901,
																		"src": "8807:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1868,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8807:27:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8793:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1870,
															"nodeType": "ExpressionStatement",
															"src": "8793:41:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1876,
																		"name": "_feeColector",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1142,
																		"src": "8873:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1877,
																		"name": "_fee",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1767,
																		"src": "8887:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1871,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "8849:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "8849:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "8849:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8849:43:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1879,
															"nodeType": "ExpressionStatement",
															"src": "8849:43:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1894,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1882,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "8914:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1884,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "8914:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8974:4:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1888,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1791,
																			"src": "8948:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPolyPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "8948:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1885,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1797,
																			"src": "8932:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 1886,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "8932:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "8932:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8932:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "8932:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8932:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8914:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1895,
												"nodeType": "ExpressionStatement",
												"src": "8914:65:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1897,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1762,
															"src": "9003:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1898,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1756,
															"src": "9012:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1899,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1758,
															"src": "9018:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1896,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "8995:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8995:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1901,
												"nodeType": "EmitStatement",
												"src": "8990:36:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "e2bbb158",
									"id": 1903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1903,
												"src": "8014:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8014:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1903,
												"src": "8028:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8013:31:6"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8052:0:6"
									},
									"scope": 2193,
									"src": "7997:1037:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2016,
										"nodeType": "Block",
										"src": "9126:754:6",
										"statements": [
											{
												"assignments": [
													1911
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "_sender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2016,
														"src": "9137:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1910,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "9137:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1914,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 1912,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "9155:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "9155:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9137:28:6"
											},
											{
												"assignments": [
													1916
												],
												"declarations": [
													{
														"constant": false,
														"id": 1916,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2016,
														"src": "9176:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1915,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "9176:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1920,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 1917,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "9200:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 1919,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1918,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "9209:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9200:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9176:38:6"
											},
											{
												"assignments": [
													1922
												],
												"declarations": [
													{
														"constant": false,
														"id": 1922,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2016,
														"src": "9225:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 1921,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "9225:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1928,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 1923,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "9249:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 1925,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1924,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "9258:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9249:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 1927,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1926,
														"name": "_sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1911,
														"src": "9264:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9249:23:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9225:47:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 1930,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "9291:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																		"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																	}
																},
																"id": 1931,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1122,
																"src": "9291:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1932,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1907,
																"src": "9306:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9291:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "77697468647261773a206e6f7420676f6f64",
															"id": 1934,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9315:20:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															},
															"value": "withdraw: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d09049ba12a4b0d32c8152176161276998fb1529c6184e3c4227161fe99644df",
																"typeString": "literal_string \"withdraw: not good\""
															}
														],
														"id": 1929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "9283:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9283:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1936,
												"nodeType": "ExpressionStatement",
												"src": "9283:53:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1938,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "9358:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1937,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1754,
														"src": "9347:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9347:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "9347:16:6"
											},
											{
												"assignments": [
													1942
												],
												"declarations": [
													{
														"constant": false,
														"id": 1942,
														"mutability": "mutable",
														"name": "_pending",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2016,
														"src": "9374:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1941,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9374:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1956,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1953,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1922,
																"src": "9445:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "rewardDebt",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1124,
															"src": "9445:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "31653138",
																	"id": 1950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9435:4:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1946,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1916,
																				"src": "9409:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																				}
																			},
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "accPolyPerShare",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1133,
																			"src": "9409:20:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1943,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1922,
																				"src": "9393:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1944,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9393:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 957,
																		"src": "9393:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9393:37:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 979,
																"src": "9393:41:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9393:47:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 923,
														"src": "9393:51:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9393:68:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9374:87:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1957,
														"name": "_pending",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1942,
														"src": "9476:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1958,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9487:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9476:12:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1971,
												"nodeType": "IfStatement",
												"src": "9472:129:6",
												"trueBody": {
													"id": 1970,
													"nodeType": "Block",
													"src": "9490:111:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1961,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "9522:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1962,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "9531:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1960,
																	"name": "safePolyTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "9505:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9505:35:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1964,
															"nodeType": "ExpressionStatement",
															"src": "9505:35:6"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1966,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "9571:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1967,
																		"name": "_pending",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "9580:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1965,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "9560:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9560:29:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1969,
															"nodeType": "EmitStatement",
															"src": "9555:34:6"
														}
													]
												}
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1974,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1972,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1907,
														"src": "9615:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1973,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9625:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9615:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1995,
												"nodeType": "IfStatement",
												"src": "9611:138:6",
												"trueBody": {
													"id": 1994,
													"nodeType": "Block",
													"src": "9628:121:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1975,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1922,
																		"src": "9643:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																			"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																		}
																	},
																	"id": 1977,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1122,
																	"src": "9643:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1981,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1907,
																			"src": "9673:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1978,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1922,
																				"src": "9657:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																				}
																			},
																			"id": 1979,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1122,
																			"src": "9657:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 923,
																		"src": "9657:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9657:24:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9643:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1984,
															"nodeType": "ExpressionStatement",
															"src": "9643:38:6"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 1990,
																		"name": "_sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "9720:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 1991,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1907,
																		"src": "9729:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1985,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1916,
																			"src": "9696:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 1988,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1127,
																		"src": "9696:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1989,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 221,
																	"src": "9696:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1992,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9696:41:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1993,
															"nodeType": "ExpressionStatement",
															"src": "9696:41:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1996,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1922,
															"src": "9759:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "9759:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "31653138",
																"id": 2006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9819:4:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															],
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 2002,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1916,
																			"src": "9793:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																			}
																		},
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "accPolyPerShare",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1133,
																		"src": "9793:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1999,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1922,
																			"src": "9777:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																				"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
																			}
																		},
																		"id": 2000,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1122,
																		"src": "9777:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 957,
																	"src": "9777:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9777:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 979,
															"src": "9777:41:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9777:47:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9759:65:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "9759:65:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2011,
															"name": "_sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1911,
															"src": "9849:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2012,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "9858:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2013,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1907,
															"src": "9864:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2010,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1186,
														"src": "9840:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9840:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2015,
												"nodeType": "EmitStatement",
												"src": "9835:37:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "441a3e70",
									"id": 2017,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "9088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9088:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2017,
												"src": "9102:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9102:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9087:31:6"
									},
									"returnParameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9126:0:6"
									},
									"scope": 2193,
									"src": "9070:810:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2071,
										"nodeType": "Block",
										"src": "9999:329:6",
										"statements": [
											{
												"assignments": [
													2023
												],
												"declarations": [
													{
														"constant": false,
														"id": 2023,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2071,
														"src": "10010:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2022,
															"name": "PoolInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1136,
															"src": "10010:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.PoolInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2027,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 2024,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1145,
														"src": "10034:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
															"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 2026,
													"indexExpression": {
														"argumentTypes": null,
														"id": 2025,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2019,
														"src": "10043:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10034:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
														"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10010:38:6"
											},
											{
												"assignments": [
													2029
												],
												"declarations": [
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "user",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2071,
														"src": "10059:21:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo"
														},
														"typeName": {
															"contractScope": null,
															"id": 2028,
															"name": "UserInfo",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 1125,
															"src": "10059:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2036,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 2030,
															"name": "userInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1154,
															"src": "10083:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$_$",
																"typeString": "mapping(uint256 => mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref))"
															}
														},
														"id": 2032,
														"indexExpression": {
															"argumentTypes": null,
															"id": 2031,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "10092:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "10083:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$1125_storage_$",
															"typeString": "mapping(address => struct PolyGenesisRewardPool.UserInfo storage ref)"
														}
													},
													"id": 2035,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2033,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "10098:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "10098:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10083:26:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$1125_storage",
														"typeString": "struct PolyGenesisRewardPool.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10059:50:6"
											},
											{
												"assignments": [
													2038
												],
												"declarations": [
													{
														"constant": false,
														"id": 2038,
														"mutability": "mutable",
														"name": "_amount",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2071,
														"src": "10120:15:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2037,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10120:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2041,
												"initialValue": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 2039,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2029,
														"src": "10138:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
															"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
														}
													},
													"id": 2040,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1122,
													"src": "10138:11:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10120:29:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2042,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "10160:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2044,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1122,
														"src": "10160:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10174:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10160:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "10160:15:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2052,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2048,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "10186:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$1125_storage_ptr",
																"typeString": "struct PolyGenesisRewardPool.UserInfo storage pointer"
															}
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1124,
														"src": "10186:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10204:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10186:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2053,
												"nodeType": "ExpressionStatement",
												"src": "10186:19:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2059,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10240:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10240:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2061,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "10252:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2054,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2023,
																"src": "10216:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																	"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1127,
															"src": "10216:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "10216:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10216:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2063,
												"nodeType": "ExpressionStatement",
												"src": "10216:44:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 2065,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "10294:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "10294:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2067,
															"name": "_pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2019,
															"src": "10306:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 2068,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "10312:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2064,
														"name": "EmergencyWithdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "10276:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10276:44:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2070,
												"nodeType": "EmitStatement",
												"src": "10271:49:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "5312ea8e",
									"id": 2072,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "_pid",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2072,
												"src": "9978:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9978:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "9977:14:6"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9999:0:6"
									},
									"scope": 2193,
									"src": "9951:377:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2114,
										"nodeType": "Block",
										"src": "10515:300:6",
										"statements": [
											{
												"assignments": [
													2080
												],
												"declarations": [
													{
														"constant": false,
														"id": 2080,
														"mutability": "mutable",
														"name": "_PolyBalance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 2114,
														"src": "10526:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2079,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10526:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 2088,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 2085,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -28,
																	"src": "10572:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_PolyGenesisRewardPool_$2193",
																		"typeString": "contract PolyGenesisRewardPool"
																	}
																],
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10564:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2083,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10564:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10564:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2081,
															"name": "Poly",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "10549:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 126,
														"src": "10549:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10549:29:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10526:52:6"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 2089,
														"name": "_PolyBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2080,
														"src": "10593:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10608:1:6",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10593:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2113,
												"nodeType": "IfStatement",
												"src": "10589:219:6",
												"trueBody": {
													"id": 2112,
													"nodeType": "Block",
													"src": "10611:197:6",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2092,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "10630:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2093,
																	"name": "_PolyBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2080,
																	"src": "10640:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10630:22:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2110,
																"nodeType": "Block",
																"src": "10731:66:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2106,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2074,
																					"src": "10768:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2107,
																					"name": "_amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "10773:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2103,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10750:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2105,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10750:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10750:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2109,
																		"nodeType": "ExpressionStatement",
																		"src": "10750:31:6"
																	}
																]
															},
															"id": 2111,
															"nodeType": "IfStatement",
															"src": "10626:171:6",
															"trueBody": {
																"id": 2102,
																"nodeType": "Block",
																"src": "10654:71:6",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 2098,
																					"name": "_to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2074,
																					"src": "10691:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 2099,
																					"name": "_PolyBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2080,
																					"src": "10696:12:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 2095,
																					"name": "Poly",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1138,
																					"src": "10673:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 2097,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 221,
																				"src": "10673:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
																					"typeString": "function (contract IERC20,address,uint256)"
																				}
																			},
																			"id": 2100,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10673:36:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2101,
																		"nodeType": "ExpressionStatement",
																		"src": "10673:36:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 2115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePolyTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2074,
												"mutability": "mutable",
												"name": "_to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2115,
												"src": "10476:11:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10476:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2115,
												"src": "10489:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10489:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10475:30:6"
									},
									"returnParameters": {
										"id": 2078,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10515:0:6"
									},
									"scope": 2193,
									"src": "10450:365:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2126,
										"nodeType": "Block",
										"src": "10888:49:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2123,
															"name": "_Newoperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2117,
															"src": "10916:12:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2122,
														"name": "transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2269,
														"src": "10899:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10899:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "10899:30:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b3ab15fb",
									"id": 2127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2120,
											"modifierName": {
												"argumentTypes": null,
												"id": 2119,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "10875:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "10875:12:6"
										}
									],
									"name": "setOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2117,
												"mutability": "mutable",
												"name": "_Newoperator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2127,
												"src": "10844:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10844:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10843:22:6"
									},
									"returnParameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10888:0:6"
									},
									"scope": 2193,
									"src": "10823:114:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2191,
										"nodeType": "Block",
										"src": "11048:501:6",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 2138,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -4,
															"src": "11063:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "11063:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 2140,
															"name": "poolEndTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1161,
															"src": "11081:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3930",
															"id": 2141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11095:7:6",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_7776000_by_1",
																"typeString": "int_const 7776000"
															},
															"value": "90"
														},
														"src": "11081:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11063:39:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 2183,
												"nodeType": "IfStatement",
												"src": "11059:441:6",
												"trueBody": {
													"id": 2182,
													"nodeType": "Block",
													"src": "11104:396:6",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_contract$_IERC20_$187",
																			"typeString": "contract IERC20"
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 2145,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2129,
																			"src": "11227:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 2146,
																			"name": "Poly",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1138,
																			"src": "11237:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$187",
																				"typeString": "contract IERC20"
																			}
																		},
																		"src": "11227:14:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "506f6c79",
																		"id": 2148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11243:6:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		},
																		"value": "Poly"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_cc0d64153e884e99c45135430dd65c8d1084e51631864cd9fee71389237912d3",
																			"typeString": "literal_string \"Poly\""
																		}
																	],
																	"id": 2144,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "11219:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11219:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2150,
															"nodeType": "ExpressionStatement",
															"src": "11219:31:6"
														},
														{
															"assignments": [
																2152
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2152,
																	"mutability": "mutable",
																	"name": "length",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 2182,
																	"src": "11265:14:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2151,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11265:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 2155,
															"initialValue": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2153,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "11282:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																		"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "11282:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "11265:32:6"
														},
														{
															"body": {
																"id": 2180,
																"nodeType": "Block",
																"src": "11355:134:6",
																"statements": [
																	{
																		"assignments": [
																			2167
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2167,
																				"mutability": "mutable",
																				"name": "pool",
																				"nodeType": "VariableDeclaration",
																				"overrides": null,
																				"scope": 2180,
																				"src": "11374:21:6",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																				},
																				"typeName": {
																					"contractScope": null,
																					"id": 2166,
																					"name": "PoolInfo",
																					"nodeType": "UserDefinedTypeName",
																					"referencedDeclaration": 1136,
																					"src": "11374:8:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																						"typeString": "struct PolyGenesisRewardPool.PoolInfo"
																					}
																				},
																				"value": null,
																				"visibility": "internal"
																			}
																		],
																		"id": 2171,
																		"initialValue": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 2168,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1145,
																				"src": "11398:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$1136_storage_$dyn_storage",
																					"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 2170,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 2169,
																				"name": "pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2157,
																				"src": "11407:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "11398:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$1136_storage",
																				"typeString": "struct PolyGenesisRewardPool.PoolInfo storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "11374:37:6"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_contract$_IERC20_$187",
																						"typeString": "contract IERC20"
																					},
																					"id": 2176,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 2173,
																						"name": "_token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2129,
																						"src": "11438:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"argumentTypes": null,
																						"expression": {
																							"argumentTypes": null,
																							"id": 2174,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2167,
																							"src": "11448:4:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$1136_storage_ptr",
																								"typeString": "struct PolyGenesisRewardPool.PoolInfo storage pointer"
																							}
																						},
																						"id": 2175,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "token",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1127,
																						"src": "11448:10:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$187",
																							"typeString": "contract IERC20"
																						}
																					},
																					"src": "11438:20:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"hexValue": "706f6f6c2e746f6b656e",
																					"id": 2177,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "11460:12:6",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					},
																					"value": "pool.token"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_8916c5c11921b202b1fc4123cdeedcbf7d05585e14a36b416937a34c657ef681",
																						"typeString": "literal_string \"pool.token\""
																					}
																				],
																				"id": 2172,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-18,
																					-18
																				],
																				"referencedDeclaration": -18,
																				"src": "11430:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2178,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11430:43:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2179,
																		"nodeType": "ExpressionStatement",
																		"src": "11430:43:6"
																	}
																]
															},
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 2160,
																	"name": "pid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2157,
																	"src": "11334:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 2161,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "11340:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11334:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2181,
															"initializationExpression": {
																"assignments": [
																	2157
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2157,
																		"mutability": "mutable",
																		"name": "pid",
																		"nodeType": "VariableDeclaration",
																		"overrides": null,
																		"scope": 2181,
																		"src": "11317:11:6",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2156,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "11317:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"value": null,
																		"visibility": "internal"
																	}
																],
																"id": 2159,
																"initialValue": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11331:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "11317:15:6"
															},
															"loopExpression": {
																"expression": {
																	"argumentTypes": null,
																	"id": 2164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "11348:5:6",
																	"subExpression": {
																		"argumentTypes": null,
																		"id": 2163,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2157,
																		"src": "11350:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2165,
																"nodeType": "ExpressionStatement",
																"src": "11348:5:6"
															},
															"nodeType": "ForStatement",
															"src": "11312:177:6"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2187,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "11530:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 2188,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2131,
															"src": "11534:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2184,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2129,
															"src": "11510:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$187",
																"typeString": "contract IERC20"
															}
														},
														"id": 2186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 221,
														"src": "11510:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$187_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$187_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11510:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2190,
												"nodeType": "ExpressionStatement",
												"src": "11510:31:6"
											}
										]
									},
									"documentation": null,
									"functionSelector": "54575af4",
									"id": 2192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2136,
											"modifierName": {
												"argumentTypes": null,
												"id": 2135,
												"name": "onlyOperator",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 2246,
												"src": "11035:12:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "11035:12:6"
										}
									],
									"name": "governanceRecoverUnsupported",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "10983:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$187",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 2128,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 187,
													"src": "10983:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$187",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2131,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "10998:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10998:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2192,
												"src": "11014:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "10982:43:6"
									},
									"returnParameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11048:0:6"
									},
									"scope": 2193,
									"src": "10945:604:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2194,
							"src": "462:11090:6"
						}
					],
					"src": "35:11521:6"
				},
				"id": 6
			},
			"contracts/owner/Operator.sol": {
				"ast": {
					"absolutePath": "contracts/owner/Operator.sol",
					"exportedSymbols": {
						"Operator": [
							2304
						]
					},
					"id": 2305,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2195,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 2196,
							"nodeType": "ImportDirective",
							"scope": 2305,
							"sourceUnit": 110,
							"src": "70:52:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 2197,
							"nodeType": "ImportDirective",
							"scope": 2305,
							"sourceUnit": 720,
							"src": "124:51:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2198,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 719,
										"src": "209:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$719",
											"typeString": "contract Context"
										}
									},
									"id": 2199,
									"nodeType": "InheritanceSpecifier",
									"src": "209:7:7"
								},
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 2200,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 109,
										"src": "218:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$109",
											"typeString": "contract Ownable"
										}
									},
									"id": 2201,
									"nodeType": "InheritanceSpecifier",
									"src": "218:7:7"
								}
							],
							"contractDependencies": [
								109,
								719
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 2304,
							"linearizedBaseContracts": [
								2304,
								109,
								719
							],
							"name": "Operator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2203,
									"mutability": "mutable",
									"name": "_operator",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 2304,
									"src": "233:25:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2202,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "233:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 2209,
									"name": "OperatorTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2205,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOperator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "303:32:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "303:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2207,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2209,
												"src": "346:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "292:88:7"
									},
									"src": "267:114:7"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "412:101:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2212,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "423:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2213,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "435:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "435:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "423:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2216,
												"nodeType": "ExpressionStatement",
												"src": "423:24:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "491:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "483:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2218,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "483:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "483:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2222,
															"name": "_operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2203,
															"src": "495:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2217,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "463:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "463:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "EmitStatement",
												"src": "458:47:7"
											}
										]
									},
									"documentation": null,
									"id": 2226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "400:2:7"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "412:0:7"
									},
									"scope": 2304,
									"src": "389:124:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2233,
										"nodeType": "Block",
										"src": "571:35:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 2231,
													"name": "_operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2203,
													"src": "589:9:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2230,
												"id": 2232,
												"nodeType": "Return",
												"src": "582:16:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "570ca735",
									"id": 2234,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "538:2:7"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2234,
												"src": "562:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "561:9:7"
									},
									"scope": 2304,
									"src": "521:85:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2245,
										"nodeType": "Block",
										"src": "638:140:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2237,
																"name": "_operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2203,
																"src": "671:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 2238,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "684:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "684:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "671:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f70657261746f723a2063616c6c6572206973206e6f7420746865206f70657261746f72",
															"id": 2241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "709:38:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															},
															"value": "operator: caller is not the operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a62bfdba5053072911b63b0f6325b0e83fcd28b5a847d97efdd966feb4daaafb",
																"typeString": "literal_string \"operator: caller is not the operator\""
															}
														],
														"id": 2236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "649:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "649:109:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2243,
												"nodeType": "ExpressionStatement",
												"src": "649:109:7"
											},
											{
												"id": 2244,
												"nodeType": "PlaceholderStatement",
												"src": "769:1:7"
											}
										]
									},
									"documentation": null,
									"id": 2246,
									"name": "onlyOperator",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "635:2:7"
									},
									"src": "614:164:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2256,
										"nodeType": "Block",
										"src": "835:51:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 2251,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "853:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "853:12:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 2253,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "869:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "853:25:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2250,
												"id": 2255,
												"nodeType": "Return",
												"src": "846:32:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "4456eda2",
									"id": 2257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:7"
									},
									"returnParameters": {
										"id": 2250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2257,
												"src": "829:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2248,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "829:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "828:6:7"
									},
									"scope": 2304,
									"src": "786:100:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2268,
										"nodeType": "Block",
										"src": "959:50:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2265,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "988:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2264,
														"name": "_transferOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2303,
														"src": "970:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "970:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2267,
												"nodeType": "ExpressionStatement",
												"src": "970:31:7"
											}
										]
									},
									"documentation": null,
									"functionSelector": "29605e77",
									"id": 2269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 2262,
											"modifierName": {
												"argumentTypes": null,
												"id": 2261,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 58,
												"src": "949:9:7",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "949:9:7"
										}
									],
									"name": "transferOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2269,
												"src": "920:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "919:22:7"
									},
									"returnParameters": {
										"id": 2263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:7"
									},
									"scope": 2304,
									"src": "894:115:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2302,
										"nodeType": "Block",
										"src": "1075:286:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 2275,
																"name": "newOperator_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2271,
																"src": "1108:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 2278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1132:1:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1124:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2276,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1124:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1124:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1108:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f70657261746f723a207a65726f206164647265737320676976656e20666f72206e6577206f70657261746f72",
															"id": 2281,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1149:47:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															},
															"value": "operator: zero address given for new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_756508c1c0554725dd91ce0028667672a5318d736a5e4bcd98b6bc8fe98c3dc7",
																"typeString": "literal_string \"operator: zero address given for new operator\""
															}
														],
														"id": 2274,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1086:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1086:121:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "1086:121:7"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1251:1:7",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1243:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2285,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1243:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1243:10:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 2289,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "1255:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2284,
														"name": "OperatorTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2209,
														"src": "1223:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1223:45:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "EmitStatement",
												"src": "1218:50:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 2295,
															"name": "newOperator_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2271,
															"src": "1305:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 2292,
															"name": "Ownable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 109,
															"src": "1279:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Ownable_$109_$",
																"typeString": "type(contract Ownable)"
															}
														},
														"id": 2294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 108,
														"src": "1279:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1279:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "1279:39:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 2300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 2298,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "1329:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 2299,
														"name": "newOperator_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2271,
														"src": "1341:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1329:24:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2301,
												"nodeType": "ExpressionStatement",
												"src": "1329:24:7"
											}
										]
									},
									"documentation": null,
									"id": 2303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOperator",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2271,
												"mutability": "mutable",
												"name": "newOperator_",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 2303,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1043:22:7"
									},
									"returnParameters": {
										"id": 2273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1075:0:7"
									},
									"scope": 2304,
									"src": "1017:344:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2305,
							"src": "179:1185:7"
						}
					],
					"src": "35:1331:7"
				},
				"id": 7
			}
		}
	}
}